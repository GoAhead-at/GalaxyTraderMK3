<?xml version="1.0" encoding="utf-8"?>
<diff>
  <!-- GalaxyTrader MK3: Direct trade completion signalling patch -->
  <!-- This patch adds immediate XP signalling when trades complete successfully -->
  
  <!-- PHASE 0.5: Escape Logic - Allow trades FROM blacklisted sectors (ship's current sector) -->
  <!-- This patches vanilla's blacklist check to add escape exception -->
  <!-- First blacklist check (before docking) -->
  <add sel="//aiscript[@name='order.trade.perform']/attention/actions/include_interrupt_actions[@ref='GetBlacklistgroup']" pos="after">
    
    <!-- ✅ ESCAPE LOGIC: Only for GalaxyTrader ships -->
    <!-- Check if ship is in target sector (escape FROM blacklisted sector) -->
    <set_value name="$allowEscapeTrade" exact="false"/>
    <do_if value="this.ship.pilot and global.$GT_Pilots? and global.$GT_Pilots.{this.ship.pilot}?">
      <!-- Only apply escape logic to GalaxyTrader ships -->
      <set_value name="$shipCurrentSector" exact="@this.assignedcontrolled.sector"/>
      <set_value name="$commanderSector" exact="@this.assignedcontrolled.commander.sector"/>
      <set_value name="$targetSector" exact="@$targetobject.sector"/>
      
      <!-- ✅ ESCAPE EXCEPTION: Allow trades if ship is already IN target sector (escape FROM) -->
      <!-- OR if target sector is commander's sector (vanilla exception) -->
      <do_if value="$targetSector and $shipCurrentSector and $targetSector == $shipCurrentSector">
        <!-- Ship is already in target sector - allow escape FROM blacklisted sector -->
        <set_value name="$allowEscapeTrade" exact="true"/>
        <debug_text text="'[GT-TradePerform] ✅ ESCAPE TRADE ALLOWED: ' + this.ship.idcode + ' in target sector (escape FROM blacklisted sector)'" chance="100"/>
      </do_if>
      <do_elseif value="$targetSector and $commanderSector and $targetSector == $commanderSector">
        <!-- Vanilla exception: Commander's sector (already in vanilla code) -->
        <set_value name="$allowEscapeTrade" exact="true"/>
      </do_elseif>
    </do_if>
    
  </add>
  
  <!-- Replace vanilla's first blacklist check with escape-aware version -->
  <replace sel="//aiscript[@name='order.trade.perform']/attention/actions/do_if[@value='$internalorder and ($targetobject.isblacklisted.{blacklisttype.objectactivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled}) and $targetobject.sector and ($targetobject.sector != @this.assignedcontrolled.commander.sector)']">
    <!-- ✅ ESCAPE-AWARE BLACKLIST CHECK: Skip check if escape trade is allowed -->
    <do_if value="$internalorder and not $allowEscapeTrade and ($targetobject.isblacklisted.{blacklisttype.objectactivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled}) and $targetobject.sector and ($targetobject.sector != @this.assignedcontrolled.commander.sector)">
      <debug_text text="'trade partner: %s %s %s %s is blacklisted. aborting trade.'.[@$targetobject.class, @$targetobject.idcode, @$targetobject.knownname, $targetobject]" chance="$debugchance"/>
      <!-- this is not an error. trade will fail in this case since we will refuse to trade with this trade partner. -->
      <set_value name="$failreason" exact="'TRADEPARTNER_BLACKLISTED'"/>
      <set_value name="$failuretext" exact="{1045, 124}" comment="Trade partner is blacklisted."/>
      <resume label="finish"/>
    </do_if>
  </replace>
  
  <!-- PHASE 0.6: Escape Logic - Second check after docking (same logic) -->
  <add sel="//aiscript[@name='order.trade.perform']/attention/actions/label[@name='perform_trade']" pos="before">
    
    <!-- ✅ ESCAPE LOGIC: Re-check for escape trade after docking (only for GalaxyTrader ships) -->
    <set_value name="$allowEscapeTrade2" exact="false"/>
    <do_if value="this.ship.pilot and global.$GT_Pilots? and global.$GT_Pilots.{this.ship.pilot}?">
      <!-- Only apply escape logic to GalaxyTrader ships -->
      <set_value name="$shipCurrentSector2" exact="@this.assignedcontrolled.sector"/>
      <set_value name="$commanderSector2" exact="@this.assignedcontrolled.commander.sector"/>
      <set_value name="$targetSector2" exact="@$targetobject.sector"/>
      
      <!-- ✅ ESCAPE EXCEPTION: Allow trades if ship is already IN target sector (escape FROM) -->
      <do_if value="$targetSector2 and $shipCurrentSector2 and $targetSector2 == $shipCurrentSector2">
        <set_value name="$allowEscapeTrade2" exact="true"/>
        <debug_text text="'[GT-TradePerform] ✅ ESCAPE TRADE ALLOWED (post-dock): ' + this.ship.idcode + ' in target sector (escape FROM blacklisted sector)'" chance="100"/>
      </do_if>
      <do_elseif value="$targetSector2 and $commanderSector2 and $targetSector2 == $commanderSector2">
        <!-- Vanilla exception: Commander's sector (already in vanilla code) -->
        <set_value name="$allowEscapeTrade2" exact="true"/>
      </do_elseif>
    </do_if>
    
  </add>
  
  <!-- Replace vanilla's second blacklist check (after docking) with escape-aware version -->
  <replace sel="//aiscript[@name='order.trade.perform']/attention/actions/do_if[@value='$internalorder and ($targetobject.isblacklisted.{blacklisttype.objectactivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled}) and $targetobject.sector and ($targetobject.sector != @this.assignedcontrolled.commander.sector)'][2]">
    <!-- ✅ ESCAPE-AWARE BLACKLIST CHECK: Skip check if escape trade is allowed -->
    <do_if value="$internalorder and not $allowEscapeTrade2 and ($targetobject.isblacklisted.{blacklisttype.objectactivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectoractivity}.{$blacklistgroup}.{this.assignedcontrolled} or @$targetobject.sector.isblacklisted.{blacklisttype.sectortravel}.{$blacklistgroup}.{this.assignedcontrolled}) and $targetobject.sector and ($targetobject.sector != @this.assignedcontrolled.commander.sector)">
      <debug_text text="'was about to dock but trade partner: %s %s %s %s is blacklisted. aborting trade.'.[@$targetobject.class, @$targetobject.idcode, @$targetobject.knownname, $targetobject]" chance="$debugchance"/>
      <!-- this is not an error. trade will fail in this case since we will refuse to trade with this trade partner. -->
      <set_value name="$failreason" exact="'TRADEPARTNER_BLACKLISTED'"/>
      <set_value name="$failuretext" exact="{1045, 124}" comment="Trade partner is blacklisted."/>
      <resume label="finish"/>
    </do_if>
  </replace>
  
  <!-- PHASE 0: Check for Dock Failure Signals -->
  <!-- This runs AFTER dock order completes, BEFORE trade execution -->
  <add sel="//aiscript[@name='order.trade.perform']/attention/actions/label[@name='perform_trade']" pos="after">
    
    <!-- GALAXYTRADER MK3: Check if dock order failed due to pathfinding -->
    <do_if value="global.$GT_DockFailures? and global.$GT_DockFailures.{this.ship}?">
      <do_if value="global.$GT_Pilots? and global.$GT_Pilots.{this.ship.pilot}?">
        <!-- Dock failed - set trade failure reason -->
        <set_value name="$dockFailure" exact="global.$GT_DockFailures.{this.ship}"/>
        <set_value name="$failreason" exact="$dockFailure.$Reason"/>
        <set_value name="$failuretext" exact="$dockFailure.$FailureText"/>
        
        <!-- Clean up global entry -->
        <remove_value name="global.$GT_DockFailures.{this.ship}"/>
        
        <debug_text text="'[GT-TradePerform] ⚠ Dock failure detected: ' + $failreason + ' for ' + this.ship.idcode + ' (target: ' + @$targetobject.knownname + ')'" chance="100"/>
        
        <!-- Abort trade and go to finish label where failure will be queued -->
        <resume label="finish"/>
      </do_if>
      <do_else>
        <!-- Not a GT-managed ship, but clean up anyway -->
        <remove_value name="global.$GT_DockFailures.{this.ship}"/>
      </do_else>
    </do_if>
    
  </add>
  
  <!-- PHASE 1.1: Add Failure Signal Detection -->
  <!-- This runs when resume label="finish" is called (including from vanilla blacklist check) -->
  <add sel="//aiscript[@name='order.trade.perform']/attention/actions/label[@name='finish']" pos="after">
    
    <!-- GALAXYTRADER MK3: Trade failure signalling -->
    <do_if value="$failreason != ''">
      <do_if value="global.$GT_Pilots? and global.$GT_Pilots.{this.ship.pilot}?">
        <set_value name="$failure_data" exact="table[
          $ship = this.ship,
          $pilot = this.ship.pilot,
          $reason = $failreason,
          $failureText = @$failuretext,
          $ware = @$tradedeal.ware,
          $partner = @$targetobject,
          $isBuying = $isbuying,
          $timestamp = player.age
        ]"/>
        
        <do_if value="not global.$GT_TradeFailureQueue?">
          <set_value name="global.$GT_TradeFailureQueue" exact="[]"/>
        </do_if>
        
        <append_to_list name="global.$GT_TradeFailureQueue" exact="$failure_data"/>
        <set_value name="global.$GT_TradeFailurePending" exact="true"/>
        
        <debug_text text="'[GT-TradePerform] ⚠ Trade FAILED: ' + $failreason + ' for ' + this.ship.idcode + ' (partner: ' + @$targetobject.knownname + ')'" chance="100"/>
      </do_if>
    </do_if>
    
  </add>
  
  <!-- PHASE 1.2: Add Buy Completion Signal (Analytics) -->
  <add sel="//aiscript[@name='order.trade.perform']/attention/actions/label[@name='finish']" pos="after">
    
    <!-- GALAXYTRADER MK3: Buy completion tracking -->
    <do_if value="$failreason == '' and $traderesult and $isbuying">
      <do_if value="global.$GT_Pilots? and global.$GT_Pilots.{this.ship.pilot}?">
        <set_value name="$buy_data" exact="table[
          $ship = this.ship,
          $ware = $tradedeal.ware,
          $amount = $tradedeal.transferredamount,
          $unitPrice = $tradedeal.unitprice,
          $partner = $targetobject,
          $timestamp = player.age
        ]"/>
        
        <do_if value="not global.$GT_BuyCompleteQueue?">
          <set_value name="global.$GT_BuyCompleteQueue" exact="[]"/>
        </do_if>
        
        <append_to_list name="global.$GT_BuyCompleteQueue" exact="$buy_data"/>
        <set_value name="global.$GT_BuyCompletePending" exact="true"/>
        
        <debug_text text="'[GT-TradePerform] ✅ BUY complete: ' + this.ship.idcode + ' bought ' + $tradedeal.transferredamount + ' ' + $tradedeal.ware" chance="100"/>
      </do_if>
    </do_if>
    
  </add>
  
  <!-- PHASE 1: Sell Completion (Existing XP System) -->
  <add sel="//aiscript[@name='order.trade.perform']/attention/actions/label[@name='finish']" pos="after">
    
    <!-- GALAXYTRADER MK3: Direct trade completion signalling -->
    <!-- CRITICAL FIX: Only award XP on SELL operations (complete trades), not BUY operations -->
    <do_if value="$failreason == '' and $traderesult and this.ship.pilot and not $isbuying">
      <!-- Check if this pilot is managed by GalaxyTrader MK3 -->
      <do_if value="global.$GT_Pilots? and global.$GT_Pilots.{this.ship.pilot}?">
        
        <!-- Calculate GalaxyTrader XP (enhanced version of native XP) -->
        <!-- READ FROM SINGLE SOURCE OF TRUTH CONFIGURATION -->
        <set_value name="$gt_base_xp" exact="@global.$GT_Config.$XP.$BaseXPPerTrade"/>
        <set_value name="$gt_value_divisor" exact="@global.$GT_Config.$XP.$ValueDivisor"/>
        <set_value name="$gt_quality_multiplier" exact="@global.$GT_Config.$XP.$QualityMultiplier"/>
        <set_value name="$gt_max_distance" exact="@global.$GT_Config.$XP.$MaxDistanceForBonus"/>
        <set_value name="$gt_distance_divisor" exact="@global.$GT_Config.$XP.$DistanceBonusDivisor"/>
        <set_value name="$gt_min_xp" exact="@global.$GT_Config.$XP.$MinXPPerTrade"/>
        <set_value name="$gt_max_xp" exact="@global.$GT_Config.$XP.$MaxXPPerTrade"/>
        
        <!-- Apply configuration values with fallbacks for safety -->
        <do_if value="not $gt_base_xp?">
          <set_value name="$gt_base_xp" exact="50"/>  <!-- Fallback if config not loaded -->
        </do_if>
        <do_if value="not $gt_value_divisor?">
          <set_value name="$gt_value_divisor" exact="10000"/>
        </do_if>
        <do_if value="not $gt_quality_multiplier?">
          <set_value name="$gt_quality_multiplier" exact="0.5"/>
        </do_if>
        <do_if value="not $gt_max_distance?">
          <set_value name="$gt_max_distance" exact="10"/>
        </do_if>
        <do_if value="not $gt_distance_divisor?">
          <set_value name="$gt_distance_divisor" exact="20.0"/>
        </do_if>
        <do_if value="not $gt_min_xp?">
          <set_value name="$gt_min_xp" exact="10"/>
        </do_if>
        <do_if value="not $gt_max_xp?">
          <set_value name="$gt_max_xp" exact="1000"/>
        </do_if>
        
        <!-- Calculate XP components using configuration values -->
        <set_value name="$gt_value_multiplier" exact="(($tradedeal.unitprice * $tradedeal.transferredamount) / ($gt_value_divisor * 1Cr))f"/>
        <set_value name="$gt_quality_bonus" exact="1.0 + ($tradequality * $gt_quality_multiplier)"/>
        <set_value name="$gt_distance_bonus" exact="1.0"/>  <!-- Will be calculated below -->
        
        <!-- Calculate distance bonus if we can determine trade partner distance -->
        <do_if value="this.ship.sector? and $targetobject.sector?">
          <set_value name="$sector_distance" exact="this.ship.sector.distanceto.{$targetobject.sector}"/>
          <do_if value="$sector_distance gt 0">
            <!-- Distance bonus using configuration values -->
            <set_value name="$gt_distance_bonus" exact="1.0 + ([$sector_distance, $gt_max_distance].min / $gt_distance_divisor)"/>
          </do_if>
        </do_if>
        
        <!-- Final XP calculation -->
        <set_value name="$gt_xp_amount" exact="($gt_base_xp * $gt_value_multiplier * $gt_quality_bonus * $gt_distance_bonus)i"/>
        
        <!-- Apply player-configurable XP multiplier (50-200%, default 100%) -->
        <set_value name="$gt_xp_multiplier" exact="@global.$GT_GlobalSettings.$XP.$XPMultiplier"/>
        <do_if value="not $gt_xp_multiplier? or $gt_xp_multiplier lt 50 or $gt_xp_multiplier gt 200">
          <set_value name="$gt_xp_multiplier" exact="100"/>  <!-- Fallback to 100% if invalid -->
        </do_if>
        <set_value name="$gt_xp_amount" exact="($gt_xp_amount * ($gt_xp_multiplier / 100.0))i"/>
        
        <!-- Cap XP to configured range -->
        <do_if value="$gt_xp_amount lt $gt_min_xp">
          <set_value name="$gt_xp_amount" exact="$gt_min_xp"/>
        </do_if>
        <do_if value="$gt_xp_amount gt $gt_max_xp">
          <set_value name="$gt_xp_amount" exact="$gt_max_xp"/>
        </do_if>
        
        <!-- Calculate actual profit (revenue - purchase cost) -->
        <set_value name="$sellRevenue" exact="$tradedeal.unitprice * $tradedeal.transferredamount"/>
        <set_value name="$purchaseCost" exact="0"/>
        <set_value name="$actualProfit" exact="$sellRevenue"/>
        
        <!-- Look up purchase cost from cargo tracking -->
        <do_if value="global.$GT_CargoCostTracking? and global.$GT_CargoCostTracking.{this.ship}? and 
                      global.$GT_CargoCostTracking.{this.ship}.{$tradedeal.ware}?">
          <set_value name="$cargoTracking" exact="global.$GT_CargoCostTracking.{this.ship}.{$tradedeal.ware}"/>
          
          <!-- Calculate weighted average purchase price -->
          <do_if value="$cargoTracking.$Amount gt 0">
            <set_value name="$avgPurchasePrice" exact="$cargoTracking.$TotalCost / $cargoTracking.$Amount"/>
            <set_value name="$purchaseCost" exact="($avgPurchasePrice * $tradedeal.transferredamount)i"/>
            <set_value name="$actualProfit" exact="$sellRevenue - $purchaseCost"/>
            
            <!-- Update cargo tracking: reduce tracked amount and cost -->
            <set_value name="$remainingAmount" exact="$cargoTracking.$Amount - $tradedeal.transferredamount"/>
            <do_if value="$remainingAmount le 0">
              <!-- All units sold - remove tracking entry -->
              <remove_value name="global.$GT_CargoCostTracking.{this.ship}.{$tradedeal.ware}"/>
            </do_if>
            <do_else>
              <!-- Partial sale - update tracking -->
              <set_value name="global.$GT_CargoCostTracking.{this.ship}.{$tradedeal.ware}.$Amount" 
                          exact="$remainingAmount"/>
              <set_value name="global.$GT_CargoCostTracking.{this.ship}.{$tradedeal.ware}.$TotalCost" 
                          exact="($avgPurchasePrice * $remainingAmount)i"/>
            </do_else>
          </do_if>
        </do_if>
        
        <!-- Store rich trade data for advanced XP processing -->
        <set_value name="$trade_data" exact="table[
            $pilot = this.ship.pilot,
            $ship = this.ship,
            $xpAmount = $gt_xp_amount,
            $ware = $tradedeal.ware,
            $tradeValue = $actualProfit,
            $sellRevenue = $sellRevenue,
            $purchaseCost = $purchaseCost,
            $transferredAmount = $tradedeal.transferredamount,
            $unitPrice = $tradedeal.unitprice,
            $tradeQuality = $tradequality,
            $partner = $targetobject,
            $partnerSector = $targetobject.sector,
            $shipSector = this.ship.sector,
            $isPlayerOwned = this.ship.isplayerowned,
            $timestamp = player.age,
            $valueMultiplier = $gt_value_multiplier,
            $qualityBonus = $gt_quality_bonus,
            $distanceBonus = $gt_distance_bonus
        ]"/>
        
        <!-- Store trade data in global queue for MD system to process -->
        <do_if value="not global.$GT_DirectTradeQueue?">
          <set_value name="global.$GT_DirectTradeQueue" exact="[]"/>
        </do_if>
        
        <!-- Add trade data to queue -->
        <append_to_list name="global.$GT_DirectTradeQueue" exact="$trade_data"/>
        
        <!-- Set flag to trigger MD processing -->
        <set_value name="global.$GT_DirectTradePending" exact="true"/>
        
        <debug_text text="'[GT-TradePerform] 🎯 DIRECT XP QUEUED (SELL ONLY): Pilot ' + this.ship.pilot.name + ' earned ' + $gt_xp_amount + ' XP for ' + $tradedeal.ware + ' trade' +
                          '\n  Revenue: ' + ($sellRevenue / 100) + ' Cr, Cost: ' + ($purchaseCost / 100) + ' Cr, PROFIT: ' + ($actualProfit / 100) + ' Cr' +
                          '\n  Quality: ' + $tradequality + ', Distance bonus: ' + $gt_distance_bonus" 
                    chance="100"/>
      </do_if>
    </do_if>
    
  </add>
</diff>
