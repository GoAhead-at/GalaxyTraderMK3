<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GT_Data_Utilities" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../ORIGINAL_MODS_DO NOT_MODIFY/X4Original/libraries/md.xsd">
  <cues>
    
    <!-- Register pilot with the GT system -->
    <library name="Register_Pilot">
      <params>
        <param name="pilot" comment="Pilot to register"/>
        <param name="ship" comment="Ship associated with pilot"/>
        <param name="debuglevel" default="1" comment="Debug output level"/>
      </params>
      <actions>
        <!-- Initialize global pilot registry if needed -->
        <do_if value="not global.$GT_Pilots?">
          <set_value name="global.$GT_Pilots" exact="table[]"/>
        </do_if>
        
        <!-- Check if pilot is new or existing -->
        <do_if value="not global.$GT_Pilots.{$pilot}?">
          <!-- New pilot - initialize data -->
          <set_value name="global.$GT_Pilots.{$pilot}" exact="table[
            $Name = $pilot.name,
            $RegistrationTime = player.age,
            $LastActiveTime = player.age,
            $TotalXP = 0,
            $TradesCompleted = 0,
            $ProfitGenerated = 0Cr,
            $RequiresTraining = false,
            $CurrentlyTraining = false,
            $Ship = $ship
          ]"/>
          
          <do_if value="$debuglevel ge 1">
            <debug_text text="'[GT Data] Registered new pilot: ' + $pilot.name + ' for ship ' + $ship.idcode" chance="100"/>
          </do_if>
        </do_if>
        <do_else>
          <!-- Existing pilot - update activity -->
          <set_value name="global.$GT_Pilots.{$pilot}.$LastActiveTime" exact="player.age"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$Ship" exact="$ship"/>
          
          <do_if value="$debuglevel ge 2">
            <debug_text text="'[GT Data] Updated existing pilot: ' + $pilot.name + ' for ship ' + $ship.idcode" chance="100"/>
          </do_if>
        </do_else>
      </actions>
    </library>
    
    <!-- Register ship with the GT system -->
    <library name="Register_Ship">
      <params>
        <param name="ship" comment="Ship to register"/>
        <param name="debuglevel" default="1" comment="Debug output level"/>
      </params>
      <actions>
        <!-- Initialize global ship registry if needed -->
        <do_if value="not global.$GT_Ships?">
          <set_value name="global.$GT_Ships" exact="table[]"/>
        </do_if>
        
        <!-- Register or update ship -->
        <do_if value="not global.$GT_Ships.{$ship}?">
          <!-- New ship - initialize data -->
          <set_value name="global.$GT_Ships.{$ship}" exact="table[
            $Name = $ship.knownname,
            $IDCode = $ship.idcode,
            $RegistrationTime = player.age,
            $LastActiveTime = player.age,
            $IsSubordinate = false,
            $Commander = null,
            $FleetPosition = 0,
            $TotalTrades = 0,
            $TotalProfit = 0,
            $LastTradeTime = null
          ]"/>
          
          <!-- Check if ship is subordinate -->
          <do_if value="$ship.commander and $ship.commander != $ship">
            <set_value name="global.$GT_Ships.{$ship}.$IsSubordinate" exact="true"/>
            <set_value name="global.$GT_Ships.{$ship}.$Commander" exact="$ship.commander"/>
            
            <!-- Calculate fleet position -->
            <set_value name="$fleetSubordinates" exact="$ship.commander.subordinates"/>
            <do_all exact="$fleetSubordinates.count" counter="$i">
              <do_if value="$fleetSubordinates.{$i} == $ship">
                <set_value name="global.$GT_Ships.{$ship}.$FleetPosition" exact="$i"/>
                <break/>
              </do_if>
            </do_all>
          </do_if>
          
          <do_if value="$debuglevel ge 1">
            <debug_text text="'[GT Data] Registered new ship: ' + $ship.knownname + ' (' + $ship.idcode + ')'" chance="100"/>
          </do_if>
        </do_if>
        <do_else>
          <!-- Existing ship - update activity -->
          <set_value name="global.$GT_Ships.{$ship}.$LastActiveTime" exact="player.age"/>
          
          <do_if value="$debuglevel ge 2">
            <debug_text text="'[GT Data] Updated existing ship: ' + $ship.knownname + ' (' + $ship.idcode + ')'" chance="100"/>
          </do_if>
        </do_else>
      </actions>
    </library>
    
    <!-- Initialize global systems if needed -->
    <library name="Ensure_Global_Systems">
      <params>
        <param name="debuglevel" default="1" comment="Debug output level"/>
      </params>
      <actions>
        <set_value name="$systemsInitialized" exact="0"/>
        
        <!-- Initialize ThreatIntelligence system -->
        <do_if value="not global.$GT_ThreatIntelligence?">
          <set_value name="global.$GT_ThreatIntelligence" exact="table[]"/>
          <set_value name="$systemsInitialized" exact="$systemsInitialized + 1"/>
        </do_if>
        
        <!-- Trade cache is NOT pre-initialized - X4 locks empty table[] -->
        <!-- It will be created WITH data on first cache write -->
        
        <!-- Initialize global configuration if needed -->
        <do_if value="not global.$GT_GlobalSettings?">
          <set_value name="global.$GT_GlobalSettings" exact="table[
            $XP = table[
              $EnableXPProgression = true,
              $AutoTraining = true,
              $BaseXPPerTrade = 25,
              $DistanceBonus = 20,
              $RiskBonus = 25
            ],
            $Fleet = table[
              $EnableFleetCoordination = true,
              $EnableTradeCache = true,
              $CacheProfitThreshold = 20,
              $CacheDropoffTolerance = 15,
              $CacheTTL = 5min
            ],
            $Debug = table[
              $DebugLevel = 1,
              $TradeEvaluation = false
            ]
          ]"/>
          <set_value name="$systemsInitialized" exact="$systemsInitialized + 1"/>
        </do_if>
        
        <do_if value="$systemsInitialized gt 0 and $debuglevel ge 1">
          <debug_text text="'[GT Data] Initialized ' + $systemsInitialized + ' global systems'" chance="100"/>
        </do_if>
      </actions>
    </library>
    
    <!-- Clean up pilot data (safe removal) -->
    <library name="Cleanup_Pilot_Data">
      <params>
        <param name="pilot" comment="Pilot to remove data for"/>
        <param name="debuglevel" default="1" comment="Debug output level"/>
      </params>
      <actions>
        <do_if value="$pilot? and global.$GT_Pilots? and global.$GT_Pilots.{$pilot}?">
          <remove_value name="global.$GT_Pilots.{$pilot}"/>
          
          <do_if value="$debuglevel ge 1">
            <debug_text text="'[GT Data] Cleaned up data for pilot: ' + $pilot.name" chance="100"/>
          </do_if>
        </do_if>
      </actions>
    </library>
    
    <!-- Clean up ship data (safe removal) -->
    <library name="Cleanup_Ship_Data">
      <params>
        <param name="ship" comment="Ship to remove data for"/>
        <param name="debuglevel" default="1" comment="Debug output level"/>
      </params>
      <actions>
        <do_if value="$ship? and global.$GT_Ships? and global.$GT_Ships.{$ship}?">
          <remove_value name="global.$GT_Ships.{$ship}"/>
          
          <do_if value="$debuglevel ge 1">
            <debug_text text="'[GT Data] Cleaned up data for ship: ' + $ship.knownname + ' (' + $ship.idcode + ')'" chance="100"/>
          </do_if>
        </do_if>
      </actions>
    </library>
    
    <!-- Get fleet coordination delay for subordinate -->
    <library name="Get_Fleet_Startup_Delay" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to calculate delay for"/>
      </params>
      <actions>
        <set_value name="$delay" exact="0"/>
        
        <!-- Check if ship is subordinate -->
        <do_if value="global.$GT_Ships.{$ship}? and global.$GT_Ships.{$ship}.$IsSubordinate">
          <set_value name="$fleetPosition" exact="global.$GT_Ships.{$ship}.$FleetPosition"/>
          
          <!-- Calculate staggered startup delay -->
          <set_value name="$delay" exact="$fleetPosition * 30s"/>
          
          <!-- Cap maximum delay -->
          <do_if value="$delay gt 300s">
            <set_value name="$delay" exact="300s"/>
          </do_if>
        </do_if>
        
        <set_value name="this.$result" exact="$delay"/>
      </actions>
    </library>
    
  </cues>
</mdscript> 