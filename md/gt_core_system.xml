<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GT_CoreSystem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../ORIGINAL_MODS_DO NOT_MODIFY/X4Original/libraries/md.xsd">
  <cues>
    <!-- Core System Initialization -->
    <cue name="SystemInit" instantiate="true">
      <conditions>
        <check_any>
          <event_player_created/>
          <event_game_loaded/>
        </check_any>
        <check_value value="not global.$GT_Initialized? or not global.$GT_Initialized"/>
      </conditions>
      <actions>
        <debug_text text="'[GalaxyTrader MK3] Core system initializing...'" chance="100"/>

        <!-- Initialize global data structures -->
        <set_value name="global.$GT_Ships" exact="table[]" comment="Registry of all managed ships"/>
        <set_value name="global.$GT_FleetData" exact="table[]" comment="Fleet coordination data"/>
        <set_value name="global.$GT_MarketData" exact="table[]" comment="Market intelligence cache"/>
        <set_value name="global.$GT_TerritoryData" exact="table[]" comment="Territory management data"/>
        <set_value name="global.$GT_SessionStats" exact="table[]" comment="Current session statistics"/>
        <set_value name="global.$GT_PendingTrades" exact="table[]" comment="Trade completion tracking"/>
        
        <!-- PHASE 1: Initialize event-driven signaling system -->
        <set_value name="global.$GT_XPEventQueue" exact="[]" comment="Event queue for instant XP processing"/>
        
        <!-- PHASE 2: Initialize training event system -->
        <set_value name="global.$GT_TrainingEventQueue" exact="[]" comment="Event queue for instant training processing"/>
        
        <!-- PHASE 3: Initialize fleet and market event systems -->
        <set_value name="global.$GT_FleetEventQueue" exact="[]" comment="Event queue for instant fleet coordination"/>
        <set_value name="global.$GT_MarketEventQueue" exact="[]" comment="Event queue for instant market intelligence"/>
        
        <debug_text text="'[GalaxyTrader MK3] Event-driven signaling system initialized (XP + Training + Fleet + Market)'" chance="100"/>
        
        <!-- Initialize configuration settings for re-enabled features -->
        <do_if value="not global.$GT_Config?">
          <set_value name="global.$GT_Config" exact="table[]"/>
        </do_if>
        
        <do_if value="not global.$GT_Config.$Fleet?">
          <set_value name="global.$GT_Config.$Fleet" exact="table[]"/>
        </do_if>
        
        <do_if value="not global.$GT_Config.$Territory?">
          <set_value name="global.$GT_Config.$Territory" exact="table[]"/>
        </do_if>
        
        <!-- RE-ENABLED FEATURES: Set defaults to enabled since event-driven system is now stable -->
        <!-- Legacy load balancing config removed - pure event-driven system -->
        
        <do_if value="not global.$GT_Config.$Fleet.$EnablePerformanceMonitoring?">
          <set_value name="global.$GT_Config.$Fleet.$EnablePerformanceMonitoring" exact="true" comment="Fleet performance monitoring"/>
        </do_if>
        
        <do_if value="not global.$GT_Config.$Territory.$EnableConflictResolution?">
          <set_value name="global.$GT_Config.$Territory.$EnableConflictResolution" exact="true" comment="Territory conflict resolution"/>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] âœ… Previously disabled features have been re-enabled with event-driven architecture'" chance="100"/>
        
        <!-- Initialize subsystems -->
        <set_value name="global.$GT_SessionStats.$StartTime" exact="player.age"/>
        <set_value name="global.$GT_SessionStats.$TotalProfit" exact="0Cr"/>
        <set_value name="global.$GT_SessionStats.$TradesCompleted" exact="0"/>
        <set_value name="global.$GT_SessionStats.$XPGained" exact="0"/>
        
        <!-- Set initialization complete flag -->
        <set_value name="global.$GT_Initialized" exact="true"/>
        
        <debug_text text="'[GalaxyTrader MK3] Core system initialization complete'" chance="100"/>
        
        <!-- Show welcome notification -->
        <show_notification text="'GalaxyTrader MK3 Activated'" timeout="5s"/>
        <!-- Broadcast initialization signal for dependent modules -->
        <signal_cue cue="md.GT_CoreSystem.SystemInit"/>
        <!-- Legacy registration catch-up: seed original ship names for already-registered pilots -->
        <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0 and global.$GT_Pilots?">
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$ship" exact="$shipKeys.{$i}"/>
            <set_value name="$pilot" exact="$ship.pilot"/>
            <do_if value="$pilot and global.$GT_Pilots.{$pilot}? and not global.$GT_Pilots.{$pilot}.$OriginalShipName?">
              <run_actions ref="md.GT_Ship_Management.Strip_GT_Name_Formatting" result="$cleanedName">
                <param name="shipName" value="$ship.knownname"/>
              </run_actions>
              <set_value name="global.$GT_Pilots.{$pilot}.$OriginalShipName" exact="$cleanedName"/>
              <debug_text text="'[GT-Core] SystemInit: Seeded cleaned original name for pilot ' + $pilot.name + ': ' + $cleanedName + ' (from: ' + $ship.knownname + ')'" chance="100"/>
            </do_if>
          </do_all>
        </do_if>
      </actions>
    </cue>
    
    <!-- Ship Registration System -->
    <cue name="RegisterShip" instantiate="true">
      <conditions>
        <event_object_order_ready object="player.entity" comment="Detect when ship gets trading order"/>
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.object"/>
        
        <!-- Validate ship -->
        <do_if value="$ship.isplayerowned and $ship.primarypurpose == purpose.trade">
          <!-- Check if already registered -->
          <do_if value="not global.$GT_Ships.{$ship}?">
            <debug_text text="'[GalaxyTrader MK3] Registering new trading ship: ' + $ship.knownname" chance="100"/>
            
            <!-- Create ship data structure -->
            <set_value name="global.$GT_Ships.{$ship}" exact="table[]"/>
            <set_value name="global.$GT_Ships.{$ship}.$RegisterTime" exact="player.age"/>
            <set_value name="global.$GT_Ships.{$ship}.$Level" exact="1"/>
            <set_value name="global.$GT_Ships.{$ship}.$XP" exact="0"/>
            <set_value name="global.$GT_Ships.{$ship}.$TotalProfit" exact="0Cr"/>
            <set_value name="global.$GT_Ships.{$ship}.$TradesCompleted" exact="0"/>
            <set_value name="global.$GT_Ships.{$ship}.$TotalTrades" exact="0"/>
            <set_value name="global.$GT_Ships.{$ship}.$LastTradeProfit" exact="0Cr"/>
            <set_value name="global.$GT_Ships.{$ship}.$LastMoney" exact="$ship.money"/>
            <set_value name="global.$GT_Ships.{$ship}.$TrainingCompleted" exact="[]"/>
            <set_value name="global.$GT_Ships.{$ship}.$ThreatReports" exact="0"/>
            <set_value name="global.$GT_Ships.{$ship}.$LastThreatTime" exact="0"/>
            <set_value name="global.$GT_Ships.{$ship}.$Territory" exact="null"/>
            <set_value name="global.$GT_Ships.{$ship}.$LastUpdate" exact="player.age"/>
            
            <!-- Notify player -->
            <do_if value="global.$GT_Config.$Notifications.$FleetUpdates?">
              <show_notification text="'GalaxyTrader MK3: ' + $ship.knownname + ' registered for advanced trading'" timeout="3s"/>
            </do_if>
            <!-- Trigger XP system pilot registration for ship renaming -->
            <set_value name="global.$GT_RegisterPilot" exact="$ship.pilot"/>
            <set_value name="global.$GT_RegisterShip" exact="$ship"/>
            <debug_text text="'[GalaxyTrader MK3] XP registration triggered for pilot ' + $ship.pilot.name + ' on ship ' + $ship.knownname" chance="100"/>
          </do_if>
        </do_if>
      </actions>
    </cue>
    
    <!-- Ship Unregistration System -->
    <cue name="UnregisterShip" instantiate="true">
      <conditions>
        <event_object_destroyed object="player.entity"/>
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.object"/>
        
        <!-- Check if ship was registered -->
        <do_if value="global.$GT_Ships.{$ship}?">
          <debug_text text="'[GalaxyTrader MK3] Unregistering destroyed ship: ' + $ship.knownname" chance="100"/>
          
          <!-- Clean up data -->
          <remove_value name="global.$GT_Ships.{$ship}"/>
          <remove_value name="global.$GT_FleetData.{$ship}"/>
          <remove_value name="global.$GT_PendingTrades.{$ship}"/>
        </do_if>
      </actions>
    </cue>
    
    <!-- Periodic System Maintenance -->
    <cue name="SystemMaintenance" instantiate="true" checkinterval="60s">
      <conditions>
        <check_value value="@global.$GT_Initialized"/>
      </conditions>
      <actions>
        <!-- Clean up invalid ship entries -->
        <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$ship" exact="$shipKeys.{$i}"/>
            <do_if value="not $ship.exists">
              <debug_text text="'[GalaxyTrader MK3] Cleaning up invalid ship entry'" chance="100"/>
              <remove_value name="global.$GT_Ships.{$ship}"/>
              <remove_value name="global.$GT_PendingTrades.{$ship}"/>
            </do_if>
          </do_all>
        </do_if>
        
        <!-- Update session statistics -->
        <set_value name="global.$GT_SessionStats.$Duration" exact="player.age - global.$GT_SessionStats.$StartTime"/>
        
        <!-- Trigger periodic reports if enabled -->
        <do_if value="global.$GT_Config.$Notifications.$ProfitReports?">
          <signal_cue cue="GeneratePeriodicReport"/>
        </do_if>
      </actions>
    </cue>
    
    <!-- Periodic Reporting System -->
    <cue name="GeneratePeriodicReport" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <do_if value="global.$GT_Ships.keys.count gt 0">
          <set_value name="$totalProfit" exact="0Cr"/>
          <set_value name="$totalTrades" exact="0"/>
          
          <!-- Calculate totals -->
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$ship" exact="$shipKeys.{$i}"/>
            <set_value name="$shipData" exact="global.$GT_Ships.{$ship}"/>
            <do_if value="$shipData.$TotalProfit?">
              <set_value name="$totalProfit" exact="$totalProfit + $shipData.$TotalProfit"/>
            </do_if>
            <do_if value="$shipData.$TradesCompleted?">
              <set_value name="$totalTrades" exact="$totalTrades + $shipData.$TradesCompleted"/>
            </do_if>
          </do_all>
          
          <!-- Generate report message -->
          <set_value name="$message" exact="'GalaxyTrader MK3 Fleet Report:\n'"/>
          <set_value name="$message" exact="$message + 'Active Ships: ' + global.$GT_Ships.keys.count + '\n'"/>
          <set_value name="$message" exact="$message + 'Total Profit: ' + ($totalProfit / 100) + '\n'"/>
          <set_value name="$message" exact="$message + 'Trades Completed: ' + $totalTrades"/>
          
          <!-- Show notification -->
          <show_notification text="$message" timeout="10s"/>
        </do_if>
      </actions>
    </cue>
    
    <!-- System Shutdown Handler -->
    <cue name="SystemShutdown" instantiate="true">
      <conditions>
        <event_game_saved/>
      </conditions>
      <actions>
        <debug_text text="'[GalaxyTrader MK3] Saving system state...'" chance="100"/>
        
        <!-- Update all ship data -->
        <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$ship" exact="$shipKeys.{$i}"/>
            <set_value name="global.$GT_Ships.{$ship}.$LastUpdate" exact="player.age"/>
          </do_all>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] System state saved'" chance="100"/>
      </actions>
    </cue>
    <!-- Ship Registration Signal Handler -->
    <cue name="HandleShipRegistration" instantiate="true">
      <conditions>
        <event_object_signalled object="player.galaxy" param="'GT_Register_Ship'" comment="Handle ship registration from AI scripts"/>
      </conditions>
      <actions>
        <set_value name="$registrationData" exact="event.param2"/>
        <set_value name="$ship" exact="$registrationData.$Ship"/>
        <set_value name="$config" exact="$registrationData.$Config"/>
        
        <debug_text text="'[GalaxyTrader MK3] Ship registration request received for ' + $ship.knownname" chance="100"/>
        
        <!-- Try to call ship management library to register ship -->
        <do_if value="md.GT_Ship_Management.Register_Ship?">
          <run_actions ref="md.GT_Ship_Management.Register_Ship">
            <param name="ship" value="$ship"/>
            <param name="pilot" value="$ship.pilot"/>
            <param name="config" value="$config"/>
          </run_actions>
          
          <debug_text text="'[GalaxyTrader MK3] Ship registered using GT_Ship_Management library: ' + $ship.knownname" chance="100"/>

          <!-- Restore paused training state if it was preserved during order replacement -->
          <do_if value="$ship.pilot and global.$GT_Pilots.{$ship.pilot}? and global.$GT_Pilots.{$ship.pilot}.$PausedWithTrainingNeeded?">
            <set_value name="global.$GT_Pilots.{$ship.pilot}.$XPBlocked" exact="true"/>
            <set_value name="global.$GT_Pilots.{$ship.pilot}.$BlockedLevel" exact="global.$GT_Pilots.{$ship.pilot}.$PausedBlockedLevel"/>

            <!-- Clean up paused training placeholders -->
            <remove_value name="global.$GT_Pilots.{$ship.pilot}.$PausedWithTrainingNeeded"/>
            <remove_value name="global.$GT_Pilots.{$ship.pilot}.$PausedBlockedLevel"/>

            <debug_text text="'[GalaxyTrader MK3] TRAINING STATE RESTORED (library path): Pilot ' + $ship.pilot.name + ' still needs level ' + global.$GT_Pilots.{$ship.pilot}.$BlockedLevel + ' training'" chance="100"/>
          </do_if>
        </do_if>
        <do_else>
          <!-- Fallback registration if library not available -->
          <debug_text text="'[GalaxyTrader MK3] Library not available, using fallback registration for ' + $ship.knownname" chance="100"/>
          
          <!-- Ensure global data structures exist -->
          <do_if value="not global.$GT_Ships?">
            <set_value name="global.$GT_Ships" exact="table[]"/>
          </do_if>
          <do_if value="not global.$GT_Pilots?">
            <set_value name="global.$GT_Pilots" exact="table[]"/>
          </do_if>
          
          <!-- Register ship if not already registered -->
          <do_if value="not global.$GT_Ships.{$ship}?">
            <set_value name="global.$GT_Ships.{$ship}" exact="table[]"/>
            <set_value name="global.$GT_Ships.{$ship}.$RegisterTime" exact="player.age"/>
            <set_value name="global.$GT_Ships.{$ship}.$Config" exact="$config"/>
            <set_value name="global.$GT_Ships.{$ship}.$LastUpdate" exact="player.age"/>
            <set_value name="global.$GT_Ships.{$ship}.$Status" exact="'active'"/>
            
            <!-- Register pilot if provided and trigger ship renaming -->
            <do_if value="$ship.pilot">
              <!-- Check if pilot already exists (including paused pilots) -->
              <do_if value="not global.$GT_Pilots.{$ship.pilot}?">
                <!-- NEW PILOT -->
                <set_value name="global.$GT_Pilots.{$ship.pilot}" exact="table[]"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$XP" exact="0"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$Level" exact="1"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$TotalTrades" exact="0"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$TotalProfit" exact="0Cr"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$TrainingCompleted" exact="[]"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$PilotName" exact="$ship.pilot.name"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$RegisterTime" exact="player.age"/>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$AssociatedShip" exact="$ship"/>
                
                <!-- Store original ship name for rank title system (strip any existing GT formatting) -->
                <run_actions ref="md.GT_Ship_Management.Strip_GT_Name_Formatting" result="$cleanedName">
                  <param name="shipName" value="$ship.knownname"/>
                </run_actions>
                <set_value name="global.$GT_Pilots.{$ship.pilot}.$OriginalShipName" exact="$cleanedName"/>
                <debug_text text="'[GT-Core] Stored cleaned original ship name: ' + $cleanedName + ' (from: ' + $ship.knownname + ')'" chance="if $cleanedName != $ship.knownname then 100 else 0"/>
                
                <!-- Set initial ship name using configurable naming system -->
                <set_value name="$rankTitle" exact="'Lehrling'"/>  <!-- Default to first rank -->
                <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$TraderTitles? and global.$GT_Config.$XP.$TraderTitles.{1}?">
                  <set_value name="$rankTitle" exact="global.$GT_Config.$XP.$TraderTitles.{1}"/>
                </do_if>
                
                <!-- Use the configurable ship naming system -->
                <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$ship.pilot, $xp=0, $level=1, $rank=$rankTitle, $nameType='trader']"/>
                
                <!-- Set initial management skill to level 1 (X4 skill system) -->
                <set_skill entity="$ship.pilot" type="skilltype.management" exact="1"/>
                
                <debug_text text="'[GalaxyTrader MK3] XP System: NEW pilot ' + $ship.pilot.name + ' initialized with 0 XP, skill level 1, ship renamed to: ' + $ship.knownname + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
              </do_if>
              <do_else>
                <!-- EXISTING PILOT (including paused pilots) -->
                
                <!-- Check if pilot was paused and restore them -->
                <do_if value="global.$GT_Pilots.{$ship.pilot}.$Status? and global.$GT_Pilots.{$ship.pilot}.$Status == 'paused'">
                  <debug_text text="'[GalaxyTrader MK3] PAUSED PILOT DETECTED: Restoring ' + $ship.pilot.name + ' with XP: ' + global.$GT_Pilots.{$ship.pilot}.$XP + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
                  
                  <!-- RESTORE TRAINING STATE if it was preserved -->
                  <do_if value="global.$GT_Pilots.{$ship.pilot}.$PausedWithTrainingNeeded?">
                    <set_value name="global.$GT_Pilots.{$ship.pilot}.$XPBlocked" exact="true"/>
                    <set_value name="global.$GT_Pilots.{$ship.pilot}.$BlockedLevel" exact="global.$GT_Pilots.{$ship.pilot}.$PausedBlockedLevel"/>
                    
                    <!-- Clean up paused training state -->
                    <remove_value name="global.$GT_Pilots.{$ship.pilot}.$PausedWithTrainingNeeded"/>
                    <remove_value name="global.$GT_Pilots.{$ship.pilot}.$PausedBlockedLevel"/>
                    
                    <debug_text text="'[GalaxyTrader MK3] TRAINING STATE RESTORED: Pilot ' + $ship.pilot.name + ' still needs level ' + global.$GT_Pilots.{$ship.pilot}.$BlockedLevel + ' training'" chance="100"/>
                  </do_if>
                  
                  <!-- Restore pilot to active status -->
                  <set_value name="global.$GT_Pilots.{$ship.pilot}.$Status" exact="'active'"/>
                  <set_value name="global.$GT_Pilots.{$ship.pilot}.$ResumedTime" exact="player.age"/>
                  <remove_value name="global.$GT_Pilots.{$ship.pilot}.$PausedTime"/>
                  <remove_value name="global.$GT_Pilots.{$ship.pilot}.$PausedReason"/>
                  
                  <!-- Update associated ship -->
                  <set_value name="global.$GT_Pilots.{$ship.pilot}.$AssociatedShip" exact="$ship"/>
                </do_if>
                
                <!-- Store original ship name if not already stored (strip any existing GT formatting) -->
                <do_if value="not global.$GT_Pilots.{$ship.pilot}.$OriginalShipName?">
                  <run_actions ref="md.GT_Ship_Management.Strip_GT_Name_Formatting" result="$cleanedName">
                    <param name="shipName" value="$ship.knownname"/>
                  </run_actions>
                  <set_value name="global.$GT_Pilots.{$ship.pilot}.$OriginalShipName" exact="$cleanedName"/>
                  <debug_text text="'[GT-Core] Stored cleaned original ship name for existing pilot: ' + $cleanedName + ' (from: ' + $ship.knownname + ') (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
                </do_if>
                
                <!-- Update ship name to match current XP level (for existing pilots) -->
                <do_if value="global.$GT_Pilots.{$ship.pilot}.$XP?">
                  <!-- Calculate current skill level from existing XP -->
                  <set_value name="$currentSkillLevel" exact="1"/>
                  <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$SkillThresholds?">
                    <do_all exact="15" counter="$skillLevel">
                      <do_if value="global.$GT_Pilots.{$ship.pilot}.$XP ge global.$GT_Config.$XP.$SkillThresholds.{$skillLevel}">
                        <set_value name="$currentSkillLevel" exact="$skillLevel"/>
                      </do_if>
                    </do_all>
                  </do_if>
                  
                  <!-- Update ship name with current status -->
                  <do_if value="global.$GT_Pilots.{$ship.pilot}.$OriginalShipName?">
                    <set_value name="$originalName" exact="global.$GT_Pilots.{$ship.pilot}.$OriginalShipName"/>
                  </do_if>
                  <do_else>
                    <set_value name="$originalName" exact="$ship.knownname"/>
                  </do_else>
                  
                  <set_value name="$currentXP" exact="global.$GT_Pilots.{$ship.pilot}.$XP"/>
                  
                  <set_value name="$rankTitle" exact="'Lehrling'"/>  <!-- Default rank -->
                  <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$TraderTitles?">
                    <set_value name="$rankIndex" exact="($currentSkillLevel / 3)i + 1"/>
                    <do_if value="$rankIndex gt global.$GT_Config.$XP.$TraderTitles.keys.count">
                      <set_value name="$rankIndex" exact="global.$GT_Config.$XP.$TraderTitles.keys.count"/>
                    </do_if>
                    <do_if value="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}?">
                      <set_value name="$rankTitle" exact="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}"/>
                    </do_if>
                  </do_if>
                  
                  <!-- Use configurable ship naming system for existing pilots -->
                  <do_if value="global.$GT_Pilots.{$ship.pilot}.$XPBlocked?">
                    <!-- Pilot still needs training - show blocked state -->
                    <set_value name="$blockedLevel" exact="global.$GT_Pilots.{$ship.pilot}.$BlockedLevel"/>
                    <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$ship.pilot, $xp=$currentXP, $level=$blockedLevel, $rank=$rankTitle, $nameType='blocked']"/>
                    <debug_text text="'[GalaxyTrader MK3] XP System: EXISTING pilot ' + $ship.pilot.name + ' restored with training still needed - level ' + $blockedLevel + ' training required, ship renamed to: ' + $ship.knownname + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
                  </do_if>
                  <do_else>
                    <!-- Normal pilot state -->
                    <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$ship.pilot, $xp=$currentXP, $level=$currentSkillLevel, $rank=$rankTitle, $nameType='trader']"/>
                    <debug_text text="'[GalaxyTrader MK3] XP System: EXISTING pilot ' + $ship.pilot.name + ' restored with XP: ' + $currentXP + ', skill level: ' + $currentSkillLevel + ', ship renamed to: ' + $ship.knownname + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
                  </do_else>
                </do_if>
              </do_else>
            </do_if>
            
            <debug_text text="'[GalaxyTrader MK3] Fallback registration complete for ship: ' + $ship.knownname" chance="100"/>
          </do_if>
        </do_else>
        
        <debug_text text="'[GalaxyTrader MK3] Ship ' + $ship.knownname + ' successfully registered'" chance="100"/>
      </actions>
    </cue>

    <!-- Ship Order Aborted Handler with Name Restoration -->
    <cue name="HandleShipOrderAborted" instantiate="true">
      <conditions>
        <event_object_signalled object="player.galaxy" param="'GT_Ship_Order_Aborted'" comment="Handle ship order abortion"/>
      </conditions>
      <actions>
        <set_value name="$abortData" exact="event.param2"/>
        <set_value name="$ship" exact="$abortData.$Ship"/>
        <set_value name="$pilot" exact="$abortData.$Pilot"/>
        <set_value name="$reason" exact="$abortData.$Reason"/>
        <set_value name="$originalName" exact="$abortData.$OriginalName"/>
        
        <debug_text text="'[GalaxyTrader MK3] Ship order aborted for ' + $ship.knownname + ': ' + $reason" chance="100"/>
        
        <!-- ============================================= -->
        <!-- SHIP NAME RESTORATION                        -->
        <!-- ============================================= -->
        
        <!-- Restore original ship name if available -->
        <do_if value="$originalName">
          <set_object_name object="$ship" name="$originalName"/>
          <debug_text text="'[GalaxyTrader MK3] Ship name restored to original: ' + $originalName + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
        </do_if>
        <do_elseif value="$pilot and global.$GT_Pilots.{$pilot}? and global.$GT_Pilots.{$pilot}.$OriginalShipName?">
          <!-- Fallback: get original name from pilot registry -->
          <set_value name="$storedOriginalName" exact="global.$GT_Pilots.{$pilot}.$OriginalShipName"/>
          <set_object_name object="$ship" name="$storedOriginalName"/>
          <debug_text text="'[GalaxyTrader MK3] Ship name restored from pilot registry: ' + $storedOriginalName + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
        </do_elseif>
        <do_else>
          <debug_text text="'[GalaxyTrader MK3] WARNING: No original ship name found for ' + $ship.knownname + ' (Ship ID: ' + $ship.idcode + ') - name not restored'" chance="100"/>
        </do_else>

        <!-- ============================================= -->
        <!-- SHIP MODIFICATION CLEANUP                   -->
        <!-- ============================================= -->
        
        <!-- Clean up any ship modification tracking -->
        <do_if value="global.$GT_Applied_Mods? and global.$GT_Applied_Mods.{$ship}?">
          <remove_value name="global.$GT_Applied_Mods.{$ship}"/>
          <debug_text text="'[GalaxyTrader MK3] Ship modification tracking cleared for ' + $ship.knownname" chance="100"/>
        </do_if>
        
        <!-- ============================================= -->
        <!-- REGISTRY CLEANUP                             -->
        <!-- ============================================= -->
        
        <!-- Remove ship from GT_Ships registry -->
        <do_if value="global.$GT_Ships.{$ship}?">
          <remove_value name="global.$GT_Ships.{$ship}"/>
          <debug_text text="'[GalaxyTrader MK3] Ship removed from GT_Ships registry: ' + $ship.idcode" chance="100"/>
        </do_if>
        
        <!-- Clean up pilot registry if pilot no longer has associated ships -->
        <do_if value="$pilot and global.$GT_Pilots.{$pilot}?">
          <set_value name="$pilotHasOtherShips" exact="false"/>
          
          <!-- Check if pilot has other active GalaxyTrader ships -->
          <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
            <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
            <do_all exact="$shipKeys.count" counter="$i">
              <set_value name="$otherShip" exact="$shipKeys.{$i}"/>
              <do_if value="$otherShip.pilot == $pilot">
                <set_value name="$pilotHasOtherShips" exact="true"/>
                <break/>
              </do_if>
            </do_all>
          </do_if>
          
          <!-- Remove pilot from registry if no other ships -->
          <do_if value="not $pilotHasOtherShips">
            <remove_value name="global.$GT_Pilots.{$pilot}"/>
            <debug_text text="'[GalaxyTrader MK3] Pilot removed from GT_Pilots registry: ' + $pilot.name" chance="100"/>
          </do_if>
          <do_else>
            <debug_text text="'[GalaxyTrader MK3] Pilot kept in registry (has other active ships): ' + $pilot.name" chance="100"/>
          </do_else>
        </do_if>
        
        <!-- Update ship status (legacy compatibility) -->
        <do_if value="md.GT_Ship_Management.Update_Ship_Status?">
          <run_actions ref="md.GT_Ship_Management.Update_Ship_Status">
            <param name="ship" value="$ship"/>
            <param name="status" value="'aborted'"/>
          </run_actions>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] Ship cleanup completed for ' + $ship.idcode" chance="100"/>
      </actions>
    </cue>

    <!-- Ship Order Paused Handler with XP Preservation -->
    <cue name="HandleShipOrderPaused" instantiate="true">
      <conditions>
        <event_object_signalled object="player.galaxy" param="'GT_Ship_Order_Paused'" comment="Handle ship order pause (preserve XP)"/>
      </conditions>
      <actions>
        <set_value name="$pauseData" exact="event.param2"/>
        <set_value name="$ship" exact="$pauseData.$Ship"/>
        <set_value name="$pilot" exact="$pauseData.$Pilot"/>
        <set_value name="$reason" exact="$pauseData.$Reason"/>
        <set_value name="$preserveData" exact="$pauseData.$PreserveData"/>
        
        <debug_text text="'[GalaxyTrader MK3] Ship order paused for ' + $ship.knownname + ': ' + $reason + ' (preserving XP: ' + $preserveData + ')'" chance="100"/>
        
        <!-- ============================================= -->
        <!-- SHIP NAME PRESERVATION (DO NOT RESTORE)      -->
        <!-- ============================================= -->
        <!-- NOTE: When pausing (not aborting), we KEEP the current ship name with rank/level/XP.
             Name restoration to original only happens on permanent order removal (HandleShipOrderAborted).
             This preserves the player's view of their pilot's progression even during order changes. -->
        
        <debug_text text="'[GalaxyTrader MK3] Ship name PRESERVED during pause: ' + $ship.knownname + ' (Ship ID: ' + $ship.idcode + ')'" chance="100"/>
        
        <!-- ============================================= -->
        <!-- SHIP MODIFICATION CLEANUP (PAUSE)           -->
        <!-- ============================================= -->
        
        <!-- Clean up any ship modification tracking -->
        <do_if value="global.$GT_Applied_Mods? and global.$GT_Applied_Mods.{$ship}?">
          <remove_value name="global.$GT_Applied_Mods.{$ship}"/>
          <debug_text text="'[GalaxyTrader MK3] Ship modification tracking cleared for ' + $ship.knownname" chance="100"/>
        </do_if>
        
        <!-- ============================================= -->
        <!-- SELECTIVE REGISTRY CLEANUP (PRESERVE XP)    -->
        <!-- ============================================= -->
        
        <!-- Remove ship from GT_Ships registry (ship-specific data) -->
        <do_if value="global.$GT_Ships.{$ship}?">
          <remove_value name="global.$GT_Ships.{$ship}"/>
          <debug_text text="'[GalaxyTrader MK3] Ship removed from GT_Ships registry: ' + $ship.idcode" chance="100"/>
        </do_if>
        
        <!-- CRITICAL: DO NOT remove pilot from GT_Pilots registry - preserve XP data -->
        <do_if value="$pilot and global.$GT_Pilots.{$pilot}?">
          <!-- Mark pilot as temporarily inactive but keep all XP data -->
          <set_value name="global.$GT_Pilots.{$pilot}.$Status" exact="'paused'"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$PausedTime" exact="player.age"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$PausedReason" exact="$reason"/>
          
          <!-- PRESERVE TRAINING STATE: Save training requirements if active -->
          <do_if value="global.$GT_Pilots.{$pilot}.$XPBlocked?">
            <set_value name="global.$GT_Pilots.{$pilot}.$PausedWithTrainingNeeded" exact="true"/>
            <set_value name="global.$GT_Pilots.{$pilot}.$PausedBlockedLevel" exact="global.$GT_Pilots.{$pilot}.$BlockedLevel"/>
            <debug_text text="'[GalaxyTrader MK3] TRAINING STATE PRESERVED: Pilot ' + $pilot.name + ' was XP blocked at level ' + global.$GT_Pilots.{$pilot}.$BlockedLevel + ' - will restore training requirement'" chance="100"/>
          </do_if>
          
          <!-- Clear active training flags (but preserve paused state) -->
          <remove_value name="global.$GT_Pilots.{$pilot}.$XPBlocked"/>
          <remove_value name="global.$GT_Pilots.{$pilot}.$BlockedLevel"/>
          <remove_value name="global.$GT_Pilots.{$pilot}.$TrainingInProgress"/>
          
          <debug_text text="'[GalaxyTrader MK3] Pilot marked as paused (XP preserved): ' + $pilot.name + ' - XP: ' + global.$GT_Pilots.{$pilot}.$XP" chance="100"/>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] Ship pause completed for ' + $ship.idcode + ' (pilot XP data preserved)'" chance="100"/>
      </actions>
    </cue>

    <!-- Ship Pilot Change Monitor: REMOVED -->
    <!-- Polling monitor has been removed. Order removal is now detected instantly via signal from AI script's <on_abort> handler. -->
    <!-- This provides instant response (0ms latency) and zero CPU overhead. Professional code doesn't crash - we trust the signal system. -->

    <!-- Orphaned Pilot Registry Cleanup - Catches edge cases where pilots are registered but ships no longer have GT orders -->
    <cue name="OrphanedPilotCleanup" instantiate="true">
      <conditions>
        <event_cue_signalled/>
        <check_value value="global.$GT_Pilots? and global.$GT_Pilots.keys.count gt 0"/>
      </conditions>
      <delay exact="1s"/><!-- Small delay to let game stabilize after load -->
      <actions>
        <debug_text text="'[GT-Core] Running orphaned pilot registry cleanup check...'" chance="100"/>
        
        <set_value name="$cleanedCount" exact="0"/>
        <set_value name="$pilotKeys" exact="global.$GT_Pilots.keys.list"/>
        
        <do_all exact="$pilotKeys.count" counter="$i">
          <set_value name="$pilot" exact="$pilotKeys.{$i}"/>
          
          <!-- Skip if pilot object no longer exists -->
          <do_if value="not $pilot.exists">
            <continue/>
          </do_if>
          
          <!-- Get pilot's current ship -->
          <set_value name="$currentShip" exact="@$pilot.ship"/>
          <do_if value="not $currentShip or not $currentShip.exists">
            <!-- Pilot not on any ship - skip -->
            <continue/>
          </do_if>
          
          <!-- Check if ship has active GT order -->
          <set_value name="$hasGTOrder" exact="false"/>
          
          <!-- Direct GT order check -->
          <do_if value="$currentShip.defaultorder?">
            <do_if value="@$currentShip.defaultorder.id == 'GalaxyTraderMK3'">
              <set_value name="$hasGTOrder" exact="true"/>
            </do_if>
            
            <!-- Subordinate check: If ship has Assist order, check commander -->
            <do_elseif value="@$currentShip.defaultorder.id == 'Assist'">
              <do_if value="$currentShip.commander and $currentShip.commander.exists and $currentShip.commander != $currentShip">
                <do_if value="$currentShip.commander.defaultorder?">
                  <do_if value="@$currentShip.commander.defaultorder.id == 'GalaxyTraderMK3'">
                    <set_value name="$hasGTOrder" exact="true"/>
                  </do_if>
                </do_if>
              </do_if>
            </do_elseif>
          </do_if>
          
          <!-- If ship doesn't have GT order but pilot is registered (active OR paused), check if name needs restoration -->
          <do_if value="not $hasGTOrder and global.$GT_Pilots.{$pilot}?">
            <!-- Check if ship name is different from original (indicating it still has GT-style name) -->
            <set_value name="$needsNameRestore" exact="false"/>
            <do_if value="global.$GT_Pilots.{$pilot}.$OriginalShipName?">
              <set_value name="$originalName" exact="global.$GT_Pilots.{$pilot}.$OriginalShipName"/>
              <!-- If current name differs from original, it needs restoration -->
              <do_if value="$currentShip.knownname != $originalName">
                <set_value name="$needsNameRestore" exact="true"/>
              </do_if>
            </do_if>
            
            <do_if value="$needsNameRestore">
              <debug_text text="'[GT-Core] ORPHANED PILOT DETECTED: ' + $pilot.name + ' on ship ' + $currentShip.knownname + ' (original: ' + $originalName + ') - no GT order found!'" chance="100"/>
              
              <!-- Restore ship name -->
              <set_object_name object="$currentShip" name="$originalName"/>
              <debug_text text="'[GT-Core] Restored ship name from &quot;' + $currentShip.knownname + '&quot; to &quot;' + $originalName + '&quot;'" chance="100"/>
              
              <!-- Mark pilot as paused if not already (preserve XP) -->
              <do_if value="not global.$GT_Pilots.{$pilot}.$Status? or global.$GT_Pilots.{$pilot}.$Status != 'paused'">
                <set_value name="global.$GT_Pilots.{$pilot}.$Status" exact="'paused'"/>
                <set_value name="global.$GT_Pilots.{$pilot}.$PausedTime" exact="player.age"/>
                <set_value name="global.$GT_Pilots.{$pilot}.$PausedReason" exact="'Orphaned registration cleanup - ship no longer has GT order'"/>
              </do_if>
              
              <set_value name="$cleanedCount" exact="$cleanedCount + 1"/>
            </do_if>
          </do_if>
        </do_all>
        
        <do_if value="$cleanedCount gt 0">
          <debug_text text="'[GT-Core] Orphaned pilot cleanup complete: ' + $cleanedCount + ' pilots cleaned up'" chance="100"/>
        </do_if>
        <do_else>
          <debug_text text="'[GT-Core] Orphaned pilot cleanup complete: No orphaned pilots found'" chance="100"/>
        </do_else>
        
        <!-- Schedule next cleanup in 5 minutes -->
        <signal_cue_instantly cue="OrphanedPilotCleanupScheduler"/>
      </actions>
    </cue>
    
    <!-- Trigger orphaned cleanup on game load (scheduler will be started by cleanup cue itself) -->
    <cue name="TriggerCleanupOnLoad" instantiate="true">
      <conditions>
        <event_game_loaded/>
      </conditions>
      <actions>
        <debug_text text="'[GT-Core] Game loaded - triggering orphaned pilot cleanup...'" chance="100"/>
        <signal_cue_instantly cue="OrphanedPilotCleanup"/>
        <!-- Scheduler will be triggered by OrphanedPilotCleanup when it completes -->
      </actions>
    </cue>
    
    <!-- Scheduler for recurring cleanup every 5 minutes -->
    <cue name="OrphanedPilotCleanupScheduler" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <delay exact="5min"/>
      <actions>
        <signal_cue_instantly cue="OrphanedPilotCleanup"/>
        <reset_cue cue="OrphanedPilotCleanupScheduler"/>
      </actions>
    </cue>

    <!-- One-Time Legacy Ship Name Fix (for ships active before fixes were applied) -->
    <cue name="LegacyShipNameFix" instantiate="true">
      <conditions>
        <event_game_loaded/>
        <check_value value="global.$GT_Initialized and not global.$GT_LegacyShipNamesFixed?"/>
      </conditions>
      <actions>
        <!-- Mark as fixed so this only runs once -->
        <set_value name="global.$GT_LegacyShipNamesFixed" exact="true"/>
        <debug_text text="'[GalaxyTrader MK3] Running one-time legacy ship name fix...'" chance="100"/>
        
        <set_value name="$fixedCount" exact="0"/>
        <set_value name="$skippedCount" exact="0"/>
        
        <!-- Check all registered GT ships -->
        <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$ship" exact="$shipKeys.{$i}"/>
            
            <!-- Skip if ship no longer exists -->
            <do_if value="not $ship.exists or not $ship.isoperational or not $ship.pilot">
              <continue/>
            </do_if>
            
            <!-- Check if pilot exists in registry -->
            <do_if value="global.$GT_Pilots.{$ship.pilot}?">
              <set_value name="$pilotData" exact="global.$GT_Pilots.{$ship.pilot}"/>
              
              <!-- Check if ship needs name update - ONLY if name is EXACTLY the original base name -->
              <set_value name="$needsUpdate" exact="false"/>
              
              <!-- Ship needs update if it has the exact original name (no rank/level/XP added yet) -->
              <do_if value="$pilotData.$OriginalShipName? and $ship.knownname == $pilotData.$OriginalShipName and $pilotData.$XP? and $pilotData.$XP gt 0">
                <set_value name="$needsUpdate" exact="true"/>
                <debug_text text="'[GT-Legacy] Ship ' + $ship.idcode + ' needs update: name matches original exactly'" chance="100"/>
              </do_if>
              <do_else>
                <set_value name="$skippedCount" exact="$skippedCount + 1"/>
              </do_else>
              
              <do_if value="$needsUpdate">
                <!-- Store original name if not already stored (strip any existing GT formatting) -->
                <do_if value="not $pilotData.$OriginalShipName?">
                  <run_actions ref="md.GT_Ship_Management.Strip_GT_Name_Formatting" result="$cleanedName">
                    <param name="shipName" value="$ship.knownname"/>
                  </run_actions>
                  <set_value name="global.$GT_Pilots.{$ship.pilot}.$OriginalShipName" exact="$cleanedName"/>
                  <debug_text text="'[GT-Core] Cleanup: Stored cleaned original name: ' + $cleanedName + ' (from: ' + $ship.knownname + ')'" chance="if $cleanedName != $ship.knownname then 100 else 0"/>
                </do_if>
                
                <!-- Calculate current skill level from XP -->
                <set_value name="$currentXP" exact="$pilotData.$XP"/>
                <set_value name="$currentSkillLevel" exact="1"/>
                <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$SkillThresholds?">
                  <do_all exact="15" counter="$level">
                    <do_if value="$currentXP ge global.$GT_Config.$XP.$SkillThresholds.{$level}">
                      <set_value name="$currentSkillLevel" exact="$level"/>
                    </do_if>
                  </do_all>
                </do_if>
                
                <!-- Get rank title -->
                <set_value name="$rankTitle" exact="'Lehrling'"/>
                <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$TraderTitles?">
                  <set_value name="$rankIndex" exact="($currentSkillLevel / 3)i + 1"/>
                  <do_if value="$rankIndex gt global.$GT_Config.$XP.$TraderTitles.keys.count">
                    <set_value name="$rankIndex" exact="global.$GT_Config.$XP.$TraderTitles.keys.count"/>
                  </do_if>
                  <do_if value="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}?">
                    <set_value name="$rankTitle" exact="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}"/>
                  </do_if>
                </do_if>
                
                <!-- Update ship name -->
                <do_if value="$pilotData.$XPBlocked?">
                  <set_value name="$blockedLevel" exact="$pilotData.$BlockedLevel"/>
                  <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$ship.pilot, $xp=$currentXP, $level=$blockedLevel, $rank=$rankTitle, $nameType='blocked']"/>
                </do_if>
                <do_else>
                  <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$ship.pilot, $xp=$currentXP, $level=$currentSkillLevel, $rank=$rankTitle, $nameType='trader']"/>
                </do_else>
                
                <set_value name="$fixedCount" exact="$fixedCount + 1"/>
                <debug_text text="'[GalaxyTrader MK3] Fixed ship name: ' + $ship.idcode + ' (Pilot: ' + $ship.pilot.name + ', Level: ' + $currentSkillLevel + ', XP: ' + $currentXP + ')'" chance="100"/>
              </do_if>
            </do_if>
          </do_all>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] Legacy ship name fix complete: ' + $fixedCount + ' ships updated, ' + $skippedCount + ' ships already properly named'" chance="100"/>
      </actions>
    </cue>
    
    <!-- Update All Ship Names Based on Configuration -->
    <cue name="UpdateAllShipNames" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <debug_text text="'[GalaxyTrader MK3] Updating all ship names based on new naming configuration...'" chance="100"/>
        
        <set_value name="$updatedCount" exact="0"/>
        
        <!-- Update all registered GT ships -->
        <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$ship" exact="$shipKeys.{$i}"/>
            
            <!-- Skip if ship no longer exists -->
            <do_if value="not $ship.exists or not $ship.isoperational">
              <continue/>
            </do_if>
            
            <!-- Get the pilot -->
            <set_value name="$pilot" exact="$ship.pilot"/>
            <do_if value="$pilot and global.$GT_Pilots.{$pilot}?">
              <!-- Get pilot data -->
              <set_value name="$pilotData" exact="global.$GT_Pilots.{$pilot}"/>
              <set_value name="$currentXP" exact="$pilotData.$XP"/>
              
              <!-- Calculate current skill level -->
              <set_value name="$skillLevel" exact="1"/>
              <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$SkillThresholds?">
                <do_all exact="15" counter="$level">
                  <do_if value="$currentXP ge global.$GT_Config.$XP.$SkillThresholds.{$level}">
                    <set_value name="$skillLevel" exact="$level"/>
                  </do_if>
                </do_all>
              </do_if>
              
              <!-- Build new ship name using configuration -->
              <do_if value="$pilotData.$OriginalShipName?">
                <set_value name="$originalName" exact="$pilotData.$OriginalShipName"/>
              </do_if>
              <do_else>
                <set_value name="$originalName" exact="$ship.knownname"/>
              </do_else>
              <set_value name="$nameElements" exact="[]"/>
              <set_value name="$prefixElements" exact="[]"/>
              <set_value name="$suffixElements" exact="[]"/>
              
              <!-- Status (training/blocked/advance indicators) -->
              <do_if value="global.$GT_GlobalSettings.$ShipNaming.$DisplayStatus">
                <set_value name="$statusText" exact="''"/>
                <!-- ADVANCE takes priority - pilot is eligible for advancement exam -->
                <do_if value="$pilotData.$XPBlocked?">
                  <set_value name="$statusText" exact="'ADVANCE'"/>
                </do_if>
                <!-- TRAINING only shown for non-advancement training -->
                <do_elseif value="$pilotData.$TrainingInProgress? and not $pilotData.$XPBlocked?">
                  <set_value name="$statusText" exact="'[TRAINING]'"/>
                </do_elseif>
                
                <do_if value="$statusText != ''">
                  <do_if value="global.$GT_GlobalSettings.$ShipNaming.$StatusPosition == 'prefix'">
                    <append_to_list name="$prefixElements" exact="$statusText"/>
                  </do_if>
                  <do_else>
                    <append_to_list name="$suffixElements" exact="$statusText"/>
                  </do_else>
                </do_if>
              </do_if>
              
              <!-- Pilot Rank -->
              <do_if value="global.$GT_GlobalSettings.$ShipNaming.$DisplayRank">
                <set_value name="$rankTitle" exact="'Lehrling'"/>
                <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$TraderTitles?">
                  <set_value name="$rankIndex" exact="1"/>
                  <do_if value="$skillLevel ge 15">
                    <set_value name="$rankIndex" exact="6"/>
                  </do_if>
                  <do_elseif value="$skillLevel ge 13">
                    <set_value name="$rankIndex" exact="5"/>
                  </do_elseif>
                  <do_elseif value="$skillLevel ge 10">
                    <set_value name="$rankIndex" exact="4"/>
                  </do_elseif>
                  <do_elseif value="$skillLevel ge 7">
                    <set_value name="$rankIndex" exact="3"/>
                  </do_elseif>
                  <do_elseif value="$skillLevel ge 4">
                    <set_value name="$rankIndex" exact="2"/>
                  </do_elseif>
                  
                  <do_if value="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}?">
                    <set_value name="$rankTitle" exact="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}"/>
                  </do_if>
                </do_if>
                
                <do_if value="global.$GT_GlobalSettings.$ShipNaming.$RankPosition == 'prefix'">
                  <append_to_list name="$prefixElements" exact="$rankTitle"/>
                </do_if>
                <do_else>
                  <append_to_list name="$suffixElements" exact="$rankTitle"/>
                </do_else>
              </do_if>
              
              <!-- Level -->
              <do_if value="global.$GT_GlobalSettings.$ShipNaming.$DisplayLevel">
                <set_value name="$levelText" exact="'Lv.' + $skillLevel"/>
                <do_if value="global.$GT_GlobalSettings.$ShipNaming.$LevelPosition == 'prefix'">
                  <append_to_list name="$prefixElements" exact="$levelText"/>
                </do_if>
                <do_else>
                  <append_to_list name="$suffixElements" exact="$levelText"/>
                </do_else>
              </do_if>
              
              <!-- XP -->
              <do_if value="global.$GT_GlobalSettings.$ShipNaming.$DisplayXP">
                <set_value name="$xpText" exact="'XP:' + $currentXP"/>
                <do_if value="global.$GT_GlobalSettings.$ShipNaming.$XPPosition == 'prefix'">
                  <append_to_list name="$prefixElements" exact="$xpText"/>
                </do_if>
                <do_else>
                  <append_to_list name="$suffixElements" exact="$xpText"/>
                </do_else>
              </do_if>
              
              <!-- Build final name -->
              <set_value name="$newName" exact="$originalName"/>
              
              <!-- Add prefix elements -->
              <do_if value="$prefixElements.count gt 0">
                <set_value name="$prefixString" exact="''"/>
                <do_all exact="$prefixElements.count" counter="$j">
                  <do_if value="$j gt 1">
                    <set_value name="$prefixString" exact="$prefixString + ' '"/>
                  </do_if>
                  <set_value name="$prefixString" exact="$prefixString + $prefixElements.{$j}"/>
                </do_all>
                <set_value name="$newName" exact="$prefixString + ' ' + $newName"/>
              </do_if>
              
              <!-- Add suffix elements -->
              <do_if value="$suffixElements.count gt 0">
                <set_value name="$suffixString" exact="''"/>
                <do_all exact="$suffixElements.count" counter="$j">
                  <do_if value="$j gt 1">
                    <set_value name="$suffixString" exact="$suffixString + ' '"/>
                  </do_if>
                  <set_value name="$suffixString" exact="$suffixString + $suffixElements.{$j}"/>
                </do_all>
                <set_value name="$newName" exact="$newName + ' (' + $suffixString + ')'"/>
              </do_if>
              
              <!-- Apply the new name -->
              <set_object_name object="$ship" name="$newName"/>
              <set_value name="$updatedCount" exact="$updatedCount + 1"/>
              
              <debug_text text="'[GalaxyTrader MK3] Updated ship name: ' + $ship.idcode + ' -> ' + $newName" chance="100"/>
            </do_if>
          </do_all>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] Ship name update complete: ' + $updatedCount + ' ships updated'" chance="100"/>
      </actions>
    </cue>
    
    <!-- Ship Modification Update Handler -->
    <cue name="HandleShipModificationUpdate" instantiate="true">
      <conditions>
        <event_object_signalled object="player.galaxy" param="'GT_Update_Ship'" comment="Handle ship updates from AI scripts"/>
      </conditions>
      <actions>
        <set_value name="$ship" exact="event.param2.$ship"/>
        <set_value name="$pilot" exact="event.param2.$pilot"/>
        <set_value name="$updateType" exact="event.param2.$updateType"/>
        
        <debug_text text="'[GT-Core] Ship modification update requested: ' + $ship.knownname + ' (Type: ' + $updateType + ')'" chance="100"/>
        
        <!-- DEBUG: Check library availability -->
        <debug_text text="'[GT-Core] DEBUG: GT_Ship_Management library check result: ' + md.GT_Ship_Management.Handle_Pilot_Ship_Assignment?" chance="100"/>
        
        <!-- Handle different update types -->
        <do_if value="$updateType == 'training_completion'">
          <!-- Apply modifications after training completion -->
          <do_if value="md.GT_Ship_Management.Handle_Pilot_Ship_Assignment?">
            <run_actions ref="md.GT_Ship_Management.Handle_Pilot_Ship_Assignment">
              <param name="ship" value="$ship"/>
              <param name="new_pilot" value="$pilot"/>
              <param name="old_pilot" value="$pilot"/>
            </run_actions>
            
            <debug_text text="'[GT-Core] Applied ship modifications after training completion for ' + $pilot.name" chance="100"/>
          </do_if>
          <do_else>
            <debug_text text="'[GT-Core] GT_Ship_Management library not available - ship modifications skipped'" chance="100"/>
          </do_else>
          
        </do_if>
        <do_elseif value="$updateType == 'pilot_change'">
          <!-- Handle pilot assignment changes -->
          <set_value name="$oldPilot" exact="event.param2.$oldPilot"/>
          
          <debug_text text="'[GT-Core] Processing pilot change on ' + $ship.knownname + ' - Old: ' + @$oldPilot.name + ', New: ' + @$pilot.name" chance="100"/>
          
          <!-- Check if new pilot is a registered GT pilot -->
          <do_if value="$pilot and global.$GT_Pilots.{$pilot}?">
            <!-- New pilot is already registered - update ship name with their XP/rank -->
            <debug_text text="'[GT-Core] New pilot ' + $pilot.name + ' is registered GT pilot - updating ship name'" chance="100"/>
            
            <!-- Register new pilot for this ship -->
            <do_if value="md.GT_Ship_Management.Register_Pilot?">
              <run_actions ref="md.GT_Ship_Management.Register_Pilot">
                <param name="pilot" value="$pilot"/>
                <param name="ship" value="$ship"/>
              </run_actions>
            </do_if>
          </do_if>
          <do_elseif value="$pilot">
            <!-- New pilot is NOT registered - restore original ship name and clean up old pilot -->
            <debug_text text="'[GT-Core] New pilot ' + $pilot.name + ' is NOT registered GT pilot - restoring original ship name'" chance="100"/>
            
            <!-- Get original name from old pilot's registry -->
            <set_value name="$originalName" exact="null"/>
            <do_if value="$oldPilot and global.$GT_Pilots.{$oldPilot}? and global.$GT_Pilots.{$oldPilot}.$OriginalShipName?">
              <set_value name="$originalName" exact="global.$GT_Pilots.{$oldPilot}.$OriginalShipName"/>
            </do_if>
            <do_elseif value="$ship.knownname?">
              <set_value name="$originalName" exact="$ship.knownname"/>
            </do_elseif>
            
            <!-- Restore original ship name -->
            <do_if value="$originalName">
              <set_object_name object="$ship" name="$originalName"/>
              <debug_text text="'[GT-Core] Ship name restored to: ' + $originalName" chance="100"/>
            </do_if>
            
            <!-- Clean up old pilot if no other ships -->
            <do_if value="$oldPilot and global.$GT_Pilots.{$oldPilot}?">
              <set_value name="$oldPilotHasOtherShips" exact="false"/>
              <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
                <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
                <do_all exact="$shipKeys.count" counter="$i">
                  <set_value name="$otherShip" exact="$shipKeys.{$i}"/>
                  <do_if value="@$otherShip.pilot == $oldPilot">
                    <set_value name="$oldPilotHasOtherShips" exact="true"/>
                    <break/>
                  </do_if>
                </do_all>
              </do_if>
              
              <do_if value="not $oldPilotHasOtherShips">
                <remove_value name="global.$GT_Pilots.{$oldPilot}"/>
                <debug_text text="'[GT-Core] Cleaned up old pilot registry: ' + $oldPilot.name" chance="100"/>
              </do_if>
            </do_if>
          </do_elseif>
          
          <!-- Apply performance modifications -->
          <do_if value="md.GT_Ship_Management.Handle_Pilot_Ship_Assignment?">
            <run_actions ref="md.GT_Ship_Management.Handle_Pilot_Ship_Assignment">
              <param name="ship" value="$ship"/>
              <param name="new_pilot" value="$pilot"/>
              <param name="old_pilot" value="$oldPilot"/>
            </run_actions>
            
            <debug_text text="'[GT-Core] Applied ship modifications after pilot change on ' + $ship.knownname" chance="100"/>
          </do_if>
          <do_else>
            <debug_text text="'[GT-Core] GT_Ship_Management library not available - pilot change modifications skipped'" chance="100"/>
          </do_else>
          
        </do_elseif>
        <do_elseif value="$updateType == 'level_up'">
          <!-- Handle skill level increases -->
          <do_if value="md.GT_Ship_Management.Handle_Pilot_Ship_Assignment?">
            <run_actions ref="md.GT_Ship_Management.Handle_Pilot_Ship_Assignment">
              <param name="ship" value="$ship"/>
              <param name="new_pilot" value="$pilot"/>
              <param name="old_pilot" value="$pilot"/>
            </run_actions>
            
            <debug_text text="'[GT-Core] Applied ship modifications after level up for ' + $pilot.name" chance="100"/>
          </do_if>
          <do_else>
            <debug_text text="'[GT-Core] GT_Ship_Management library not available - level up modifications skipped'" chance="100"/>
          </do_else>
          
        </do_elseif>
      </actions>
    </cue>

  </cues>
</mdscript> 
