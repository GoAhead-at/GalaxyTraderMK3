<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GT_Trading_Queue" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../ORIGINAL_MODS_DO NOT_MODIFY/X4Original/libraries/md.xsd">
  <cues>
    <!-- ========================================
         GALAXY TRADER MK3 - QUEUE MANAGEMENT
         Handles trading and search queue processing
         ======================================== -->
    
    <!-- Trading Queue Processor -->
    <cue name="ProcessTradingQueue" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <!-- DEBUG: Queue processing called -->
        <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
          <debug_text text="'[GalaxyTrader MK3 DEBUG] ProcessTradingQueue called. Queue size: ' + global.$GT_TradingQueue.$Ships.count + ', Processing: ' + global.$GT_TradingQueue.$Processing" chance="100"/>
        </do_if>
        
        <!-- Prevent concurrent processing -->
        <do_if value="not global.$GT_TradingQueue.$Processing and global.$GT_TradingQueue.$Ships.count gt 0">
          <set_value name="global.$GT_TradingQueue.$Processing" exact="true"/>
          
          <!-- DEBUG: Starting batch processing -->
          <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] Starting batch processing of ' + global.$GT_TradingQueue.$Ships.count + ' ships'" chance="100"/>
          </do_if>
          
          <!-- Process ships ONE AT A TIME with delays to prevent stuttering -->
          <set_value name="$batchSize" exact="1"/> <!-- Process 1 ship at a time for better performance -->
          <set_value name="$processed" exact="0"/>
          <set_value name="$toProcessCount" exact="[global.$GT_TradingQueue.$Ships.count, $batchSize].min"/>
          
          <do_while value="global.$GT_TradingQueue.$Ships.count gt 0 and $processed lt $batchSize">
            <set_value name="$ship" exact="global.$GT_TradingQueue.$Ships.{1}"/>
            <remove_from_list name="global.$GT_TradingQueue.$Ships" exact="$ship"/>
            
            <!-- DEBUG: Processing individual ship -->
            <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
              <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') 🔄 DEQUEUED: Processing ship ' + ($processed + 1) + '/' + $toProcessCount + ': ' + $ship.knownname + ' (queue size now: ' + global.$GT_TradingQueue.$Ships.count + ')'" chance="100"/>
            </do_if>
            
            <!-- Process ship trading with optional skill-based pre-search delay -->
            <do_if value="$ship.exists and $ship.isoperational">
              <!-- Resolve pilot skill level -->
              <run_actions ref="md.GT_Ship_Management.Calculate_Skill_Level" result="$skillInfo">
                <param name="ship" value="$ship"/>
              </run_actions>
              <set_value name="$skillLevel" exact="if $skillInfo? and $skillInfo.$Level? then $skillInfo.$Level else 1"/>

              <!-- ✅ PERFORMANCE FIX: Add randomization to prevent simultaneous searches -->
              <set_value name="$penaltyDelay" exact="0s"/>
              <do_if value="$skillLevel le 1">
                <!-- 30s ± 5s randomization (25-35s range) -->
                <set_value name="$penaltyDelay" min="25s" max="35s"/>
              </do_if>
              <do_elseif value="$skillLevel == 2">
                <!-- 22.5s ± 3.75s randomization (18.75-26.25s range) -->
                <set_value name="$penaltyDelay" min="18.75s" max="26.25s"/>
              </do_elseif>
              <do_elseif value="$skillLevel == 3">
                <!-- 15s ± 2.5s randomization (12.5-17.5s range) -->
                <set_value name="$penaltyDelay" min="12.5s" max="17.5s"/>
              </do_elseif>
              <do_elseif value="$skillLevel == 4">
                <!-- 7.5s ± 1.25s randomization (6.25-8.75s range) -->
                <set_value name="$penaltyDelay" min="6.25s" max="8.75s"/>
              </do_elseif>

              <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
                <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Randomized skill-based delay: ' + $penaltyDelay + 's (Skill Level: ' + $skillLevel + ')'" chance="100"/>
              </do_if>

              <do_if value="$penaltyDelay gt 0s">
                <!-- Pass ship and delay in a table parameter -->
                <signal_cue_instantly cue="FindBestTrade_Delayed" param="table[$Ship = $ship, $Delay = $penaltyDelay, $ShipID = $ship.idcode]"/>
              </do_if>
              <do_else>
                <!-- Pass ship directly as parameter -->
                <signal_cue_instantly cue="FindBestTrade" param="$ship"/>
              </do_else>
            </do_if>
            <do_else>
              <!-- DEBUG: Ship not operational -->
              <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
                <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Ship ' + $ship.knownname + ' is not operational (exists: ' + $ship.exists + ', operational: ' + $ship.isoperational + ')'" chance="100"/>
              </do_if>
            </do_else>
            
            <set_value name="$processed" exact="$processed + 1"/>
          </do_while>
          
          <set_value name="global.$GT_TradingQueue.$Processing" exact="false"/>
          
          <!-- Continue processing if more ships in queue WITH DELAY to prevent stuttering -->
          <do_if value="global.$GT_TradingQueue.$Ships.count gt 0">
            <!-- DEBUG: More ships to process -->
            <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
              <debug_text text="'[GalaxyTrader MK3 DEBUG] ' + global.$GT_TradingQueue.$Ships.count + ' ships remaining in queue, continuing after random 0.3-0.7s delay'" chance="100"/>
            </do_if>
            
            <!-- ✅ PERFORMANCE FIX: Add 0.5s delay between processing ships to prevent stuttering -->
            <signal_cue_instantly cue="DelayedQueueProcessing"/>
          </do_if>
          <do_else>
            <!-- DEBUG: Queue empty -->
            <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
              <debug_text text="'[GalaxyTrader MK3 DEBUG] Trading queue is now empty'" chance="100"/>
            </do_if>
          </do_else>
        </do_if>
        <do_else>
          <!-- DEBUG: Queue already processing or empty -->
          <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] Queue already processing or empty (Processing: ' + global.$GT_TradingQueue.$Processing + ', Size: ' + global.$GT_TradingQueue.$Ships.count + ')'" chance="100"/>
          </do_if>
        </do_else>
      </actions>
    </cue>
    
    <!-- ✅ PERFORMANCE FIX: Delayed queue processing to prevent stuttering -->
    <cue name="DelayedQueueProcessing" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <!-- ✅ PERFORMANCE FIX: Random 0.3-0.7s delay to spread load -->
      <delay min="0.3s" max="0.7s"/>
      <actions>
        <signal_cue_instantly cue="ProcessTradingQueue"/>
      </actions>
    </cue>
    
    <!-- Skill-based pre-search delay wrapper -->
    <cue name="FindBestTrade_Delayed" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <!-- ✅ CRITICAL FIX: Use this.$ to ensure instance-level variable scope -->
        <set_value name="$data" exact="event.param"/>
        <set_value name="this.$ship" exact="$data.$Ship"/>
        <set_value name="this.$delayTime" exact="$data.$Delay"/>
        <set_value name="this.$shipID" exact="$data.$ShipID"/>
        
        <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
          <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + this.$shipID + ') Applying pre-search delay: ' + this.$delayTime + ' [instance: ' + this + ']'" chance="100"/>
        </do_if>
      </actions>
      <delay exact="this.$delayTime"/>
      <actions>
        <!-- ✅ SIMPLIFIED: Check if ship is currently busy with orders -->
        <set_value name="$isBusy" exact="false"/>
        
        <!-- Check 1: Has trade orders in queue -->
        <do_if value="this.$ship.tradeorders? and this.$ship.tradeorders.count gt 0">
          <set_value name="$isBusy" exact="true"/>
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + this.$shipID + ') Ship busy: has ' + this.$ship.tradeorders.count + ' trade orders'" chance="100"/>
          </do_if>
        </do_if>
        
        <!-- Check 2: Has training order -->
        <do_if value="not $isBusy and this.$ship.order? and this.$ship.order.id == 'DockAndTrain'">
          <set_value name="$isBusy" exact="true"/>
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + this.$shipID + ') Ship busy: in training'" chance="100"/>
          </do_if>
        </do_if>
        
        <do_if value="this.$ship.exists and this.$ship.isoperational and not $isBusy">
          <!-- Pass ship directly as parameter -->
          <signal_cue_instantly cue="FindBestTrade" param="this.$ship"/>
        </do_if>
        <do_elseif value="$isBusy">
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + this.$shipID + ') Skipping delayed search; ship already has active trade [instance: ' + this + ']'" chance="100"/>
          </do_if>
          
          <!-- CRITICAL FIX: Signal AI script that no new trade is available (ship is busy) -->
          <signal_objects object="this.$ship" param="'GT_No_Trade_Found'"/>
          
          <!-- CRITICAL: Clean up search lock since we're skipping the search -->
          <do_if value="global.$GT_SearchLocks? and global.$GT_SearchLocks.{this.$ship}?">
            <remove_value name="global.$GT_SearchLocks.{this.$ship}"/>
            <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
              <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + this.$shipID + ') Search lock released (skipped delayed search due to active trade)'" chance="100"/>
            </do_if>
          </do_if>
          
          <!-- CRITICAL: Clean up AI parameters -->
          <do_if value="global.$GT_AIParameters? and global.$GT_AIParameters.{this.$ship}?">
            <remove_value name="global.$GT_AIParameters.{this.$ship}"/>
          </do_if>
        </do_elseif>
        <do_else>
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + this.$shipID + ') Skipping trade search after delay; ship no longer operational'" chance="100"/>
          </do_if>
          
          <!-- CRITICAL FIX: Signal AI script if ship still exists (even if not operational) -->
          <do_if value="this.$ship.exists">
            <signal_objects object="this.$ship" param="'GT_No_Trade_Found'"/>
          </do_if>
          
          <!-- CRITICAL: Clean up search lock for non-operational ships too -->
          <do_if value="global.$GT_SearchLocks? and global.$GT_SearchLocks.{this.$ship}?">
            <remove_value name="global.$GT_SearchLocks.{this.$ship}"/>
          </do_if>
          
          <!-- CRITICAL: Clean up AI parameters -->
          <do_if value="global.$GT_AIParameters? and global.$GT_AIParameters.{this.$ship}?">
            <remove_value name="global.$GT_AIParameters.{this.$ship}"/>
          </do_if>
        </do_else>
      </actions>
    </cue>
    
    <!-- Find Best Trade for Ship (Main Entry Point) -->
    <cue name="FindBestTrade" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <!-- Receive ship as parameter -->
        <set_value name="$ship" exact="event.param"/>
        
        <!-- Validate ship -->
        <run_actions ref="md.GT_Utilities.GT_ValidateShip" result="$shipValid">
          <param name="ship" value="$ship"/>
        </run_actions>
        
        <!-- ✅ SIMPLIFIED: Check if ship is currently busy with orders -->
        <set_value name="$isBusy" exact="false"/>
        
        <!-- Check 1: Has trade orders in queue -->
        <do_if value="$ship.tradeorders? and $ship.tradeorders.count gt 0">
          <set_value name="$isBusy" exact="true"/>
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Ship busy: has ' + $ship.tradeorders.count + ' trade orders'" chance="100"/>
          </do_if>
        </do_if>
        
        <!-- Check 2: Has training order -->
        <do_if value="not $isBusy and $ship.order? and $ship.order.id == 'DockAndTrain'">
          <set_value name="$isBusy" exact="true"/>
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Ship busy: in training'" chance="100"/>
          </do_if>
        </do_if>
        
        <do_if value="$shipValid and not $isBusy">
          <!-- Get configuration values with safe defaults -->
          <!-- FORCE MinROI to 0% (ignore saved config) -->
          <set_value name="$minROI" exact="0"/> <!-- Accept any profit (0% ROI minimum) as integer -->
          
          <do_if value="global.$GT_Config? and global.$GT_Config.$Trading? and global.$GT_Config.$Trading.$MinAbsoluteProfit?">
            <set_value name="$minAbsoluteProfit" exact="@global.$GT_Config.$Trading.$MinAbsoluteProfit"/>
          </do_if>
          <do_else>
            <set_value name="$minAbsoluteProfit" exact="10000"/> <!-- 100 Cr in RAW format -->
          </do_else>
          
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Search parameters: MinROI=' + $minROI + '%, MinAbsoluteProfit=' + ($minAbsoluteProfit / 100) + ' Cr'" chance="100"/>
          </do_if>
          
          <!-- CRITICAL FIX: Use AI script parameters if available, otherwise use pilot skill-based limits -->
          <set_value name="$maxDistance" exact="15"/> <!-- Default fallback -->
          
          <!-- Check if we have stored AI parameters for this ship -->
          <set_value name="$allowIllegal" exact="false"/> <!-- Default: illegal trades not allowed -->
          <do_if value="global.$GT_AIParameters? and global.$GT_AIParameters.{$ship}?">
            <set_value name="$aiParams" exact="global.$GT_AIParameters.{$ship}"/>
            
            <!-- Use the maximum of MaxBuy and MaxSell from AI script -->
            <set_value name="$maxDistance" exact="[$aiParams.$MaxBuy, $aiParams.$MaxSell].max"/>
            
            <!-- Get AllowIllegal setting from AI parameters -->
            <do_if value="$aiParams.$AllowIllegal?">
              <set_value name="$allowIllegal" exact="$aiParams.$AllowIllegal"/>
            </do_if>
            
            <!-- DEBUG: Using AI script parameters -->
            <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
              <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Using AI script distance limits: MaxBuy=' + $aiParams.$MaxBuy + ', MaxSell=' + $aiParams.$MaxSell + ', using max=' + $maxDistance + ' jumps'" chance="100"/>
            </do_if>
            
            <!-- Clean up old parameters (older than 5 minutes) -->
            <do_if value="(player.age - $aiParams.$RequestTime) gt 300s">
              <remove_value name="global.$GT_AIParameters.{$ship}"/>
              <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
                <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Cleaned up old AI parameters (age: ' + ((player.age - $aiParams.$RequestTime) / 1s) + 's)'" chance="100"/>
              </do_if>
            </do_if>
          </do_if>
          <do_else>
            <!-- Fallback to pilot skill-based limits -->
            <do_if value="$ship.pilot">
              <!-- Get pilot's actual max jump capability -->
              <set_value name="$pilotMaxJumps" exact="$ship.pilot.skill.piloting"/>
              
              <!-- Apply skill-based maximum distance with reasonable limits -->
              <set_value name="$skillBasedMax" exact="[$pilotMaxJumps, 1].max"/> <!-- Minimum 1 jump -->
              <set_value name="$configMax" exact="15"/> <!-- Default config maximum -->
              
              <!-- Check if config override exists -->
              <do_if value="global.$GT_Config? and global.$GT_Config.$Trading? and global.$GT_Config.$Trading.$MaxTradeDistance?">
                <set_value name="$configMax" exact="@global.$GT_Config.$Trading.$MaxTradeDistance"/>
              </do_if>
              
              <!-- Use the minimum of skill-based limit and config limit -->
              <set_value name="$maxDistance" exact="[$skillBasedMax, $configMax].min"/>
              
              <!-- DEBUG: Pilot skill-based distance -->
              <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
                <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') No AI params, using pilot ' + $ship.pilot.name + ' max jumps: ' + $pilotMaxJumps + ', trade distance: ' + $maxDistance + ' (config max: ' + $configMax + ')'" chance="100"/>
              </do_if>
            </do_if>
            <do_else>
              <!-- No pilot - use config or default -->
              <do_if value="global.$GT_Config? and global.$GT_Config.$Trading? and global.$GT_Config.$Trading.$MaxTradeDistance?">
                <set_value name="$maxDistance" exact="@global.$GT_Config.$Trading.$MaxTradeDistance"/>
              </do_if>
              
              <!-- DEBUG: No pilot fallback -->
              <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
                <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') No pilot found, using fallback distance: ' + $maxDistance + ' jumps'" chance="100"/>
              </do_if>
            </do_else>
          </do_else>
          
          <do_if value="global.$GT_Config? and global.$GT_Config.$Trading? and global.$GT_Config.$Trading.$FactionPriority?">
            <set_value name="$factionPriority" exact="@global.$GT_Config.$Trading.$FactionPriority"/>
          </do_if>
          <do_else>
            <set_value name="$factionPriority" exact="'player'"/> <!-- Default to player faction -->
          </do_else>
          
          <!-- ✅ PERFORMANCE FIX: Check cache FIRST (fast), only queue for live search if needed -->
          <set_value name="$searchParams" exact="table[
            $Ship = $ship,
            $MaxDistance = $maxDistance,
            $MinROI = $minROI,
            $MinAbsoluteProfit = $minAbsoluteProfit,
            $FactionPriority = $factionPriority,
            $AllowIllegal = $allowIllegal
          ]"/>
          
          <!-- Try cache first (instant, no queue) -->
          <signal_cue_instantly cue="CheckTradeCache" param="$searchParams"/>
        </do_if>
        <do_else>
          <do_if value="$isBusy">
            <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
              <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Skipping trade search; ship is busy'" chance="100"/>
            </do_if>
            
            <!-- CRITICAL FIX: Signal AI script that no new trade is available (ship is busy) -->
            <signal_objects object="$ship" param="'GT_No_Trade_Found'"/>
            
            <!-- CRITICAL: Release search lock since we're skipping the search -->
            <do_if value="global.$GT_SearchLocks? and global.$GT_SearchLocks.{$ship}?">
              <remove_value name="global.$GT_SearchLocks.{$ship}"/>
              <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
                <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') Search lock released (skipped due to ship busy)'" chance="100"/>
              </do_if>
            </do_if>
            
            <!-- CRITICAL: Clean up AI parameters -->
            <do_if value="global.$GT_AIParameters? and global.$GT_AIParameters.{$ship}?">
              <remove_value name="global.$GT_AIParameters.{$ship}"/>
            </do_if>
          </do_if>
          <do_else>
            <debug_text text="'[GalaxyTrader MK3] Invalid ship for trading: ' + $ship.knownname" chance="100"/>
            
            <!-- CRITICAL: Release search lock for invalid ships too -->
            <do_if value="global.$GT_SearchLocks? and global.$GT_SearchLocks.{$ship}?">
              <remove_value name="global.$GT_SearchLocks.{$ship}"/>
            </do_if>
            
            <!-- CRITICAL: Clean up AI parameters -->
            <do_if value="global.$GT_AIParameters? and global.$GT_AIParameters.{$ship}?">
              <remove_value name="global.$GT_AIParameters.{$ship}"/>
            </do_if>
          </do_else>
        </do_else>
      </actions>
    </cue>
    
    <!-- ✅ PERFORMANCE FIX: Check Trade Cache (fast, no queue needed) -->
    <cue name="CheckTradeCache" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$params" exact="event.param"/>
        <set_value name="$ship" exact="$params.$Ship"/>
        
        <!-- For now, skip cache and go straight to queue for live search -->
        <!-- TODO: Implement actual cache checking here -->
        <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
          <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') 📋 Cache check → queuing for live search'" chance="100"/>
        </do_if>
        
        <!-- Initialize queue if needed -->
        <do_if value="not global.$GT_SearchQueue?">
          <set_value name="global.$GT_SearchQueue" exact="table[]"/>
          <set_value name="global.$GT_SearchQueue.$Ships" exact="[]"/>
          <set_value name="global.$GT_SearchQueue.$ActiveSearches" exact="0"/>
          <set_value name="global.$GT_SearchQueue.$MaxConcurrent" exact="1"/> <!-- ONLY 1 search at a time -->
        </do_if>
        
        <!-- Store search parameters for this ship -->
        <do_if value="not global.$GT_SearchQueue.$Params?">
          <set_value name="global.$GT_SearchQueue.$Params" exact="table[]"/>
        </do_if>
        
        <set_value name="global.$GT_SearchQueue.$Params.{$ship}" exact="$params"/>
        
        <!-- Add to search queue (with deduplication) -->
        <do_if value="not global.$GT_SearchQueue.$Ships.indexof.{$ship}">
          <append_to_list name="global.$GT_SearchQueue.$Ships" exact="$ship"/>
          
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') 🔍 Added to SEARCH QUEUE (position: ' + global.$GT_SearchQueue.$Ships.count + ')'" chance="100"/>
          </do_if>
        </do_if>
        
        <!-- Start processing queue -->
        <signal_cue_instantly cue="ProcessSearchQueue"/>
      </actions>
    </cue>
    
    <!-- ✅ PERFORMANCE FIX: Process Search Queue - Use ActiveSearches as atomic lock -->
    <cue name="ProcessSearchQueue" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <!-- ✅ ATOMIC LOCK: Only process if no active search (prevents race conditions) -->
        <do_if value="global.$GT_SearchQueue.$ActiveSearches == 0 and global.$GT_SearchQueue.$Ships.count gt 0">
          
          <!-- Get first ship from queue -->
          <set_value name="$ship" exact="global.$GT_SearchQueue.$Ships.{1}"/>
          <remove_from_list name="global.$GT_SearchQueue.$Ships" exact="$ship"/>
          
          <!-- Get stored parameters for this ship -->
          <set_value name="$params" exact="global.$GT_SearchQueue.$Params.{$ship}"/>
          
          <!-- Increment active search counter (atomic lock) -->
          <set_value name="global.$GT_SearchQueue.$ActiveSearches" operation="add"/>
          
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] (' + $ship.idcode + ') 🔍 SEARCH STARTING (active: ' + global.$GT_SearchQueue.$ActiveSearches + '/' + global.$GT_SearchQueue.$MaxConcurrent + ', queued: ' + global.$GT_SearchQueue.$Ships.count + ')'" chance="100"/>
          </do_if>
          
          <!-- Start the actual search (delegate to search module) -->
          <signal_cue_instantly cue="md.GT_Trading_Search.SearchTradeRoutes" param="$params"/>
        </do_if>
        <do_else>
          <do_if value="@global.$GT_Config.$Debug.$Enabled and @global.$GT_Config.$Debug.$TradeSearch and global.$GT_SearchQueue.$ActiveSearches gt 0 and global.$GT_SearchQueue.$Ships.count gt 0">
            <debug_text text="'[GalaxyTrader MK3 DEBUG] Search in progress, skipping (active: ' + global.$GT_SearchQueue.$ActiveSearches + ', queued: ' + global.$GT_SearchQueue.$Ships.count + ')'" chance="100"/>
          </do_if>
        </do_else>
      </actions>
    </cue>
  </cues>
</mdscript>
