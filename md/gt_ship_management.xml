<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GT_Ship_Management" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../ORIGINAL_MODS_DO NOT_MODIFY/X4Original/libraries/md.xsd">
  <cues>
    
    <!-- Ship Registration and Initialization -->
    <library name="Register_Ship" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to register"/>
        <param name="pilot" comment="Ship's pilot"/>
        <param name="config" comment="Ship configuration"/>
      </params>
      <actions>
        <!-- Ensure global data structures exist -->
        <do_if value="not global.$GT_Ships?">
          <set_value name="global.$GT_Ships" exact="table[]"/>
        </do_if>
        <do_if value="not global.$GT_Pilots?">
          <set_value name="global.$GT_Pilots" exact="table[]"/>
        </do_if>
        
        <!-- Register ship if not already registered -->
        <do_if value="not global.$GT_Ships.{$ship}?">
          <set_value name="global.$GT_Ships.{$ship}" exact="table[]"/>
          <set_value name="global.$GT_Ships.{$ship}.$RegisterTime" exact="player.age"/>
          <set_value name="global.$GT_Ships.{$ship}.$Config" exact="$config"/>
          <set_value name="global.$GT_Ships.{$ship}.$LastUpdate" exact="player.age"/>
          <set_value name="global.$GT_Ships.{$ship}.$Status" exact="'active'"/>
          
          <debug_text text="'[GT-ShipMgmt] Registered ship: ' + $ship.knownname" chance="100"/>
        </do_if>
        
        <!-- Register pilot if provided -->
        <do_if value="$pilot">
          <run_actions ref="Register_Pilot">
            <param name="pilot" value="$pilot"/>
            <param name="ship" value="$ship"/>
          </run_actions>
          
          <!-- Apply ship modifications immediately upon registration -->
          <run_actions ref="Handle_Pilot_Ship_Assignment">
            <param name="ship" value="$ship"/>
            <param name="new_pilot" value="$pilot"/>
            <param name="old_pilot" value="null"/>
          </run_actions>
        </do_if>
      </actions>
    </library>
    
    <!-- Pilot Registration and XP Management -->
    <library name="Register_Pilot" purpose="run_actions">
      <params>
        <param name="pilot" comment="Pilot to register"/>
        <param name="ship" comment="Associated ship"/>
      </params>
      <actions>
        <!-- Register pilot if not already registered -->
        <do_if value="not global.$GT_Pilots.{$pilot}?">
          <set_value name="global.$GT_Pilots.{$pilot}" exact="table[]"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$XP" exact="0"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$Level" exact="1"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$TotalTrades" exact="0"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$TotalProfit" exact="0"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$TrainingCompleted" exact="[]"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$RegisterTime" exact="player.age"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$AssociatedShip" exact="$ship"/>
          
          <!-- CRITICAL FIX: Store original ship name for proper naming system -->
          <set_value name="global.$GT_Pilots.{$pilot}.$OriginalShipName" exact="$ship.knownname"/>
          
          <!-- CRITICAL FIX: Trigger ship renaming for new pilots -->
          <set_value name="$rankTitle" exact="'Lehrling'"/>  <!-- Default to first rank -->
          <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$TraderTitles? and global.$GT_Config.$XP.$TraderTitles.{1}?">
            <set_value name="$rankTitle" exact="global.$GT_Config.$XP.$TraderTitles.{1}"/>
          </do_if>
          
          <!-- Call the ship naming system -->
          <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$pilot, $xp=0, $level=1, $rank=$rankTitle, $nameType='trader']"/>
          
          <debug_text text="'[GT-ShipMgmt] Registered pilot: ' + $pilot.name" chance="100"/>
        </do_if>
        
        <!-- Update ship association and ensure OriginalShipName is stored -->
        <set_value name="global.$GT_Pilots.{$pilot}.$AssociatedShip" exact="$ship"/>
        
        <!-- Determine if this is a new ship assignment or resuming on same ship -->
        <set_value name="$isNewShip" exact="false"/>
        <do_if value="global.$GT_Pilots.{$pilot}.$OriginalShipName?">
          <!-- Pilot already has a stored original name - check if current ship name matches it -->
          <do_if value="$ship.knownname != global.$GT_Pilots.{$pilot}.$OriginalShipName">
            <!-- Current ship name is DIFFERENT from stored original - this is a NEW ship assignment -->
            <set_value name="$isNewShip" exact="true"/>
            <set_value name="global.$GT_Pilots.{$pilot}.$OriginalShipName" exact="$ship.knownname"/>
            <debug_text text="'[GT-ShipMgmt] Pilot ' + $pilot.name + ' reassigned to NEW ship - updated OriginalShipName to: ' + $ship.knownname" chance="100"/>
          </do_if>
          <do_else>
            <!-- Current ship name matches stored original - resuming on SAME ship (just needs rank prefix added) -->
            <debug_text text="'[GT-ShipMgmt] Pilot ' + $pilot.name + ' resuming on SAME ship: ' + $ship.knownname + ' (will add rank prefix)'" chance="100"/>
          </do_else>
        </do_if>
        <do_else>
          <!-- No original name stored yet - first time registration -->
          <set_value name="$isNewShip" exact="true"/>
          <set_value name="global.$GT_Pilots.{$pilot}.$OriginalShipName" exact="$ship.knownname"/>
          <debug_text text="'[GT-ShipMgmt] First-time registration - stored OriginalShipName for pilot ' + $pilot.name + ': ' + $ship.knownname" chance="100"/>
        </do_else>
        
        <!-- ALWAYS rename ship for existing pilots (whether new ship, same ship, or first registration) -->
        <do_if value="global.$GT_Pilots.{$pilot}.$XP?">
          <set_value name="$currentXP" exact="global.$GT_Pilots.{$pilot}.$XP"/>
          <set_value name="$currentLevel" exact="global.$GT_Pilots.{$pilot}.$Level"/>
          
          <!-- Calculate rank title -->
          <set_value name="$rankTitle" exact="'Lehrling'"/>  <!-- Default rank -->
          <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$TraderTitles?">
            <set_value name="$rankIndex" exact="($currentLevel / 3)i + 1"/>
            <do_if value="$rankIndex gt global.$GT_Config.$XP.$TraderTitles.keys.count">
              <set_value name="$rankIndex" exact="global.$GT_Config.$XP.$TraderTitles.keys.count"/>
            </do_if>
            <do_if value="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}?">
              <set_value name="$rankTitle" exact="global.$GT_Config.$XP.$TraderTitles.{$rankIndex}"/>
            </do_if>
          </do_if>
          
          <!-- Determine name type based on XP block status -->
          <set_value name="$nameType" exact="'trader'"/>
          <do_if value="global.$GT_Pilots.{$pilot}.$XPBlocked?">
            <set_value name="$nameType" exact="'blocked'"/>
          </do_if>
          
          <!-- Call the ship naming system -->
          <signal_cue_instantly cue="md.GT_XP_Training.UpdateShipName" param="table[$ship=$ship, $pilot=$pilot, $xp=$currentXP, $level=$currentLevel, $rank=$rankTitle, $nameType=$nameType]"/>
          
          <debug_text text="'[GT-ShipMgmt] Triggered ship renaming for existing pilot ' + $pilot.name + ' (XP=' + $currentXP + ', Level=' + $currentLevel + ', Rank=' + $rankTitle + ')'" chance="100"/>
        </do_if>
      </actions>
    </library>
    
    <!-- Update Ship Status -->
    <library name="Update_Ship_Status" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to update"/>
        <param name="status" comment="New status"/>
      </params>
      <actions>
        <do_if value="global.$GT_Ships.{$ship}?">
          <set_value name="global.$GT_Ships.{$ship}.$Status" exact="$status"/>
          <set_value name="global.$GT_Ships.{$ship}.$LastUpdate" exact="player.age"/>
          <debug_text text="'[GT-ShipMgmt] Updated ship status: ' + $ship.knownname + ' -> ' + $status" chance="100"/>
        </do_if>
      </actions>
    </library>
    
    <!-- Skill Level Calculation -->
    <library name="Calculate_Skill_Level" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to check"/>
        <param name="use_md_system" default="true" comment="Prefer MD system over native game skill"/>
      </params>
      <actions>
        <set_value name="$skillLevel" exact="1"/>
        <set_value name="$pilotName" exact="'NONE'"/>
        <set_value name="$usingMDSkill" exact="false"/>
        
        <do_if value="$ship.pilot?">
          <set_value name="$pilotName" exact="$ship.pilot.name"/>
          
          <!-- Try MD system first if enabled -->
          <do_if value="$use_md_system and global.$GT_Pilots.{$ship.pilot}?">
            <set_value name="$mdXP" exact="global.$GT_Pilots.{$ship.pilot}.$XP"/>
            <set_value name="$mdSkillLevel" exact="1"/>
            
            <!-- Calculate skill level from XP using simple thresholds if config not available -->
            <do_if value="global.$GT_Config? and global.$GT_Config.$XP? and global.$GT_Config.$XP.$SkillThresholds?">
              <!-- Use configuration thresholds -->
              <do_all exact="15" counter="$skillCheck">
                <do_if value="$mdXP ge global.$GT_Config.$XP.$SkillThresholds.{$skillCheck}">
                  <set_value name="$mdSkillLevel" exact="$skillCheck"/>
                </do_if>
              </do_all>
            </do_if>
            <do_else>
              <!-- Use simple XP-based calculation as fallback -->
              <do_if value="$mdXP ge 50000">
                <set_value name="$mdSkillLevel" exact="15"/>
              </do_if>
              <do_elseif value="$mdXP ge 30000">
                <set_value name="$mdSkillLevel" exact="10"/>
              </do_elseif>
              <do_elseif value="$mdXP ge 15000">
                <set_value name="$mdSkillLevel" exact="7"/>
              </do_elseif>
              <do_elseif value="$mdXP ge 5000">
                <set_value name="$mdSkillLevel" exact="4"/>
              </do_elseif>
              <do_elseif value="$mdXP ge 1000">
                <set_value name="$mdSkillLevel" exact="2"/>
              </do_elseif>
            </do_else>
            
            <set_value name="$skillLevel" exact="$mdSkillLevel"/>
            <set_value name="$usingMDSkill" exact="true"/>
          </do_if>
          <!-- Fallback to native game skill -->
          <do_elseif value="$ship.pilot.skill.management?">
            <set_value name="$skillLevel" exact="$ship.pilot.skill.management"/>
          </do_elseif>
        </do_if>
        
        <!-- Check commander skill if better -->
        <do_if value="$ship.commander? and $ship.commander.tradenpc? and $ship.commander.tradenpc.skill.management?">
          <set_value name="$commanderSkill" exact="$ship.commander.tradenpc.skill.management"/>
          <set_value name="$skillLevel" exact="[$skillLevel, $commanderSkill].max"/>
        </do_if>
        
        <debug_text text="'[GT-ShipMgmt] Calculate_Skill_Level returning: Level=' + $skillLevel + ', Pilot=' + $pilotName + ', UsingMD=' + $usingMDSkill" chance="100"/>
        
        <!-- Return comprehensive skill information as result -->
        <return value="table[
          $Level = $skillLevel,
          $PilotName = $pilotName,
          $UsingMDSystem = $usingMDSkill,
          $HasPilot = $ship.pilot?,
          $HasCommander = $ship.commander?
        ]"/>
      </actions>
    </library>
    
    <!-- Jump Distance Calculation Based on Skill -->
    <library name="Calculate_Jump_Distance" purpose="run_actions">
      <params>
        <param name="skill_level" comment="Pilot skill level"/>
      </params>
      <actions>
        <set_value name="$jumpDistance" exact="1"/>
        
        <!-- Skill-based jump distance calculation -->
        <do_if value="$skill_level le 2">
          <set_value name="$jumpDistance" exact="1"/>   <!-- Lehrling -->
        </do_if>
        <do_elseif value="$skill_level le 5">
          <set_value name="$jumpDistance" exact="3"/>   <!-- Kurier -->
        </do_elseif>
        <do_elseif value="$skill_level le 8">
          <set_value name="$jumpDistance" exact="5"/>   <!-- Lieferant -->
        </do_elseif>
        <do_elseif value="$skill_level le 11">
          <set_value name="$jumpDistance" exact="10"/>  <!-- Händler -->
        </do_elseif>
        <do_elseif value="$skill_level le 13">
          <set_value name="$jumpDistance" exact="15"/>  <!-- Kaufmann -->
        </do_elseif>
        <do_else>
          <set_value name="$jumpDistance" exact="25"/>  <!-- Fernkaufmann -->
        </do_else>
        
        <return value="$jumpDistance"/>
      </actions>
    </library>
    
    <!-- Detect Ship Class -->
    <library name="Detect_Ship_Class" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to analyze"/>
      </params>
      <actions>
        <set_value name="$shipClass" exact="'unknown'"/>
        <set_value name="$shipSize" exact="'unknown'"/>
        <set_value name="$isSmall" exact="false"/>
        <set_value name="$isMedium" exact="false"/>
        <set_value name="$isLarge" exact="false"/>
        <set_value name="$isCapital" exact="false"/>
        
        <!-- Detect ship class using X4 native properties -->
        <do_if value="$ship.isclass.ship_s">
          <set_value name="$shipClass" exact="'small'"/>
          <set_value name="$shipSize" exact="'S'"/>
          <set_value name="$isSmall" exact="true"/>
        </do_if>
        <do_elseif value="$ship.isclass.ship_m">
          <set_value name="$shipClass" exact="'medium'"/>
          <set_value name="$shipSize" exact="'M'"/>
          <set_value name="$isMedium" exact="true"/>
        </do_elseif>
        <do_elseif value="$ship.isclass.ship_l">
          <set_value name="$shipClass" exact="'large'"/>
          <set_value name="$shipSize" exact="'L'"/>
          <set_value name="$isLarge" exact="true"/>
        </do_elseif>
        <do_elseif value="$ship.isclass.ship_xl">
          <set_value name="$shipClass" exact="'capital'"/>
          <set_value name="$shipSize" exact="'XL'"/>
          <set_value name="$isCapital" exact="true"/>
        </do_elseif>
        <do_else>
          <!-- Fallback: assume medium ship if detection fails -->
          <set_value name="$shipClass" exact="'medium'"/>
          <set_value name="$shipSize" exact="'M'"/>
          <set_value name="$isMedium" exact="true"/>
          <debug_text text="'[GT-ShipMgmt] WARNING: Failed to detect ship class for ' + $ship.knownname + ', defaulting to medium'" chance="100"/>
        </do_else>
        
        <debug_text text="'[GT-ShipMgmt] Detect_Ship_Class returning: Class=' + $shipClass + ', Size=' + $shipSize + ', Small=' + $isSmall + ', Medium=' + $isMedium + ', Large=' + $isLarge + ', Capital=' + $isCapital" chance="100"/>
        
        <return value="table[
          $Class = $shipClass,
          $Size = $shipSize,
          $IsSmall = $isSmall,
          $IsMedium = $isMedium,
          $IsLarge = $isLarge,
          $IsCapital = $isCapital
        ]"/>
      </actions>
    </library>
    
    <!-- Calculate ship radar range using native property -->
    <library name="Calculate_Radar_Range" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to analyze"/>
      </params>
      <actions>
        <set_value name="$radarRangeMeters" exact="$ship.maxradarrange"/>
        <return value="$radarRangeMeters"/>
      </actions>
    </library>
    
    <!-- Main Ship Modification Handler -->
    <library name="Handle_Pilot_Ship_Assignment" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship receiving modifications"/>
        <param name="new_pilot" comment="New pilot assigned"/>
        <param name="old_pilot" comment="Previous pilot (may be null)"/>
      </params>
      <actions>
        <!-- Get ship class information -->
        <run_actions ref="Detect_Ship_Class" result="$classInfo">
          <param name="ship" value="$ship"/>
        </run_actions>
        
        <!-- Get pilot skill level -->
        <run_actions ref="Calculate_Skill_Level" result="$skillInfo">
          <param name="ship" value="$ship"/>
        </run_actions>
        
        <!-- Safety check: ensure we have valid results -->
        <do_if value="not $classInfo?">
          <debug_text text="'[GT-ShipMgmt] ERROR: Detect_Ship_Class returned null for ' + $ship.knownname" chance="100"/>
          <set_value name="$classInfo" exact="table[$Class = 'medium', $Size = 'M', $IsSmall = false, $IsMedium = true, $IsLarge = false, $IsCapital = false]"/>
        </do_if>
        
        <do_if value="not $skillInfo?">
          <debug_text text="'[GT-ShipMgmt] ERROR: Calculate_Skill_Level returned null for ' + $ship.knownname" chance="100"/>
          <set_value name="$skillInfo" exact="table[$Level = 1, $PilotName = 'UNKNOWN', $UsingMDSystem = false, $HasPilot = false, $HasCommander = false]"/>
        </do_if>
        
        <!-- Apply performance system to ship -->
        <run_actions ref="Apply_Ship_Performance_System">
          <param name="ship" value="$ship"/>
          <param name="skill_level" value="$skillInfo.$Level"/>
          <param name="pilot" value="$new_pilot"/>
        </run_actions>
        
        <debug_text text="'[GT-ShipMgmt] Applied modifications to ' + $ship.knownname + ' for pilot ' + $new_pilot.name + ' (Skill: ' + $skillInfo.$Level + ')'" chance="100"/>
      </actions>
    </library>
    
    <!-- Apply Ship Performance System -->
    <library name="Apply_Ship_Performance_System" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to apply performance system to"/>
        <param name="skill_level" comment="Pilot skill level"/>
        <param name="pilot" comment="Pilot"/>
      </params>
      <actions>
        <!-- Update ship performance display -->
        <run_actions ref="Update_Ship_Performance_Display">
          <param name="ship" value="$ship"/>
          <param name="pilot_level" value="$skill_level"/>
        </run_actions>
        
        <!-- Log performance application -->
        <debug_text text="'[GT-ShipMgmt] Performance system applied to ' + $ship.knownname + ' for pilot ' + $pilot.name + ' (Level: ' + $skill_level + ')'" chance="100"/>
      </actions>
    </library>
    
    <!-- Calculate Ship Performance Bonus/Malus -->
    <library name="Calculate_Performance_Modifier" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to analyze"/>
        <param name="pilot_level" comment="Pilot skill level"/>
      </params>
      <actions>
        <!-- Get ship class information -->
        <run_actions ref="Detect_Ship_Class" result="$classInfo">
          <param name="ship" value="$ship"/>
        </run_actions>
        
        <!-- Safety check: ensure we have valid class info -->
        <do_if value="not $classInfo?">
          <debug_text text="'[GT-ShipMgmt] ERROR: Detect_Ship_Class returned null in Calculate_Performance_Modifier for ' + $ship.knownname" chance="100"/>
          <set_value name="$classInfo" exact="table[$Class = 'medium', $Size = 'M', $IsSmall = false, $IsMedium = true, $IsLarge = false, $IsCapital = false]"/>
        </do_if>
        
        <!-- Initialize performance values -->
        <set_value name="$performanceModifier" exact="0"/>
        <set_value name="$statusText" exact="'Neutral'"/>
        <set_value name="$statusColor" exact="'white'"/>
        
        <!-- Performance Matrix from Specification -->
        <do_if value="$pilot_level le 2">
          <!-- Apprentice (1-2) -->
          <do_if value="$classInfo.$IsSmall">
            <set_value name="$performanceModifier" exact="0"/>
            <set_value name="$statusText" exact="'Optimal'"/>
            <set_value name="$statusColor" exact="'green'"/>
          </do_if>
          <do_elseif value="$classInfo.$IsMedium">
            <set_value name="$performanceModifier" exact="-5"/>
            <set_value name="$statusText" exact="'Penalty'"/>
            <set_value name="$statusColor" exact="'orange'"/>
          </do_elseif>
          <do_elseif value="$classInfo.$IsLarge">
            <set_value name="$performanceModifier" exact="-15"/>
            <set_value name="$statusText" exact="'Major Penalty'"/>
            <set_value name="$statusColor" exact="'red'"/>
          </do_elseif>
          <do_elseif value="$classInfo.$IsCapital">
            <set_value name="$performanceModifier" exact="-25"/>
            <set_value name="$statusText" exact="'Severe Penalty'"/>
            <set_value name="$statusColor" exact="'red'"/>
          </do_elseif>
        </do_if>
        <do_elseif value="$pilot_level == 3">
          <!-- Basic Certified (3) -->
          <do_if value="$classInfo.$IsSmall">
            <set_value name="$performanceModifier" exact="3"/>
            <set_value name="$statusText" exact="'Bonus'"/>
            <set_value name="$statusColor" exact="'green'"/>
          </do_if>
          <do_elseif value="$classInfo.$IsMedium">
            <set_value name="$performanceModifier" exact="0"/>
            <set_value name="$statusText" exact="'Neutral'"/>
            <set_value name="$statusColor" exact="'white'"/>
          </do_elseif>
          <do_elseif value="$classInfo.$IsLarge">
            <set_value name="$performanceModifier" exact="-8"/>
            <set_value name="$statusText" exact="'Penalty'"/>
            <set_value name="$statusColor" exact="'orange'"/>
          </do_elseif>
          <do_elseif value="$classInfo.$IsCapital">
            <set_value name="$performanceModifier" exact="-15"/>
            <set_value name="$statusText" exact="'Major Penalty'"/>
            <set_value name="$statusColor" exact="'red'"/>
          </do_elseif>
        </do_elseif>
        <do_elseif value="$pilot_level ge 4 and $pilot_level le 6">
          <!-- Courier (4-6) -->
          <do_if value="$classInfo.$IsSmall">
            <set_value name="$performanceModifier" exact="3"/>
            <set_value name="$statusText" exact="'Bonus'"/>
            <set_value name="$statusColor" exact="'green'"/>
          </do_if>
          <do_elseif value="$classInfo.$IsMedium">
            <set_value name="$performanceModifier" exact="0"/>
            <set_value name="$statusText" exact="'Neutral'"/>
            <set_value name="$statusColor" exact="'white'"/>
          </do_elseif>
          <do_elseif value="$classInfo.$IsLarge">
            <set_value name="$performanceModifier" exact="-8"/>
            <set_value name="$statusText" exact="'Penalty'"/>
            <set_value name="$statusColor" exact="'orange'"/>
          </do_elseif>
          <do_elseif value="$classInfo.$IsCapital">
            <set_value name="$performanceModifier" exact="-15"/>
            <set_value name="$statusText" exact="'Major Penalty'"/>
            <set_value name="$statusColor" exact="'red'"/>
          </do_elseif>
        </do_elseif>
        <do_elseif value="$pilot_level ge 7 and $pilot_level le 15">
          <!-- Advanced levels - progressively better performance -->
          <do_if value="$pilot_level ge 12">
            <!-- Master Certified (12+) -->
            <do_if value="$classInfo.$IsSmall">
              <set_value name="$performanceModifier" exact="12"/>
            </do_if>
            <do_elseif value="$classInfo.$IsMedium">
              <set_value name="$performanceModifier" exact="9"/>
            </do_elseif>
            <do_elseif value="$classInfo.$IsLarge">
              <set_value name="$performanceModifier" exact="6"/>
            </do_elseif>
            <do_elseif value="$classInfo.$IsCapital">
              <set_value name="$performanceModifier" exact="3"/>
            </do_elseif>
          </do_if>
          <do_elseif value="$pilot_level ge 9">
            <!-- Expert Trader (9-11) -->
            <do_if value="$classInfo.$IsSmall">
              <set_value name="$performanceModifier" exact="9"/>
            </do_if>
            <do_elseif value="$classInfo.$IsMedium">
              <set_value name="$performanceModifier" exact="6"/>
            </do_elseif>
            <do_elseif value="$classInfo.$IsLarge">
              <set_value name="$performanceModifier" exact="3"/>
            </do_elseif>
            <do_elseif value="$classInfo.$IsCapital">
              <set_value name="$performanceModifier" exact="0"/>
            </do_elseif>
          </do_elseif>
          <do_else>
            <!-- Supplier (7-8) -->
            <do_if value="$classInfo.$IsSmall">
              <set_value name="$performanceModifier" exact="6"/>
            </do_if>
            <do_elseif value="$classInfo.$IsMedium">
              <set_value name="$performanceModifier" exact="3"/>
            </do_elseif>
            <do_elseif value="$classInfo.$IsLarge">
              <set_value name="$performanceModifier" exact="0"/>
            </do_elseif>
            <do_elseif value="$classInfo.$IsCapital">
              <set_value name="$performanceModifier" exact="-8"/>
            </do_elseif>
          </do_else>
          
          <!-- Set status for advanced levels -->
          <do_if value="$performanceModifier gt 0">
            <set_value name="$statusText" exact="'Bonus'"/>
            <set_value name="$statusColor" exact="'green'"/>
          </do_if>
          <do_elseif value="$performanceModifier lt 0">
            <set_value name="$statusText" exact="'Penalty'"/>
            <set_value name="$statusColor" exact="'orange'"/>
          </do_elseif>
          <do_else>
            <set_value name="$statusText" exact="'Neutral'"/>
            <set_value name="$statusColor" exact="'white'"/>
          </do_else>
        </do_elseif>
        
        <!-- Master Merchant (15) gets additional bonuses -->
        <do_if value="$pilot_level == 15">
          <set_value name="$performanceModifier" exact="$performanceModifier + 3"/>
          <set_value name="$statusText" exact="'Master Bonus'"/>
          <set_value name="$statusColor" exact="'cyan'"/>
        </do_if>
        
        <!-- Return performance data -->
        <return value="table[
          $Modifier = $performanceModifier,
          $StatusText = $statusText,
          $StatusColor = $statusColor,
          $ShipClass = $classInfo.$Class,
          $ShipSize = $classInfo.$Size
        ]"/>
      </actions>
    </library>
    
    <!-- Get Ship Performance Data -->
    <library name="Get_Ship_Performance_Data" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to get performance data for"/>
      </params>
      <actions>
        <do_if value="global.$GT_Ships.{$ship}?">
          <return value="table[
            $PerformanceInfo = global.$GT_Ships.{$ship}.$PerformanceInfo,
            $PerformanceModifier = global.$GT_Ships.{$ship}.$PerformanceModifier,
            $PerformanceStatus = global.$GT_Ships.{$ship}.$PerformanceStatus,
            $PerformanceLevel = global.$GT_Ships.{$ship}.$PerformanceLevel
          ]"/>
        </do_if>
        <do_else>
          <return value="null"/>
        </do_else>
      </actions>
    </library>
    
    <!-- Update Ship Information Display -->
    <library name="Update_Ship_Performance_Display" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to update"/>
        <param name="pilot_level" comment="Pilot skill level"/>
      </params>
      <actions>
        <!-- Calculate performance modifier -->
        <run_actions ref="Calculate_Performance_Modifier" result="$perfData">
          <param name="ship" value="$ship"/>
          <param name="pilot_level" value="$pilot_level"/>
        </run_actions>
        
        <!-- Create performance info text -->
        <set_value name="$performanceInfo" exact="'GT Performance: ' + $perfData.$StatusText + ' (' + $perfData.$Modifier + '%) - Level ' + $pilot_level + ' pilot in ' + $perfData.$ShipSize + '-class ship'"/>
        
        <!-- Store performance data in global GT_Ships table (X4 doesn't allow custom properties on ship objects) -->
        <do_if value="global.$GT_Ships.{$ship}?">
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceInfo" exact="$performanceInfo"/>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceModifier" exact="$perfData.$Modifier"/>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceStatus" exact="$perfData.$StatusText"/>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceLevel" exact="$pilot_level"/>
        </do_if>
        <do_else>
          <!-- Ship not in tracking table, initialize it first -->
          <debug_text text="'[GT-ShipMgmt] WARNING: Ship ' + $ship.knownname + ' not in GT_Ships table, initializing'" chance="100"/>
          <run_actions ref="Register_Ship">
            <param name="ship" value="$ship"/>
          </run_actions>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceInfo" exact="$performanceInfo"/>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceModifier" exact="$perfData.$Modifier"/>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceStatus" exact="$perfData.$StatusText"/>
          <set_value name="global.$GT_Ships.{$ship}.$PerformanceLevel" exact="$pilot_level"/>
        </do_else>
        
        <!-- Debug output -->
        <debug_text text="'[GT-ShipMgmt] Performance calculated: ' + $ship.knownname + ' - ' + $performanceInfo" chance="100"/>
        
        <!-- Show performance notification to player -->
        <do_if value="global.$GT_Config? and global.$GT_Config.$Notifications? and global.$GT_Config.$Notifications.$Level? and global.$GT_Config.$Notifications.$Level ge 1">
          <show_notification text="'Ship Performance Update:\n' + $ship.knownname + '\n' + $performanceInfo" timeout="8s" priority="6"/>
        </do_if>
      </actions>
    </library>
    
    <!-- Apply Ship Modifications - DEPRECATED: Replaced by GT_Ship_Modification_System -->
    <library name="Apply_Ship_Modifications" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to modify"/>
        <param name="performance_data" comment="Performance data from Calculate_Performance_Modifier"/>
        <param name="pilot_level" comment="Pilot skill level"/>
      </params>
      <actions>
        <!-- DEPRECATED: This library is no longer used. Ship modifications are now handled by -->
        <!-- the GT_Ship_Modification_System using direct engine parameter modification. -->
        <debug_text text="'[GT-ShipMgmt] DEPRECATED: Apply_Ship_Modifications called - use GT_Ship_Modification_System instead'" chance="100"/>
        <!-- Check if modifications are already applied -->
        <set_value name="$currentModLevel" exact="0"/>
        <set_value name="$needsUpdate" exact="true"/>
        
        <do_if value="global.$GT_Ships.{$ship}? and global.$GT_Ships.{$ship}.$AppliedModifications? and global.$GT_Ships.{$ship}.$AppliedModifications.count gt 0">
          <set_value name="$latestMod" exact="global.$GT_Ships.{$ship}.$AppliedModifications.{global.$GT_Ships.{$ship}.$AppliedModifications.count}"/>
          <set_value name="$currentModLevel" exact="$latestMod.$PilotLevel"/>
          
          <!-- Check if modification level matches current pilot level -->
          <do_if value="$currentModLevel == $pilot_level">
            <set_value name="$needsUpdate" exact="false"/>
            <debug_text text="'[GT-ShipMgmt] Ship ' + $ship.knownname + ' already has correct modifications for pilot level ' + $pilot_level" chance="100"/>
          </do_if>
        </do_if>
        
        <!-- Get modification values -->
        <set_value name="$modifier" exact="$performance_data.$Modifier"/>
        <set_value name="$shipClass" exact="$performance_data.$ShipClass"/>
        
        <!-- Convert percentage to X4 multiplier format -->
        <set_value name="$multiplier" exact="1.0 + ($modifier / 100.0)"/>
        
        <!-- Ship modifications now handled by GT_Ship_Performance_System -->
        <do_if value="$needsUpdate and $modifier != 0">
          <debug_text text="'[GT-ShipMgmt] Performance tracking updated: ' + $ship.knownname + ' - ' + $modifier + '% (Level ' + $pilot_level + ' pilot)'" chance="100"/>
          
          <!-- Store modification tracking -->
          <set_value name="$modificationData" exact="table[
            $applied_time = player.age
          ]"/>
          <set_value name="$modificationData.$Type" exact="'engine_performance'"/>
          <set_value name="$modificationData.$Multiplier" exact="$multiplier"/>
          <set_value name="$modificationData.$Percentage" exact="$modifier"/>
          <set_value name="$modificationData.$PilotLevel" exact="$pilot_level"/>
          <set_value name="$modificationData.$ShipClass" exact="$shipClass"/>
          <set_value name="$modificationData.$AppliedTime" exact="player.age"/>
          
          <append_to_list name="global.$GT_Ships.{$ship}.$AppliedModifications" exact="$modificationData"/>
          
          <!-- Show modification notification -->
          <show_notification text="'GalaxyTrader Ship Enhancement Applied:\n' + $ship.knownname + '\nEngine Performance: ' + $modifier + '%\nPilot Level: ' + $pilot_level" timeout="10s" priority="7"/>
        </do_if>
        <do_else>
          <debug_text text="'[GT-ShipMgmt] No modifications needed for ' + $ship.knownname + ' (neutral performance)'" chance="100"/>
        </do_else>
      </actions>
    </library>

    <!-- Clear GT Ship Modification Tracking -->
    <library name="Remove_GT_Ship_Modifications" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to clear modification tracking from"/>
      </params>
      <actions>
        <!-- Note: X4 equipment modifications are permanent once applied -->
        <!-- This function only clears our tracking data -->
        <do_if value="global.$GT_Ships.{$ship}? and global.$GT_Ships.{$ship}.$AppliedModifications?">
          <debug_text text="'[GT-ShipMgmt] Clearing GT modification tracking for ' + $ship.knownname" chance="100"/>
          
          <!-- Clear modification tracking -->
          <set_value name="global.$GT_Ships.{$ship}.$AppliedModifications" exact="[]"/>
          
          <debug_text text="'[GT-ShipMgmt] GT modification tracking cleared for ' + $ship.knownname" chance="100"/>
        </do_if>
      </actions>
    </library>

    <!-- Get Ship Modification Status -->
    <library name="Get_Ship_Modification_Status" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship to check"/>
      </params>
      <actions>
        <do_if value="global.$GT_Ships.{$ship}? and global.$GT_Ships.{$ship}.$AppliedModifications?">
          <set_value name="$modifications" exact="global.$GT_Ships.{$ship}.$AppliedModifications"/>
          <set_value name="$hasModifications" exact="$modifications.count gt 0"/>
          
          <do_if value="$hasModifications">
            <set_value name="$latestMod" exact="$modifications.{$modifications.count}"/>
            <return value="table[
              $HasModifications = true,
              $ModificationCount = $modifications.count,
              $LatestModification = $latestMod,
              $PerformanceBonus = $latestMod.$Percentage,
              $PilotLevel = $latestMod.$PilotLevel,
              $ShipClass = $latestMod.$ShipClass
            ]"/>
          </do_if>
          <do_else>
            <return value="table[
              $HasModifications = false,
              $ModificationCount = 0
            ]"/>
          </do_else>
        </do_if>
        <do_else>
          <return value="table[
            $HasModifications = false,
            $ModificationCount = 0
          ]"/>
        </do_else>
      </actions>
    </library>

    <!-- Update Ship Modifications on Pilot Change -->
    <library name="Update_Ship_On_Pilot_Change" purpose="run_actions">
      <params>
        <param name="ship" comment="Ship that changed pilot"/>
        <param name="new_pilot" comment="New pilot (can be null)"/>
        <param name="old_pilot" comment="Previous pilot (can be null)"/>
      </params>
      <actions>
        <debug_text text="'[GT-ShipMgmt] Pilot change detected: ' + $ship.knownname + ' - New: ' + @$new_pilot.name + ', Old: ' + @$old_pilot.name" chance="100"/>
        
        <!-- Note: Ship modifications are permanent in X4, but we update tracking for new pilot -->
        
        <!-- Apply new modifications if new pilot exists and is registered -->
        <do_if value="$new_pilot and global.$GT_Pilots.{$new_pilot}?">
          <set_value name="$pilotLevel" exact="1"/>
          
          <!-- Calculate pilot level from XP -->
          <do_if value="global.$GT_Pilots.{$new_pilot}.$XP?">
            <set_value name="$currentXP" exact="global.$GT_Pilots.{$new_pilot}.$XP"/>
            <do_all exact="15" counter="$level">
              <do_if value="$currentXP ge global.$GT_Config.$XP.$SkillThresholds.{$level}">
                <set_value name="$pilotLevel" exact="$level"/>
              </do_if>
            </do_all>
          </do_if>
          
          <debug_text text="'[GT-ShipMgmt] Ship modifications updated for new pilot ' + $new_pilot.name + ' (Level ' + $pilotLevel + ')'" chance="100"/>
        </do_if>
        <do_else>
          <debug_text text="'[GT-ShipMgmt] No modifications applied - pilot not registered or missing'" chance="100"/>
        </do_else>
      </actions>
    </library>

  </cues>
</mdscript> 