<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GT_MarketIntelligence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../ORIGINAL_MODS_DO NOT_MODIFY/X4Original/libraries/md.xsd">
  <cues>
    <!-- Market Intelligence System Initialization -->
    <cue name="SystemInit" instantiate="true">
      <conditions>
        <event_cue_signalled cue="md.GT_CoreSystem.SystemInit"/>
      </conditions>
      <actions>
        <debug_text text="'[GalaxyTrader MK3] Market Intelligence system initializing...'" chance="100"/>
        
        <!-- Initialize market data structures -->
        <set_value name="global.$GT_MarketPrices" exact="table[]"/>
        <set_value name="global.$GT_MarketTrends" exact="table[]"/>
        <set_value name="global.$GT_CompetitorData" exact="table[]"/>
        <set_value name="global.$GT_MarketOpportunities" exact="[]"/>
        <set_value name="global.$GT_MarketLastUpdate" exact="player.age"/>
        
        <!-- Initialize Mobile Satellite Intelligence tracking -->
        <set_value name="global.$GT_LastTradeScan" exact="table[]"/>
        
        <debug_text text="'[GalaxyTrader MK3] Market Intelligence system initialized'" chance="100"/>
      </actions>
    </cue>
    
    <!-- PHASE 3 IMPROVEMENT: Event-Driven Market Data Collection -->
    <cue name="ProcessMarketEvents" instantiate="true" checkinterval="0.1s">
      <conditions>
        <check_value value="global.$GT_MarketEventPending?"/>
      </conditions>
      <actions>
        <!-- Clear the pending flag immediately -->
        <remove_value name="global.$GT_MarketEventPending"/>
        
        <!-- Process all queued market events -->
        <do_if value="global.$GT_MarketEventQueue? and global.$GT_MarketEventQueue.count gt 0">
          <debug_text text="'[GalaxyTrader MK3] ⚡ Processing ' + global.$GT_MarketEventQueue.count + ' market events instantly'" chance="100"/>
          
          <do_while value="global.$GT_MarketEventQueue.count gt 0">
            <!-- Get next event -->
            <set_value name="$event" exact="global.$GT_MarketEventQueue.{1}"/>
            <remove_from_list name="global.$GT_MarketEventQueue" exact="$event"/>
            
            <!-- Process based on event type -->
            <do_if value="$event.$eventType == 'trade_completed'">
              <signal_cue_instantly cue="HandleTradeData" param="$event"/>
            </do_if>
            <do_elseif value="$event.$eventType == 'market_scan_request'">
              <signal_cue_instantly cue="HandleMarketScan" param="$event"/>
            </do_elseif>
            <do_elseif value="$event.$eventType == 'price_change_detected'">
              <signal_cue_instantly cue="HandlePriceChange" param="$event"/>
            </do_elseif>
          </do_while>
        </do_if>
      </actions>
    </cue>

    <!-- Mobile Satellite Intelligence: Update trades for stations within ship radar range on fly-by (skill gate ≥9) -->
    <!-- 
    OPTIMIZED: Only scan ACTIVE traders (like threat detection)
    - Was: All registered ships every 3s (CPU waste)
    - Now: Only active traders every 10s (efficient)
    - Level 9+ pilots only (skill gate maintained)
    -->
    <cue name="MobileSatelliteIntelligence" instantiate="true" checkinterval="10s">
      <conditions>
        <check_value value="global.$GT_TradingData? and global.$GT_TradingData.$ActiveTrades?"/>
      </conditions>
      <actions>
        <!-- Iterate ONLY ships actively trading (not docked/idle ships) -->
        <set_value name="$shipKeys" exact="global.$GT_TradingData.$ActiveTrades.keys.list"/>
        <do_all exact="$shipKeys.count" counter="$i">
          <set_value name="$ship" exact="$shipKeys.{$i}"/>
          <do_if value="$ship.exists and $ship.isoperational and not @$ship.isdocked and $ship.pilot? and global.$GT_Pilots.{$ship.pilot}?">
            <!-- Skill gate: Satellite Intel requires level ≥ 9 and feature enabled -->
            <set_value name="$level" exact="@global.$GT_Pilots.{$ship.pilot}.$Level"/>
            <do_if value="$level ge 9 and (not global.$GT_GlobalSettings.$MobileIntel? or global.$GT_GlobalSettings.$MobileIntel.$Enable) and $ship.sector?">
              <!-- Validate sector is not just present but actually valid before scanning -->
              <set_value name="$shipSector" exact="$ship.sector"/>
              <do_if value="$shipSector and $shipSector.exists">
                <!-- Safety: Initialize tracking table if missing (for old save games) -->
                <do_if value="not global.$GT_LastTradeScan?">
                  <set_value name="global.$GT_LastTradeScan" exact="table[]"/>
                </do_if>
                
                <!-- Compute radar range -->
                <run_actions ref="md.GT_Ship_Management.Calculate_Radar_Range" result="$radarRange">
                  <param name="ship" value="$ship"/>
                </run_actions>
                
                <!-- Find stations within radar range of ship -->
                <find_station name="$nearbyStations" space="$shipSector" multiple="true">
                  <match_distance object="$ship" max="$radarRange"/>
                </find_station>
              
              <!-- DEBUG: Log when stations are found -->
              <do_if value="$nearbyStations.count gt 0 and global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$LogLevel ge 2">
                <debug_text text="'[GT-Intel] 📡 ' + $ship.knownname + ' (' + $ship.idcode + ') detected ' + $nearbyStations.count + ' station(s) in radar range (' + $radarRange + 'm) - Level ' + $level" chance="100"/>
              </do_if>
              
              <!-- Update trade data for each station found (emulate advanced satellite):
                   1) store_trade_offer_snapshot to update player trade memory
                   2) optionally add a brief trade subscription to keep it fresh
                   Use per-station cooldown to avoid spamming -->
              <set_value name="$scannedCount" exact="0"/>
              <set_value name="$skippedCount" exact="0"/>
              <do_all exact="$nearbyStations.count" counter="$j">
                <set_value name="$station" exact="$nearbyStations.{$j}"/>
                <set_value name="$hasTradeSubscription" exact="@$station.owner.hasrelation.tradesubscription.{faction.player}"/>
                
                <!-- Only process stations that exist and don't have a trade subscription with their faction -->
                <do_if value="$station? and $station.exists and not $hasTradeSubscription">
                  <!-- Per-station cooldown -->
                  <set_value name="$last" exact="@global.$GT_LastTradeScan.{$station}"/>
                  <set_value name="$cooldown" exact="if global.$GT_GlobalSettings.$MobileIntel.$StationCooldown? then global.$GT_GlobalSettings.$MobileIntel.$StationCooldown else 60s"/>
                  <do_if value="not $last or (player.age - $last) gt $cooldown">
                    <!-- Native refresh into trade memory -->
                    <store_trade_offer_snapshot object="$station"/>
                    <!-- Short subscription to mimic continuous updates while nearby -->
                    <set_value name="$duration" exact="if global.$GT_GlobalSettings.$MobileIntel.$SubscriptionDuration? then global.$GT_GlobalSettings.$MobileIntel.$SubscriptionDuration else 10min"/>
                    <add_trade_subscription object="$station" duration="$duration"/>
                    <!-- Remember cooldown -->
                    <set_value name="global.$GT_LastTradeScan.{$station}" exact="player.age"/>
                    <set_value name="$scannedCount" operation="add"/>
                    
                    <!-- DEBUG: Log subscription -->
                    <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$LogLevel ge 3">
                      <debug_text text="'[GT-Intel] ✅ ' + $ship.knownname + ' scanned ' + $station.knownname + ' - Added ' + $duration/1min + ' min subscription'" chance="100"/>
                    </do_if>
                  </do_if>
                  <do_else>
                    <set_value name="$skippedCount" operation="add"/>
                    <set_value name="$timeRemaining" exact="$cooldown - (player.age - $last)"/>
                    
                    <!-- DEBUG: Log cooldown skip -->
                    <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$LogLevel ge 3">
                      <debug_text text="'[GT-Intel] ⏸ ' + $station.knownname + ' skipped (cooldown: ' + $timeRemaining/1s + 's remaining)'" chance="100"/>
                    </do_if>
                  </do_else>
                </do_if>
                <do_else>
                  <!-- Station doesn't exist, or faction has trade subscription - no need to scan -->
                  <do_if value="$station? and $station.exists and $hasTradeSubscription">
                    <set_value name="$skippedCount" operation="add"/>
                    <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$LogLevel ge 3">
                      <set_value name="$factionName" exact="if @$station.owner.knownname then $station.owner.knownname else 'unknown faction'"/>
                      <debug_text text="'[GT-Intel] 💼 ' + $station.knownname + ' skipped (player has trade subscription with ' + $factionName + ')'" chance="100"/>
                    </do_if>
                  </do_if>
                </do_else>
              </do_all>
              
              <!-- DEBUG: Summary log -->
              <do_if value="($scannedCount gt 0 or $skippedCount gt 0) and global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$LogLevel ge 2">
                <debug_text text="'[GT-Intel] 📊 ' + $ship.knownname + ' - Scanned: ' + $scannedCount + ', Skipped: ' + $skippedCount + ' (cooldown/subscription)'" chance="100"/>
              </do_if>
              </do_if>
              <do_else>
                <!-- Sector is invalid (ship might be jumping or in transition) - skip this scan cycle -->
                <do_if value="global.$GT_Config.$Debug.$Enabled and global.$GT_Config.$Debug.$LogLevel ge 3">
                  <debug_text text="'[GT-Intel] ⚠ ' + $ship.knownname + ' - Sector invalid, skipping scan (ship may be jumping)'" chance="100"/>
                </do_if>
              </do_else>
            </do_if>
          </do_if>
        </do_all>
      </actions>
    </cue>
    
    <!-- Handle Trade Data -->
    <cue name="HandleTradeData" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$event" exact="event.param"/>
        <set_value name="$ship" exact="$event.$ship"/>
        <set_value name="$buyStation" exact="$event.$buyStation"/>
        <set_value name="$sellStation" exact="$event.$sellStation"/>
        <set_value name="$ware" exact="$event.$ware"/>
        <set_value name="$buyPrice" exact="$event.$buyPrice"/>
        <set_value name="$sellPrice" exact="$event.$sellPrice"/>
        
        <debug_text text="'[GalaxyTrader MK3] Trade data event: ' + $ship.knownname + ' traded ' + $ware.name + ' (' + $buyPrice + '→' + $sellPrice + ')'" chance="100"/>
        
        <!-- Store trade data immediately -->
        <signal_cue_instantly cue="StorePriceData" param="table[
            $station = $buyStation,
            $ware = $ware,
            $price = $buyPrice,
            $type = 'sell'
        ]"/>
        
        <signal_cue_instantly cue="StorePriceData" param="table[
            $station = $sellStation,
            $ware = $ware,
            $price = $sellPrice,
            $type = 'buy'
        ]"/>
        
        <!-- Trigger trend analysis -->
        <signal_cue_instantly cue="AnalyzeTrends"/>
      </actions>
    </cue>
    
    <!-- Legacy Market Data Collection - REMOVED: Event-driven system replaces polling -->
    
    <!-- Store Price Data Point -->
    <cue name="StorePriceData" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <!-- Support both old global method and new event method -->
        <do_if value="event.param?">
          <!-- New event-driven method -->
          <set_value name="$station" exact="event.param.$station"/>
          <set_value name="$ware" exact="event.param.$ware"/>
          <set_value name="$price" exact="event.param.$price"/>
          <set_value name="$type" exact="event.param.$type"/>
          <set_value name="$amount" exact="@event.param.$amount"/>
        </do_if>
        <do_else>
          <!-- Event-driven method -->
          <set_value name="$station" exact="global.$GT_CollectStation"/>
          <set_value name="$offer" exact="global.$GT_CollectOffer"/>
          <set_value name="$type" exact="global.$GT_CollectType"/>
          <set_value name="$ware" exact="$offer.ware"/>
          <set_value name="$price" exact="$offer.price"/>
          <set_value name="$amount" exact="$offer.amount"/>
        </do_else>
        
        <!-- Create price key -->
        <set_value name="$priceKey" exact="$station.sector.idcode + '_' + $ware.id + '_' + $type"/>
        
        <!-- Initialize price history if needed -->
        <do_if value="not global.$GT_MarketPrices.{$priceKey}?">
          <set_value name="global.$GT_MarketPrices.{$priceKey}" exact="table[]"/>
          <set_value name="global.$GT_MarketPrices.{$priceKey}.$History" exact="[]"/>
          <set_value name="global.$GT_MarketPrices.{$priceKey}.$Station" exact="$station"/>
          <set_value name="global.$GT_MarketPrices.{$priceKey}.$Ware" exact="$ware"/>
          <set_value name="global.$GT_MarketPrices.{$priceKey}.$Type" exact="$type"/>
        </do_if>
        
        <!-- Get history size limit from config -->
        <set_value name="$historySize" exact="10"/>
        <do_if value="global.$GT_Config? and global.$GT_Config.$Market? and global.$GT_Config.$Market.$PriceHistorySize?">
          <set_value name="$historySize" exact="global.$GT_Config.$Market.$PriceHistorySize"/>
        </do_if>
        
        <!-- Add price point -->
        <set_value name="$pricePoint" exact="table[]"/>
        <set_value name="$pricePoint.$Price" exact="$price"/>
        <set_value name="$pricePoint.$Amount" exact="$amount"/>
        <set_value name="$pricePoint.$Time" exact="player.age"/>
        
        <append_to_list name="global.$GT_MarketPrices.{$priceKey}.$History" exact="$pricePoint"/>
        
        <!-- Maintain history size -->
        <do_while value="global.$GT_MarketPrices.{$priceKey}.$History.count gt $historySize">
          <remove_from_list name="global.$GT_MarketPrices.{$priceKey}.$History" exact="global.$GT_MarketPrices.{$priceKey}.$History.{1}"/>
        </do_while>
      </actions>
    </cue>
    
    <!-- Analyze Market Trends -->
    <cue name="AnalyzeTrends" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <debug_text text="'[GalaxyTrader MK3] Analyzing market trends...'" chance="100"/>
        
        <!-- Clear old opportunities -->
        <set_value name="global.$GT_MarketOpportunities" exact="[]"/>
        
        <!-- Analyze each price history -->
        <do_if value="global.$GT_MarketPrices? and global.$GT_MarketPrices.keys.count gt 0">
                  <do_all exact="global.$GT_MarketPrices.keys.count" counter="$i">
                      <set_value name="$priceKey" exact="global.$GT_MarketPrices.keys.list.{$i}"/>
            <set_value name="$priceData" exact="global.$GT_MarketPrices.{$priceKey}"/>
          
          <!-- Need at least 3 data points for trend -->
          <do_if value="$priceData.$History.count ge 3">
            <!-- Calculate average price -->
            <set_value name="$avgPrice" exact="0"/>
            <do_all exact="$priceData.$History.count" counter="$j">
              <set_value name="$avgPrice" exact="$avgPrice + $priceData.$History.{$j}.$Price"/>
            </do_all>
            <set_value name="$avgPrice" exact="$avgPrice / $priceData.$History.count"/>
            
            <!-- Get current and previous prices -->
            <set_value name="$currentPrice" exact="$priceData.$History.{$priceData.$History.count}.$Price"/>
            <set_value name="$previousPrice" exact="$priceData.$History.{$priceData.$History.count - 1}.$Price"/>
            
            <!-- Calculate trend -->
            <set_value name="$trend" exact="($currentPrice - $previousPrice) / $previousPrice * 100"/>
            
            <!-- Store trend data -->
            <do_if value="not global.$GT_MarketTrends.{$priceKey}?">
              <set_value name="global.$GT_MarketTrends.{$priceKey}" exact="table[]"/>
            </do_if>
            
            <set_value name="global.$GT_MarketTrends.{$priceKey}.$Trend" exact="$trend"/>
            <set_value name="global.$GT_MarketTrends.{$priceKey}.$Average" exact="$avgPrice"/>
            <set_value name="global.$GT_MarketTrends.{$priceKey}.$Current" exact="$currentPrice"/>
            
            <!-- Identify opportunities -->
            <do_if value="$priceData.$Type == 'sell' and $currentPrice lt ($avgPrice * 0.8)">
              <!-- Buy opportunity - price is low -->
              <set_value name="$opportunity" exact="table[]"/>
              <set_value name="$opportunity.$Type" exact="'buy'"/>
              <set_value name="$opportunity.$Station" exact="$priceData.$Station"/>
              <set_value name="$opportunity.$Ware" exact="$priceData.$Ware"/>
              <set_value name="$opportunity.$Price" exact="$currentPrice"/>
              <set_value name="$opportunity.$Score" exact="($avgPrice - $currentPrice) / $avgPrice * 100"/>
              
              <append_to_list name="global.$GT_MarketOpportunities" exact="$opportunity"/>
            </do_if>
            <do_elseif value="$priceData.$Type == 'buy' and $currentPrice gt ($avgPrice * 1.2)">
              <!-- Sell opportunity - price is high -->
              <set_value name="$opportunity" exact="table[]"/>
              <set_value name="$opportunity.$Type" exact="'sell'"/>
              <set_value name="$opportunity.$Station" exact="$priceData.$Station"/>
              <set_value name="$opportunity.$Ware" exact="$priceData.$Ware"/>
              <set_value name="$opportunity.$Price" exact="$currentPrice"/>
              <set_value name="$opportunity.$Score" exact="($currentPrice - $avgPrice) / $avgPrice * 100"/>
              
              <append_to_list name="global.$GT_MarketOpportunities" exact="$opportunity"/>
            </do_elseif>
          </do_if>
        </do_all>
        </do_if>
        
        <!-- Sort opportunities by score -->
        <do_if value="global.$GT_MarketOpportunities.count gt 1">
          <sort_list list="global.$GT_MarketOpportunities" sortbyvalue="loop.element.$Score" sortdescending="true"/>
        </do_if>
        
        <debug_text text="'[GalaxyTrader MK3] Found ' + global.$GT_MarketOpportunities.count + ' market opportunities'" chance="100"/>
        
        <!-- Notify about exceptional opportunities -->
        <do_if value="global.$GT_Config.$Notifications.$MarketAlerts? and global.$GT_MarketOpportunities.count gt 0">
          <set_value name="$bestOpp" exact="global.$GT_MarketOpportunities.{1}"/>
          <do_if value="$bestOpp.$Score gt 30">
            <show_notification text="'Exceptional ' + $bestOpp.$Type + ' opportunity: ' + $bestOpp.$Ware.name + ' at ' + $bestOpp.$Station.knownname + ' (' + $bestOpp.$Score + '% profit potential)'" timeout="10s"/>
          </do_if>
        </do_if>
      </actions>
    </cue>
    
    <!-- PHASE 3 IMPROVEMENT: Event-Driven Competitor Tracking -->
    <!-- Initialize competitor tracking events -->
    <cue name="InitCompetitorEvents" instantiate="true">
      <conditions>
        <event_cue_signalled cue="md.GT_CoreSystem.SystemInit"/>
      </conditions>
      <actions>
        <!-- Initialize competitor event system -->
        <set_value name="global.$GT_CompetitorEventQueue" exact="[]"/>
        <set_value name="global.$GT_CompetitorEventPending" exact="false"/>
        
        <debug_text text="'[GalaxyTrader MK3] ⚡ Competitor tracking event system initialized'" chance="100"/>
      </actions>
    </cue>
    
    <!-- Process Competitor Events -->
    <cue name="ProcessCompetitorEvents" instantiate="true" checkinterval="0.1s">
      <conditions>
        <check_value value="global.$GT_CompetitorEventPending?"/>
      </conditions>
      <actions>
        <!-- Clear the pending flag immediately -->
        <remove_value name="global.$GT_CompetitorEventPending"/>
        
        <!-- Process all queued competitor events -->
        <do_if value="global.$GT_CompetitorEventQueue? and global.$GT_CompetitorEventQueue.count gt 0">
          <debug_text text="'[GalaxyTrader MK3] ⚡ Processing ' + global.$GT_CompetitorEventQueue.count + ' competitor events instantly'" chance="100"/>
          
          <do_while value="global.$GT_CompetitorEventQueue.count gt 0">
            <!-- Get next event -->
            <set_value name="$event" exact="global.$GT_CompetitorEventQueue.{1}"/>
            <remove_from_list name="global.$GT_CompetitorEventQueue" exact="$event"/>
            
            <!-- Process based on event type -->
            <do_if value="$event.$eventType == 'competitor_spotted'">
              <signal_cue_instantly cue="HandleCompetitorSpotted" param="$event"/>
            </do_if>
            <do_elseif value="$event.$eventType == 'sector_changed'">
              <signal_cue_instantly cue="HandleSectorChanged" param="$event"/>
            </do_elseif>
            <do_elseif value="$event.$eventType == 'market_scan'">
              <signal_cue_instantly cue="HandleMarketScan" param="$event"/>
            </do_elseif>
          </do_while>
        </do_if>
      </actions>
    </cue>
    
    <!-- Handle Competitor Spotted -->
    <cue name="HandleCompetitorSpotted" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$event" exact="event.param"/>
        <set_value name="$competitor" exact="$event.$competitor"/>
        <set_value name="$sector" exact="$event.$sector"/>
        <set_value name="$playerShip" exact="$event.$playerShip"/>
        
        <debug_text text="'[GalaxyTrader MK3] Competitor spotted: ' + $competitor.knownname + ' in ' + $sector.knownname" chance="100"/>
        
        <!-- Initialize competitor data if missing -->
        <do_if value="not global.$GT_CompetitorData?">
          <set_value name="global.$GT_CompetitorData" exact="table[]"/>
        </do_if>
        
        <do_if value="not global.$GT_CompetitorData.{$competitor}?">
          <set_value name="global.$GT_CompetitorData.{$competitor}" exact="table[]"/>
          <set_value name="global.$GT_CompetitorData.{$competitor}.$FirstSeen" exact="player.age"/>
          <set_value name="global.$GT_CompetitorData.{$competitor}.$Sightings" exact="0"/>
        </do_if>
        
        <!-- Update competitor data -->
        <set_value name="global.$GT_CompetitorData.{$competitor}.$LastSeen" exact="player.age"/>
        <set_value name="global.$GT_CompetitorData.{$competitor}.$LastSector" exact="$sector"/>
        <set_value name="global.$GT_CompetitorData.{$competitor}.$Sightings" exact="global.$GT_CompetitorData.{$competitor}.$Sightings + 1"/>
        
        <!-- Track which player ship spotted it -->
        <do_if value="not global.$GT_CompetitorData.{$competitor}.$SpottedBy?">
          <set_value name="global.$GT_CompetitorData.{$competitor}.$SpottedBy" exact="[]"/>
        </do_if>
        
        <do_if value="global.$GT_CompetitorData.{$competitor}.$SpottedBy.indexof.{$playerShip} == 0">
          <append_to_list name="global.$GT_CompetitorData.{$competitor}.$SpottedBy" exact="$playerShip"/>
        </do_if>
      </actions>
    </cue>
    
    <!-- Handle Sector Changes (for competitive analysis) -->
    <cue name="HandleSectorChanged" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$event" exact="event.param"/>
        <set_value name="$ship" exact="$event.$ship"/>
        <set_value name="$newSector" exact="$event.$sector"/>
        
        <debug_text text="'[GalaxyTrader MK3] Ship sector change: ' + $ship.knownname + ' entered ' + $newSector.knownname" chance="100"/>
        
        <!-- Scan for competitors in new sector -->
        <do_if value="global.$GT_Config.$Market.$CompetitorTracking?">
          <find_ship name="$competitors" space="$newSector" multiple="true">
            <match primarypurpose="purpose.trade"/>
            <match owner="$ship.owner" negate="true"/>
          </find_ship>
          
          <!-- Create competitor spotted events for each found -->
          <do_all exact="$competitors.count" counter="$i">
            <set_value name="$competitor" exact="$competitors.{$i}"/>
            
            <!-- Queue competitor spotted event -->
            <set_value name="$competitorEvent" exact="table[]"/>
            <set_value name="$competitorEvent.$eventType" exact="'competitor_spotted'"/>
            <set_value name="$competitorEvent.$competitor" exact="$competitor"/>
            <set_value name="$competitorEvent.$sector" exact="$newSector"/>
            <set_value name="$competitorEvent.$playerShip" exact="$ship"/>
            <set_value name="$competitorEvent.$timestamp" exact="player.age"/>
            
            <append_to_list name="global.$GT_CompetitorEventQueue" exact="$competitorEvent"/>
            <set_value name="global.$GT_CompetitorEventPending" exact="true"/>
          </do_all>
        </do_if>
      </actions>
    </cue>

    <!-- Competitor Tracking - REMOVED: Event-driven system replaces polling -->
    
    <!-- Handle Market Scan Events -->
    <cue name="HandleMarketScan" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$event" exact="event.param"/>
        <set_value name="$trigger" exact="$event.$trigger"/>
        
        <debug_text text="'[GalaxyTrader MK3] Market scan event triggered by: ' + $trigger" chance="100"/>
        
        <!-- Clean up old competitor data -->
        <set_value name="$timeout" exact="3600s"/> <!-- 1 hour -->
        <set_value name="$cleanedCount" exact="0"/>
        
        <do_if value="global.$GT_CompetitorData? and global.$GT_CompetitorData.keys.count gt 0">
          <set_value name="$competitorKeys" exact="global.$GT_CompetitorData.keys.list"/>
          <do_all exact="$competitorKeys.count" counter="$i">
            <set_value name="$competitor" exact="$competitorKeys.{$i}"/>
            
            <do_if value="not $competitor.exists or (player.age - global.$GT_CompetitorData.{$competitor}.$LastSeen) gt $timeout">
              <remove_value name="global.$GT_CompetitorData.{$competitor}"/>
              <set_value name="$cleanedCount" exact="$cleanedCount + 1"/>
            </do_if>
          </do_all>
        </do_if>
        
        <do_if value="$cleanedCount gt 0">
          <debug_text text="'[GalaxyTrader MK3] Cleaned up ' + $cleanedCount + ' old competitor records'" chance="100"/>
        </do_if>
        
        <!-- Scan current sectors for active competitors -->
        <do_if value="global.$GT_Ships? and global.$GT_Ships.keys.count gt 0">
          <set_value name="$foundCompetitors" exact="0"/>
          <set_value name="$shipKeys" exact="global.$GT_Ships.keys.list"/>
          
          <do_all exact="$shipKeys.count" counter="$i">
            <set_value name="$playerShip" exact="$shipKeys.{$i}"/>
            
            <do_if value="$playerShip.exists and $playerShip.sector?">
              <!-- Find other traders in same sector -->
              <find_ship name="$sectorShips" space="$playerShip.sector" multiple="true">
                <match primarypurpose="purpose.trade"/>
                <match owner="$playerShip.owner" negate="true"/>
              </find_ship>
              
              <!-- Create spotted events for each competitor -->
              <do_all exact="$sectorShips.count" counter="$j">
                <set_value name="$competitor" exact="$sectorShips.{$j}"/>
                
                <!-- Queue competitor spotted event -->
                <set_value name="$competitorEvent" exact="table[]"/>
                <set_value name="$competitorEvent.$eventType" exact="'competitor_spotted'"/>
                <set_value name="$competitorEvent.$competitor" exact="$competitor"/>
                <set_value name="$competitorEvent.$sector" exact="$playerShip.sector"/>
                <set_value name="$competitorEvent.$playerShip" exact="$playerShip"/>
                <set_value name="$competitorEvent.$timestamp" exact="player.age"/>
                
                <append_to_list name="global.$GT_CompetitorEventQueue" exact="$competitorEvent"/>
                <set_value name="$foundCompetitors" exact="$foundCompetitors + 1"/>
              </do_all>
            </do_if>
          </do_all>
          
          <do_if value="$foundCompetitors gt 0">
            <set_value name="global.$GT_CompetitorEventPending" exact="true"/>
            <debug_text text="'[GalaxyTrader MK3] Market scan found ' + $foundCompetitors + ' competitors'" chance="100"/>
          </do_if>
        </do_if>
      </actions>
    </cue>
    
    <!-- Market Intelligence Report -->
    <cue name="GenerateMarketReport" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$report" exact="'Market Intelligence Report\n\n'"/>
        
        <!-- Top opportunities -->
        <set_value name="$report" exact="$report + 'TOP MARKET OPPORTUNITIES:\n'"/>
        <set_value name="$maxOpps" exact="[global.$GT_MarketOpportunities.count, 5].min"/>
        
        <do_all exact="$maxOpps" counter="$i">
          <set_value name="$opp" exact="global.$GT_MarketOpportunities.{$i}"/>
          <set_value name="$report" exact="$report + $i + '. ' + $opp.$Type + ' ' + $opp.$Ware.name + ' at ' + $opp.$Station.knownname + ' (' + $opp.$Score + '% potential)\n'"/>
        </do_all>
        
        <!-- Market trends -->
        <set_value name="$report" exact="$report + '\nMARKET TRENDS:\n'"/>
        <set_value name="$risingCount" exact="0"/>
        <set_value name="$fallingCount" exact="0"/>
        
        <do_all exact="global.$GT_MarketTrends.keys.count" counter="$i">
          <set_value name="$trend" exact="global.$GT_MarketTrends.{global.$GT_MarketTrends.keys.list.{$i}}.$Trend"/>
          <do_if value="$trend gt 5">
            <set_value name="$risingCount" exact="$risingCount + 1"/>
          </do_if>
          <do_elseif value="$trend lt -5">
            <set_value name="$fallingCount" exact="$fallingCount + 1"/>
          </do_elseif>
        </do_all>
        
        <set_value name="$report" exact="$report + 'Rising prices: ' + $risingCount + ' wares\n'"/>
        <set_value name="$report" exact="$report + 'Falling prices: ' + $fallingCount + ' wares\n'"/>
        
        <!-- Competitor activity -->
        <set_value name="$report" exact="$report + '\nCOMPETITOR ACTIVITY:\n'"/>
        <set_value name="$report" exact="$report + 'Tracked competitors: ' + global.$GT_CompetitorData.keys.count + '\n'"/>
        
        <!-- Return report -->
        <set_value name="global.$GT_MarketReport" exact="$report"/>
      </actions>
    </cue>
  </cues>
</mdscript> 
