<?xml version="1.0" encoding="utf-8"?>
<mdscript name="GT_Trading_Execution" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../ORIGINAL_MODS_DO NOT_MODIFY/X4Original/libraries/md.xsd">
  <cues>
    <!-- ========================================
         GALAXY TRADER MK3 - TRADE EXECUTION
         Handles trade order creation and completion tracking
         ======================================== -->
    
    <!-- Execute Trade -->
    <cue name="ExecuteTrade" instantiate="true">
      <conditions>
        <event_cue_signalled/>
      </conditions>
      <actions>
        <set_value name="$params" exact="event.param"/>
        <set_value name="$ship" exact="$params.$Ship"/>
        <set_value name="$trade" exact="$params.$Trade"/>
        
        <!-- Enhanced execution logging -->
        <debug_text text="'[GalaxyTrader MK3] ' + $ship.knownname + ' executing trade for ' + ($trade.$Profit / 100) + ' Cr profit' + '\n  📦 Ware: ' + $trade.$BuyOffer.ware.name + ' (x' + $trade.$Amount + ')' + '\n  📍 BUY from: ' + $trade.$BuyOffer.owner.knownname + ' @ ' + ($trade.$BuyPrice / 100) + ' Cr' + '\n  📍 SELL to: ' + $trade.$SellOffer.owner.knownname + ' @ ' + ($trade.$SellPrice / 100) + ' Cr' + '\n  🚀 Distance: ' + $trade.$Distance + ' jumps' + '\n  💰 Profit: ' + ($trade.$Profit / 100) + ' Cr'" chance="100"/>
        
        <!-- CRITICAL FIX: Validate offers are still available -->
        <set_value name="$buyOfferValid" exact="$trade.$BuyOffer.available and $trade.$BuyOffer.amount gt 0"/>
        <set_value name="$sellOfferValid" exact="$trade.$SellOffer.available and $trade.$SellOffer.amount gt 0"/>
        <set_value name="$canExecute" exact="true"/>
        
        <do_if value="not $buyOfferValid or not $sellOfferValid">
          <debug_text text="'[GalaxyTrader MK3] ⚠ Trade offer(s) no longer valid for ' + $ship.knownname" chance="100"/>
          <signal_objects object="$ship" param="'GT_No_Trade_Found'"/>
          <set_value name="$canExecute" exact="false"/>
        </do_if>
        
        <!-- CRITICAL FIX: Verify ship can carry the ware -->
        <do_if value="$canExecute">
          <set_value name="$ware" exact="$trade.$BuyOffer.ware"/>
          <do_if value="$ship.cargo.{$ware}.max le 0">
            <debug_text text="'[GalaxyTrader MK3] ⚠ Ship ' + $ship.knownname + ' cannot carry ware ' + $ware.name + ' - aborting trade'" chance="100"/>
            <signal_objects object="$ship" param="'GT_No_Trade_Found'"/>
            <set_value name="$canExecute" exact="false"/>
          </do_if>
        </do_if>
        
        <!-- CRITICAL FIX: Final check for illegal wares -->
        <do_if value="$canExecute">
          <set_value name="$allowIllegal" exact="@global.$GT_AIParameters.{$ship}.$AllowIllegal"/>
          <do_if value="not $allowIllegal">
            <!-- Simple type check: is this ware illegal to any faction? -->
            <do_if value="$ware.illegal">
              <debug_text text="'[GT-Execution] 🚫 ILLEGAL WARE BLOCKED: ' + $ship.knownname + ' attempted to trade ' + $ware.name + ' (ware type is illegal, AllowIllegal: ' + @$params.$AllowIllegal + ')'" chance="100"/>
              <debug_text text="'[GT-Execution] 📡 Sending GT_No_Trade_Found signal to ' + $ship.idcode" chance="100"/>
              <signal_objects object="$ship" param="'GT_No_Trade_Found'"/>
              <debug_text text="'[GT-Execution] ✅ GT_No_Trade_Found signal sent successfully'" chance="100"/>
              <set_value name="$canExecute" exact="false"/>
            </do_if>
          </do_if>
        </do_if>
        
        <!-- Only proceed if all checks passed -->
        <do_if value="$canExecute">
          <!-- CRITICAL FIX: Verify sufficient funds -->
          <set_value name="$availableMoney" exact="player.money"/>
          <set_value name="$moneySource" exact="'player'"/>
          
          <!-- Check if ship has a homebase station - use station's money instead -->
          <set_value name="$homeBase" exact="@$ship.defaultorder.$home"/>
          <do_if value="$homeBase? and $homeBase.exists and $homeBase.isclass.station">
            <set_value name="$availableMoney" exact="$homeBase.money"/>
            <set_value name="$moneySource" exact="'homebase: ' + $homeBase.knownname"/>
          </do_if>
          
          <set_value name="$tradeCost" exact="$trade.$Amount * $trade.$BuyPrice"/>
          <do_if value="$availableMoney lt $tradeCost">
            <debug_text text="'[GalaxyTrader MK3] ⚠ INSUFFICIENT FUNDS: ' + $ship.knownname + ' needs ' + ($tradeCost / 100) + ' Cr but only has ' + ($availableMoney / 100) + ' Cr'" chance="100"/>
            <signal_objects object="$ship" param="'GT_No_Trade_Found'"/>
            <set_value name="$canExecute" exact="false"/>
          </do_if>
          
          <do_if value="$canExecute">
            <!-- PHASE 4.1: ActiveTrades tracking DEPRECATED - Now handled by diff patch signals -->
            <!-- The diff patch in order.trade.perform.xml sends signals directly when trades complete/fail -->
            
            <!-- Create X4 native TradePerform orders for buy-sell cycle -->
            <!-- 
              ✅ CRITICAL: internal="true" enables blacklist routing in vanilla pathfinding
              - When internal="true", X4's TradePerform order uses strictblacklist mode
              - This makes move.generic route AROUND blacklisted sectors instead of through them
              - Ships can still reach destinations if an alternate path exists
              - Without this parameter, ships ignore blacklists and fly through hostile sectors
              
              How it works:
              1. create_trade_order with internal="true" creates TradePerform order
              2. TradePerform passes internalorder="true" to move.generic (via order.dock.xml)
              3. move.generic uses strictblacklist="true" when calculating paths
              4. Vanilla pathfinding automatically finds routes that avoid blacklisted sectors
              5. If no valid path exists, order fails gracefully (better than ship destruction)
              
              Reference: ORIGINAL_MODS_DO NOT_MODIFY/x4Original/aiscripts/order.trade.routine.xml
            -->
            <!-- ✅ NEW: Store complete trade LIST for AI validation and execution -->
            <!-- AI script will iterate through list and validate blacklist for each trade -->
            <do_if value="not global.$GT_PendingTrades?">
              <set_value name="global.$GT_PendingTrades" exact="table[]"/>
            </do_if>
            
            <!-- Get trade list from params (if available, otherwise use single trade for backward compat) -->
            <set_value name="$tradeList" exact="@event.param.$TradeList"/>
            <do_if value="not $tradeList? or $tradeList.count == 0">
              <!-- Fallback: wrap single trade in list -->
              <set_value name="$tradeList" exact="[$trade]"/>
            </do_if>
            
            <!-- Store the full trade list -->
            <set_value name="global.$GT_PendingTrades.{$ship}" exact="$tradeList"/>
            
            <debug_text text="'[GT-Execution] 💾 STORED ' + $tradeList.count + ' trades for AI validation: ' + $ship.idcode +
              '\n  Best trade: ' + @$trade.$BuyOffer.ware.name + ' x' + $trade.$Amount +
              '\n  Buy: ' + @$trade.$BuyOffer.owner.knownname + ' (Sector: ' + @$trade.$BuyOffer.owner.sector.knownname + ')' +
              '\n  Sell: ' + @$trade.$SellOffer.owner.knownname + ' (Sector: ' + @$trade.$SellOffer.owner.sector.knownname + ')' +
              '\n  ⚠ AI will iterate through list and validate blacklist for each trade'"
              chance="100"/>
            
            <!-- NOTE: Orders are NOT created here anymore! -->
            <!-- AI script will validate blacklist and create orders if valid -->
            <!-- This prevents wasted order creation for blacklisted stations -->
            
            <!-- SKIP logbook for now - will be logged after AI validates and creates orders -->
            <!-- Logbook signal was causing cue to complete before GT_Trade_Found could be sent -->
            
            <!-- Update ship statistics -->
            <do_if value="global.$GT_Ships.{$ship}?">
              <set_value name="global.$GT_Ships.{$ship}.$LastUpdate" exact="player.age"/>
            </do_if>
            
            <!-- CRITICAL: Signal AI that trade is ready for validation -->
            <debug_text text="'[GT-Execution] 📤 SENDING GT_Trade_Found signal to ' + $ship.idcode + ' at game time ' + player.age" chance="100"/>
            <signal_objects object="$ship" param="'GT_Trade_Found'"/>
            <debug_text text="'[GT-Execution] ✅ GT_Trade_Found signal SENT to ' + $ship.idcode + ' at game time ' + player.age" chance="100"/>
          </do_if>
        </do_if>
      </actions>
    </cue>
    
    <!-- PHASE 4.2: TradeCompleted event monitoring REMOVED
         
         The old TradeCompleted cue (140+ lines) has been completely removed and replaced with
         the new diff patch signal system in gt_trading_signals.xml. The new system:
         
         Benefits:
         - Uses order.trade.perform.xml diff patch to inject signals directly from X4 native code
         - Provides richer trade data (actual transferred amounts, quality, exact failure reasons)
         - Eliminates complex buyer/seller matching logic
         - No longer needs ActiveTrades buy/sell phase tracking
         - More reliable and event-driven
         
         What was removed:
         - event_player_trade_completed monitoring (slow, requires matching)
         - Manual buy/sell phase tracking with global.$GT_TradingData.$ActiveTrades
         - Complex buyer/seller identification logic
         - Stale entry cleanup code
         
         The new system handles all of this automatically via diff patch signals.
    -->
    
  </cues>
</mdscript>
