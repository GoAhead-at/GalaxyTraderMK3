GalaxyTrader MK3 - Changelog
========================================

Version 0.5.5 - 2025-10-21
--------------------------

CRITICAL FIX: Trade Search Using Incorrect Distance Calculations  
  - enlightment happened :-)
  - Fixed: Trade search calculated efficiency using shortest-path distance, not blacklist-aware distance
  - This caused trades to look profitable but actually be inefficient due to long detours
  - Example: Trade showing 10 jumps (2000 Cr/jump) actually requires 18 jumps (555 Cr/jump) via safe route
  - Root cause: Distance calculations didn't account for blacklist routing
  - Solution: Use gatedistance.{$blacklistgroup} for ALL distance calculations
  - Implementation:
    * Added blacklist group determination (objectactivity/sectortravel/mining based on ship purpose)
    * Cache validation: Recalculate distances using blacklist-aware routing before scoring trades
    * Live search: Pre-calculate all station distances with blacklist group parameter
    * Filter trades where gatedistance returns -1 (unreachable via safe route)
    * Trade efficiency now reflects ACTUAL travel distance, not theoretical shortest path
  - Comprehensive logging added:
    * BLACKLIST HIT: Shows when trades filtered due to no safe route existing
    * ALTERNATIVE ROUTE: Shows when detours taken to avoid blacklisted sectors
    * Logs display: original distance, blacklist-aware distance, detour length in jumps
  - Files: gt_trading_search.xml

CRITICAL FIX: Trade Orders Not Using Blacklist Routing
  - Fixed: Trade orders were not respecting blacklists for pathfinding
  - This caused ships to fly THROUGH blacklisted sectors instead of AROUND them
  - Root cause: Missing internal="true" parameter in create_trade_order calls
  - Solution: Added internal="true" to all create_trade_order calls
  - How it works:
    * internal="true" tells TradePerform order to use strictblacklist mode
    * This enables vanilla pathfinding to route AROUND blacklisted sectors
    * Ships can still reach destinations if an alternate path exists
    * If no valid path exists, order fails gracefully and ship requests new trade
  - Reverted manual threat filtering (v0.5.4) since vanilla now handles it:
    * Removed sector threat checks from GT_ValidateStation
    * Removed cache validation threat checks
    * Simpler code - let vanilla handle complex pathfinding decisions
  - How vanilla detects unreachable routes:
    * TradePerform order attempts to find path avoiding blacklisted sectors
    * If NO valid path exists, move.generic returns failure
    * Order aborts with failure reason, diff patch system catches it
    * Ship automatically requests new trade that IS reachable
    * No manual pre-filtering needed - vanilla fails gracefully
  - Files: gt_trading_execution.xml, gt_trading_search.xml, gt_utilities.xml

CRITICAL FIX: Lifetime Revenue Incremented at Wrong Time
  - Fixed: Lifetime revenue was being updated when trades were PLANNED, not when COMPLETED
  - This caused revenue to increase even when trades failed (e.g., cargo stuck loops)
  - Root cause: LogTradeOrder cue updated lifetime profit during trade assignment
  - Solution: Moved lifetime profit tracking to LogCompletedTrade cue (triggered by diff patch system)
  - Lifetime revenue now only increases when trades actually complete successfully
  - Logbook messages now show lifetime revenue in completion entries instead of planning entries
  - Files: gt_trade_logging.xml

========================================

Version 0.5.4 - 2025-10-21
--------------------------

CRITICAL FIX: Trade Search Not Respecting Threat Avoidance Blacklist
  - I thought this would be automatically handled by Vanilla
  - Fixed: Ships were accepting trades to blacklisted/dangerous sectors
  - Root cause: Neither live trade search nor cache validation checked threat intelligence
  - Solution: Added threat intelligence validation to BOTH systems:
    * Live trade search: GT_ValidateStation now filters stations in dangerous sectors
    * Cache validation: Cached trades now validated against current threat intelligence
  - Both buy AND sell station sectors are checked against ship's risk tolerance
  - Ships will only accept trades to sectors that are safe enough based on threat level
  - Files: gt_utilities.xml, gt_trading_search.xml


Version 0.5.3 - 2025-10-21
--------------------------

FIX: Mobile Satellite Intelligence Property Lookup Error
  - Fixed: Property lookup failure for $ship.isdocked causing MD script errors
  - Affects ships performing mobile satellite intelligence scans (not game breaking)
  - Files: gt_market_intelligence.xml

========================================

Version 0.5.2 - 2025-10-20
--------------------------

MAJOR ENHANCEMENT: Threat Avoidance Blacklist System Improvements
  - Blacklists now persistent across save/load cycles with proper ID storage in global.$GT_BlacklistID
  - Event-driven threat detection: updates blacklist instantly when threats are detected/cleared (removed 5-second polling loop)
  - Integrated X4's native enemy faction blocking using relation checkbox
  - Auto-recovery: automatically detects manually deleted blacklists and recreates them using GetBlacklistInfo2
  - New Settings in Global Menu (Threat Avoidance section):
    * "Block Enemy Faction Sectors" toggle - controls X4's native faction-based sector blocking
    * "Recreate Blacklist" button - manually recreate blacklist if needed (e.g. accidentally deleted)
  - Files: gt_threat_intelligence.xml, gt_blacklist_manager.lua (new), gt_global_settings.xml

OPTIMIZATION: Mobile Satellite Intelligence System
  - Fixed: Docked ships no longer scan for stations (they only scan when actively flying)
  - Optimization: Ships skip scanning stations whose factions already have player trade subscriptions
  - Improved efficiency by avoiding redundant trade data collection when subscriptions exist
  - Files: gt_market_intelligence.xml

CRITICAL FIX: New Game Initialization Errors & Menu API Integration
  - Fixed: Property lookup failures on new game start preventing global menu from opening
  - Fixed three cues that checked for global variables before initialization:
    * SystemMaintenance: Added @ to global.$GT_Initialized (ich koffer)
    * TrainingProgressReport: Added @ to global.$GT_Config.$XP.$Enabled (ich koffer)
    * ShipRecovery: Uses ? operator with boolean logic (global.$GT_Ships? and ...)
  - CRITICAL: Fixed Simple Menu API integration following SN Mod Support APIs best practices (RTFM)
    * Moved DefensiveEquipment settings initialization to menu registration phase (Reloaded event)
    * Settings now initialize BEFORE menu registration, not during menu open
    * Follows official SN Mod Support APIs pattern for options menu registration
    * Prevents ~30 property lookup errors when opening global menu on fresh games
  - Settings menu now loads correctly on fresh games without any errors
  - Files: gt_core_system.xml, gt_reporting.xml, gt_trading_maintenance.xml, gt_global_settings.xml

CRITICAL FIX: Missing Translations Across All Languages
  - Fixed missing translation IDs for Threat Avoidance settings (9050-9074)
  - Fixed missing translation IDs for Defensive Equipment settings (9151-9174)
  - Added missing trade logging and training message translations (1002, 3101, 3104-3106, 3200-3203)
  - Affected languages: German (L049), English (L001), Russian (L007), French (L033), Spanish (L034), Italian (L039)
  - Fixed "missing translation" errors appearing in X4 UI
  - Files: t/0001-L049.xml, t/0001-L001.xml, t/0001-L007.xml, t/0001-L033.xml, t/0001-L034.xml, t/0001-L039.xml

ENHANCEMENT: Training Required Notifications Now Logged
  - Fixed: "Training Required" notifications now written to logbook instead of just screen messages
  - All training notifications now appear in Upkeep category with clickable ship links
  - Includes:
    * "Training Required" - when pilot needs to advance skill level
    * "XP Blocked" - when pilot earns XP but can't advance without training
  - Notifications are highlighted and include interaction="showonmap" for easy navigation
  - No more missing important training alerts!
  - Files: gt_xp_training.xml

CRITICAL FIX: Multi-Language Text Resolution Issues
  - Fixed two critical issues where text displayed in wrong language despite player's game settings
  - Root cause: Text ID objects stored in variables don't auto-resolve to player's language; some strings were hardcoded in English
  - Solution: Use readtext.{page}.{line} syntax directly to force proper language resolution
  
  Issue 1: Pilot Rank Titles in Ship Names
    * Problem: Rank titles showing in German ("lehrling") instead of Portuguese ("Aprendiz") even when game is in language 55
    * Fix: Calculate text line ID dynamically (6001-6006) and use readtext.{77000}.{$textLineID}
    * Now properly displays: Aprendiz, Lehrling, Apprentice, etc. based on player's language
  
  Issue 2: Defensive Equipment Balance Profiles
    * Problem: Balance profile names showing in English instead of player's selected language
    * Fix: Created translation IDs (6101-6105) for all profiles and use readtext for dynamic resolution
    * Affected profiles: Balanced, Defensive, Trading-Focused, Heavy Defense, Tower Support
  
  - All languages now properly supported: Brazilian Portuguese (55), English (44), German (49), French (33), Spanish (34), Italian (39), Russian (7), International/Default (1)
  - Files: gt_xp_training.xml (lines 729-745), gt_global_settings.xml (lines 916-933), all translation files (0001-L*.xml)


Version 0.5.1 - 2025-10-20
--------------------------

CRITICAL FIX: Brazilian Portuguese Text Display Bug

  - All UI text now fully translated including:
    * Order names and descriptions
    * XP/training messages and immersive roleplay letters
    * Fleet coordination, territory management, ware filters
    * Auto-repair system settings
    * Threat Avoidance System settings (NEW)
    * Defensive Equipment Auto-Replenishment settings (NEW)
    * Ship Naming Configuration settings (NEW)
    * Pilot rank titles in ship names (Aprendiz, Mensageiro, etc.)
    * Error messages and trader titles
  - Files: 0001-L055.xml (NEW), 0001-L044.xml (updated), gt_global_settings.xml (updated), 
           gt_xp_training.xml (updated), content.xml (updated)

========================================

Version 0.5.0 - 2025-10-20
--------------------------

========== NEW FEATURES ==========

NEW FEATURE: Dynamic Blacklist System for Threat Intelligence
  - Added: Lua-based dynamic blacklist manager for real-time threat avoidance
  - Integrates with existing threat intelligence system (gt_threat_intelligence.xml)
  - Creates and manages fleet-wide blacklists via X4's internal FFI API
  - Threatened sectors automatically blacklisted using sector macro IDs
  - Blacklists applied only to fleet commanders and solo ships (subordinates inherit)
  - Empty blacklist created at game start/load for instant threat updates
  - Uses sn_mod_support_apis framework for Lua event handling
  - Vanilla pathfinding (gatedistance) automatically respects blacklists
  - No custom pathfinding needed - ships naturally avoid dangerous sectors
  - Configurable enable/disable in Global Settings
  - Configurable threat level threshold for blacklisting (default: 5)
  - Recurring sync (5s), apply (5s), and cleanup (30s) cycles
  - Files: gt_blacklist_manager.lua (NEW), gt_blacklist_loader.xml (NEW),
          gt_threat_intelligence.xml (modified), gt_global_settings.xml (modified)

NEW FEATURE: Defensive Equipment Auto-Replenishment System (Level 15)
  - Added: Automatic restocking of countermeasures AND units (drones/towers)
  - Countermeasures: Flares, chaff (ammostorage.countermeasure) - restocked to configured threshold
  - Units: Defense Drones, Cargo Drones, Repair Drones, Laser Towers (this.ship.units)
  - Configurable equipment balance profiles (5 presets: Balanced, Defense-Focused, etc.)
  - Configurable restock thresholds (countermeasures: 50%, deployables: 70%)
  - Individual toggles for each equipment type
  - Menu UI in Global Settings for all configuration options
  - Properly distinguishes ammostorage.countermeasure vs. ammostorage.deployable vs. this.ship.units
  - Ships request units using vanilla macro references (macro.ship_gen_s_fightingdrone_01_a_macro.ware)
  - Checks this.ship.units.maxcount for capacity (not units.capacity which returns null)
  - Uses add_build_to_modify_ship with proper shopping lists for BOTH ammo and units
  - Initial check: Ships check equipment status BEFORE starting to trade (not just after)
  - Ships no longer enter dangerous sectors with depleted defensive equipment
  - Prevents "one trade then restock" behavior, now "restock then trade"
  - Combined maintenance optimization (repair + equipment in single trip)
  - Integrated with existing auto-repair system (Level 12+)
  - Repair takes priority over equipment if both needed
  - Event-driven system using diff patch (order.resupply.xml)
  - Trading ships now properly maintain ALL defensive equipment in one trip
  - Failure handling: Monitors resupply orders, detects out-of-stock stations (60s timeout)
  - Detailed logbook messages for failed attempts with current equipment levels
  - Ships continue trading after failure and retry after next trade
  - Never get stuck waiting for unavailable equipment
  - Files: gt_maintenance.xml, gt_global_settings.xml, gt_defensive_equipment.xml, 
          gt_trading_signals.xml, gt_configuration.xml, order.resupply.xml (NEW),
          order.trade.galaxytrader.xml

MAJOR REFACTOR: Unified Maintenance System
  - Replaced separate repair/equipment systems with unified gt_maintenance.xml
  - Consolidates repair and equipment checks into single maintenance flow
  - MD scripts prepare data, AI scripts execute (vanilla-first approach)
  - Ships handle repair AND equipment restocking in one maintenance trip
  - Event-driven architecture using signal-based communication
  - Affects: All ships with Level 12+ (repair) and Level 15+ (equipment)
  - Files: gt_maintenance.xml (NEW), order.trade.galaxytrader.xml
  - Deprecated: gt_defensive_equipment.xml, gt_auto_repair.xml (logic moved to gt_maintenance.xml)

========== ENHANCEMENTS ==========

ENHANCEMENT: Logbook Category Reorganization
  - Improved: Reorganized logbook notifications to prevent "Upkeep" flooding
  - Level-up notifications now go to "News" category (was notification-only, now also in logbook)
  - Trade order logs moved to "Tips" category (was "Upkeep")
  - Training notices remain in "Upkeep" (correct category for maintenance)
  - Result: "Upkeep" category now only contains actual upkeep/maintenance notifications
  - Makes it much easier to spot important maintenance alerts
  - User-requested feature - Thanks to TheBaldNord (Nexus Mods) for the excellent suggestion!
  - Files: gt_xp_training.xml, gt_trade_logging.xml

ENHANCEMENT: MD Prepares, AI Executes Pattern
  - MD scripts (gt_maintenance.xml) now only prepare data and validate stations
  - AI scripts (order.trade.galaxytrader.xml) execute actual vanilla orders
  - Data stored in global variables: global.$GT_ResupplyOrders.{$ship}
  - AI uses vanilla actions: add_build_to_modify_ship (not create_order)
  - Prevents immediate="true" issues that terminate AI orders
  - Leverages vanilla's robust station finding, pathfinding, and execution
  - Eliminates need to duplicate complex vanilla logic
  - Files: gt_maintenance.xml, order.trade.galaxytrader.xml

ENHANCEMENT: Comprehensive Diagnostic Logging
  - Added extensive logging to every decision point in maintenance system
  - Logs include: station validation, stock checks, distance calculations, shopping lists
  - Uses visual markers for quick log scanning (checkmarks, warnings, errors, alerts, timers)
  - All critical decisions logged with chance="100" for reliable debugging
  - Equipment status logged with percentages and thresholds
  - Station selection logged with capabilities and distances
  - Makes troubleshooting equipment issues much easier
  - Files: gt_maintenance.xml, order.trade.galaxytrader.xml

ENHANCEMENT: Signal Flow Visibility
  - Added: Detailed logging for GT_No_Trade_Found signal (send + receive)
  - Trade execution now logs AllowIllegal setting when blocking illegal wares
  - AI script now logs signal reception with high visibility (chance="100")
  - Improved troubleshooting for stuck ships
  - Files: gt_trading_execution.xml, order.trade.galaxytrader.xml

========== BALANCE CHANGES ==========

BALANCE: XP Progression Rebalanced for Longer Campaigns
  - Rebalanced: XP values for more realistic progression (previously too fast)
  - Base XP per trade: 50 -> 8 (reduced by 84%)
  - Value divisor: 10,000 -> 100,000 (10x harder to get value bonus)
  - Quality multiplier: 0.5 -> 0.15 (reduced by 70%)
  - Distance divisor: 20 -> 50 (distance matters less)
  - XP cap per trade: 1000 -> 50 (prevents excessive gains)
  - Result: ~500 trades needed to reach max level (was ~85 trades)
  - With 50% multiplier: ~1000 trades | With 100%: ~500 trades | With 200%: ~250 trades
  - Provides meaningful progression throughout longer gameplay sessions
  - Files: gt_configuration.xml

========== CRITICAL FIXES ==========

CRITICAL FIX: Training Duration Showing "0 Minutes"
  - Fixed: Training messages showing "Die Prüfung wird etwa 0 Minuten dauern" (0 minutes duration)
  - Root cause: AI script (order.dock.train.xml) sent hardcoded 30-second duration to logging system
  - 30 seconds rounded down to 0 when converted to minutes for display
  - Solution: AI script now retrieves actual calculated duration from global.$GT_Pilots.{$pilot}.$TrainingDuration
  - No fallbacks - uses exact value calculated by MD system (10 min base + skill multiplier)
  - Removed unnecessary "minimum 1 minute" display logic - proper values don't need it
  - Training durations now correctly calculated based on config (10 min base + skill multiplier)
  - Files: order.dock.train.xml, gt_trade_logging.xml

CRITICAL FIX: Docking Check Log Flooding
  - Fixed: Debug logging causing massive log spam (thousands of lines per ship search)
  - Issue 1: Debug code was checking station capabilities using invalid syntax (class.ship_s)
  - Issue 2: After fix, debug logged EVERY trade pair evaluation during search loop
  - Issue 3: Selected trade logging failed with property lookup errors when $bestTrade incomplete
  - Each ship evaluates hundreds/thousands of trade combinations per search
  - Root cause: dockingallowed expects ship object, not ship class
  - Solution: Only log docking status for the FINAL SELECTED trade, not during search
  - Added: Null checks and safe operators (@) for trade property access
  - Debug output: "SELECTED TRADE DOCKING: Ship=X | BUY=Station [OK] | SELL=Station [OK]"
  - Summary: "Rejected X trade pairs due to incompatible docking" (counts only, no spam)
  - Prevents log flooding while maintaining diagnostic capability
  - Files: gt_trading_search.xml

CRITICAL FIX: XP Multiplier Not Applied
  - Fixed: XP Multiplier setting existed but was never applied to XP calculations
  - XP calculation was hardcoded, ignoring player's Global Settings multiplier
  - Implemented: Multiplier now properly applied to all XP gains in order.trade.perform.xml
  - Added: Save game compatibility with automatic validation (invalid values -> 100%)
  - Updated: Multiplier range from 10-100% to 50-200% (100% = default)
  - At 50%: ~1000 trades to max level | At 100%: ~500 trades | At 200%: ~250 trades
  - Allows players to customize progression speed to match playstyle
  - Files: order.trade.perform.xml, gt_global_settings.xml

CRITICAL FIX: Logbook Messages Too Long
  - Fixed: Fleet and Training reports exceeding X4's logbook message limit
  - Fleet Report: Reduced from showing 15 ships (120+ lines) to 5 ships with compact format
  - Training Report: Reduced from unlimited ships to 5 ships with compact format
  - Compact format: One line per ship instead of 8-10 lines
  - Example: "ABC-123: 1.2M Cr, 45 trades [ACTIVE]" or "ABC-123: 45% done, 12 min left"
  - Shows "+X more ships not shown" indicator when fleet exceeds display limit
  - Prevents logbook display errors and truncation issues
  - Files: gt_reporting.xml

CRITICAL FIX: M-Class Ships Stuck with Incompatible Docking
  - Fixed: M-class ships selecting factories with only E-piers (large L+ ship docks)
  - Fixed: Ships unable to complete trades, getting stuck with full cargo
  - Added: dockingallowed.{$ship} validation for BOTH buy and sell stations
  - Trade pairs where ship cannot dock are now skipped during search
  - Works for all ship classes (S/M/L/XL) with proper dock type checking
  - Debug logging shows docking status for SELECTED trade only (no spam)
  - Summary: "Rejected X trade pairs due to incompatible docking"
  - Prevents ships from selecting impossible trade routes
  - Files: gt_trading_search.xml

CRITICAL FIX: Illegal Ware Trade Loop
  - Fixed: Ships stuck in infinite loop when cache contains illegal wares
  - Added: Illegal ware filtering in cache search (respects AllowIllegal setting)
  - Cache now skips illegal trades and continues to next entry automatically
  - Added: $AllowIllegal parameter propagation (AI -> Queue -> Search -> Cache)
  - Ships without illegal trading enabled no longer attempt illegal trades
  - Fixed: Ship ENJ-399 loop issue (selecting Raumsprit repeatedly)
  - Files: gt_trading_search.xml, gt_trading_queue.xml, gt_trading_execution.xml

Version 0.4.0 - 2025-10-18
--------------------------

MAJOR: Trade Completion System Refactor
  - Replaced event_player_trade_completed monitoring with diff patch system
  - Created aiscripts/order.trade.perform.xml (diff patch for X4 native trade orders)
  - Created md/gt_trading_signals.xml (centralized signal router)
  - Removed ~140 lines of complex event monitoring from gt_trading_execution.xml
  - Trade completion/failure now detected via direct X4 engine signals
  - Better trade data (exact amounts, quality, failure reasons)
  - Better performance (event-driven, no polling)
  - Fixed: Subordinate ships now log trades correctly

Version 0.3.8 - 2025-10-18
--------------------------

Training System
  - Fixed: Training duration now uses configured values (not hardcoded 30s)
  - Fixed in: order.dock.train.xml

Trade Cache
  - Added: Cache replenishment system (forces live search if cache < 10 entries)
  - Cache now self-sustaining and never fully depletes
  - Fixed in: gt_trading_search.xml

Version 0.3.7 - 2025-10-18
--------------------------

Trade Cache - CRITICAL: Stale Tradeoffer Fix
  - Fixed: Cached trades failing with "insufficient funds" error
  - Fixed: Ships stuck in infinite restart loop
  - Cache now acts as "hint" - re-queries fresh offers from cached stations
  - Fixed: Corrected find_sell_offer/find_buy_offer syntax (tradepartner vs match_seller)
  - Fixed: Removed stale price pre-filter
  - Fixed: Swapped BuyOffer/SellOffer perspective (ship vs station)
  - Cache hits now work reliably
  - Fixed in: gt_trading_search.xml

Version 0.3.6 - 2025-10-18 (REVERTED)
--------------------------

Subordinate Ships
  - Attempted fix for subordinate trade order failures (reverted)

Version 0.3.5 - 2025-10-18
--------------------------

Trade Loop
  - Fixed: AI order rapid abort/restart cycle
  - Fixed: Ships accumulating multiple trade orders
  - Added: Check for existing orders before requesting new trades
  - Added: Clear stale training flags on order start
  - Fixed in: order.trade.galaxytrader.xml

Version 0.3.4 - 2025-10-18
--------------------------

Trade Queue
  - Fixed: Ships getting multiple trade orders simultaneously
  - Moved busy check to run BEFORE queueing (not after)
  - Ships now execute one trade at a time
  - Fixed in: gt_trading_ai.xml

Version 0.3.3 - 2025-10-18
--------------------------

Trade System
  - Major refactor: Separated XP tracking from ship availability checking
  - Simplified availability check (only checks: has trade orders? has training order?)
  - Removed complex cargo/dock/time validation
  - Ships no longer blocked from trading
  - Fixed in: gt_trading_queue.xml

Version 0.3.2 - 2025-10-18
--------------------------

Trade Cache
  - Added 4-layer validation for cached offers (availability, stock, prices)
  - Ships no longer get failed orders from stale cache
  - Fixed in: gt_trading_search.xml

Version 0.3.1 - 2025-10-18
--------------------------

Settings Menu
  - Removed unused "Notification Level" slider

Version 0.3.0 - 2025-10-18
--------------------------

Training & Settings
  - Removed testing mode (production durations active)
  - Updated slider ranges (ROI: 1-30%, XP: 10-100%)

Version 0.2.1 - 2025-10-18
--------------------------

FIXES:
  - Ship names now persist through interruptions
  - Trade cache system completely rewritten and working
  - Settings menu now appears correctly
  - Fixed table key errors in cache writes
  - Fixed reversed buy/sell assignments
  - Better error handling throughout

FILES CHANGED:
  - gt_core_system.xml
  - gt_territory_management.xml
  - gt_trading_search.xml
  - gt_trade_logging.xml
  - gt_trading_execution.xml
  - gt_market_intelligence.xml
  - gt_reporting.xml
  - gt_global_settings.xml
  - gt_trading_maintenance.xml
  - gt_fleet_coordination.xml

Version 0.2.0 - 2024-01-01
--------------------------

Initial Release

FEATURES:
  - Advanced Trading AI with smart route selection
  - XP Progression System (15 levels)
  - Training requirements at levels 3, 6, 9, and 12
  - Fleet Coordination
  - Mobile Satellite Intelligence (Level 9+)
  - Threat Intelligence System
  - Auto-Repair System (Level 12+)
  - Ship Management and automatic renaming
  - Configuration system

REQUIREMENTS:
  - SirNukes Mod Support APIs
  - X4 version 6.0+

Author: GoAhead
